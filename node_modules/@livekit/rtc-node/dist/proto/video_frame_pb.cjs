"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var video_frame_pb_exports = {};
__export(video_frame_pb_exports, {
  CaptureVideoFrameRequestSchema: () => CaptureVideoFrameRequestSchema,
  CaptureVideoFrameResponseSchema: () => CaptureVideoFrameResponseSchema,
  NewVideoSourceRequestSchema: () => NewVideoSourceRequestSchema,
  NewVideoSourceResponseSchema: () => NewVideoSourceResponseSchema,
  NewVideoStreamRequestSchema: () => NewVideoStreamRequestSchema,
  NewVideoStreamResponseSchema: () => NewVideoStreamResponseSchema,
  OwnedVideoBufferSchema: () => OwnedVideoBufferSchema,
  OwnedVideoSourceSchema: () => OwnedVideoSourceSchema,
  OwnedVideoStreamSchema: () => OwnedVideoStreamSchema,
  VideoBufferInfoSchema: () => VideoBufferInfoSchema,
  VideoBufferInfo_ComponentInfoSchema: () => VideoBufferInfo_ComponentInfoSchema,
  VideoBufferType: () => VideoBufferType,
  VideoBufferTypeSchema: () => VideoBufferTypeSchema,
  VideoCodec: () => VideoCodec,
  VideoCodecSchema: () => VideoCodecSchema,
  VideoConvertRequestSchema: () => VideoConvertRequestSchema,
  VideoConvertResponseSchema: () => VideoConvertResponseSchema,
  VideoFrameReceivedSchema: () => VideoFrameReceivedSchema,
  VideoResolutionSchema: () => VideoResolutionSchema,
  VideoRotation: () => VideoRotation,
  VideoRotationSchema: () => VideoRotationSchema,
  VideoSourceInfoSchema: () => VideoSourceInfoSchema,
  VideoSourceResolutionSchema: () => VideoSourceResolutionSchema,
  VideoSourceType: () => VideoSourceType,
  VideoSourceTypeSchema: () => VideoSourceTypeSchema,
  VideoStreamEOSSchema: () => VideoStreamEOSSchema,
  VideoStreamEventSchema: () => VideoStreamEventSchema,
  VideoStreamFromParticipantRequestSchema: () => VideoStreamFromParticipantRequestSchema,
  VideoStreamFromParticipantResponseSchema: () => VideoStreamFromParticipantResponseSchema,
  VideoStreamInfoSchema: () => VideoStreamInfoSchema,
  VideoStreamType: () => VideoStreamType,
  VideoStreamTypeSchema: () => VideoStreamTypeSchema,
  file_video_frame: () => file_video_frame
});
module.exports = __toCommonJS(video_frame_pb_exports);
var import_codegenv1 = require("@bufbuild/protobuf/codegenv1");
var import_handle_pb = require("./handle_pb.cjs");
var import_track_pb = require("./track_pb.cjs");
const file_video_frame = /* @__PURE__ */ (0, import_codegenv1.fileDesc)("ChF2aWRlb19mcmFtZS5wcm90bxINbGl2ZWtpdC5wcm90byKlAQoVTmV3VmlkZW9TdHJlYW1SZXF1ZXN0EhQKDHRyYWNrX2hhbmRsZRgBIAIoBBIsCgR0eXBlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbVR5cGUSLgoGZm9ybWF0GAMgASgOMh4ubGl2ZWtpdC5wcm90by5WaWRlb0J1ZmZlclR5cGUSGAoQbm9ybWFsaXplX3N0cmlkZRgEIAEoCCJJChZOZXdWaWRlb1N0cmVhbVJlc3BvbnNlEi8KBnN0cmVhbRgBIAIoCzIfLmxpdmVraXQucHJvdG8uT3duZWRWaWRlb1N0cmVhbSLpAQohVmlkZW9TdHJlYW1Gcm9tUGFydGljaXBhbnRSZXF1ZXN0EhoKEnBhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIsCgR0eXBlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbVR5cGUSMAoMdHJhY2tfc291cmNlGAMgAigOMhoubGl2ZWtpdC5wcm90by5UcmFja1NvdXJjZRIuCgZmb3JtYXQYBCABKA4yHi5saXZla2l0LnByb3RvLlZpZGVvQnVmZmVyVHlwZRIYChBub3JtYWxpemVfc3RyaWRlGAUgASgIIlUKIlZpZGVvU3RyZWFtRnJvbVBhcnRpY2lwYW50UmVzcG9uc2USLwoGc3RyZWFtGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZFZpZGVvU3RyZWFtIn8KFU5ld1ZpZGVvU291cmNlUmVxdWVzdBIsCgR0eXBlGAEgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1NvdXJjZVR5cGUSOAoKcmVzb2x1dGlvbhgCIAIoCzIkLmxpdmVraXQucHJvdG8uVmlkZW9Tb3VyY2VSZXNvbHV0aW9uIkkKFk5ld1ZpZGVvU291cmNlUmVzcG9uc2USLwoGc291cmNlGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZFZpZGVvU291cmNlIqcBChhDYXB0dXJlVmlkZW9GcmFtZVJlcXVlc3QSFQoNc291cmNlX2hhbmRsZRgBIAIoBBIuCgZidWZmZXIYAiACKAsyHi5saXZla2l0LnByb3RvLlZpZGVvQnVmZmVySW5mbxIUCgx0aW1lc3RhbXBfdXMYAyACKAMSLgoIcm90YXRpb24YBCACKA4yHC5saXZla2l0LnByb3RvLlZpZGVvUm90YXRpb24iGwoZQ2FwdHVyZVZpZGVvRnJhbWVSZXNwb25zZSKHAQoTVmlkZW9Db252ZXJ0UmVxdWVzdBIOCgZmbGlwX3kYASABKAgSLgoGYnVmZmVyGAIgAigLMh4ubGl2ZWtpdC5wcm90by5WaWRlb0J1ZmZlckluZm8SMAoIZHN0X3R5cGUYAyACKA4yHi5saXZla2l0LnByb3RvLlZpZGVvQnVmZmVyVHlwZSJlChRWaWRlb0NvbnZlcnRSZXNwb25zZRIPCgVlcnJvchgBIAEoCUgAEjEKBmJ1ZmZlchgCIAEoCzIfLmxpdmVraXQucHJvdG8uT3duZWRWaWRlb0J1ZmZlckgAQgkKB21lc3NhZ2UiRAoPVmlkZW9SZXNvbHV0aW9uEg0KBXdpZHRoGAEgAigNEg4KBmhlaWdodBgCIAIoDRISCgpmcmFtZV9yYXRlGAMgAigBIoMCCg9WaWRlb0J1ZmZlckluZm8SLAoEdHlwZRgBIAIoDjIeLmxpdmVraXQucHJvdG8uVmlkZW9CdWZmZXJUeXBlEg0KBXdpZHRoGAIgAigNEg4KBmhlaWdodBgDIAIoDRIQCghkYXRhX3B0chgEIAIoBBIOCgZzdHJpZGUYBiACKA0SQAoKY29tcG9uZW50cxgHIAMoCzIsLmxpdmVraXQucHJvdG8uVmlkZW9CdWZmZXJJbmZvLkNvbXBvbmVudEluZm8aPwoNQ29tcG9uZW50SW5mbxIQCghkYXRhX3B0chgBIAIoBBIOCgZzdHJpZGUYAiACKA0SDAoEc2l6ZRgDIAIoDSJvChBPd25lZFZpZGVvQnVmZmVyEi0KBmhhbmRsZRgBIAIoCzIdLmxpdmVraXQucHJvdG8uRmZpT3duZWRIYW5kbGUSLAoEaW5mbxgCIAIoCzIeLmxpdmVraXQucHJvdG8uVmlkZW9CdWZmZXJJbmZvIj8KD1ZpZGVvU3RyZWFtSW5mbxIsCgR0eXBlGAEgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbVR5cGUibwoQT3duZWRWaWRlb1N0cmVhbRItCgZoYW5kbGUYASACKAsyHS5saXZla2l0LnByb3RvLkZmaU93bmVkSGFuZGxlEiwKBGluZm8YAiACKAsyHi5saXZla2l0LnByb3RvLlZpZGVvU3RyZWFtSW5mbyKfAQoQVmlkZW9TdHJlYW1FdmVudBIVCg1zdHJlYW1faGFuZGxlGAEgAigEEjsKDmZyYW1lX3JlY2VpdmVkGAIgASgLMiEubGl2ZWtpdC5wcm90by5WaWRlb0ZyYW1lUmVjZWl2ZWRIABIsCgNlb3MYAyABKAsyHS5saXZla2l0LnByb3RvLlZpZGVvU3RyZWFtRU9TSABCCQoHbWVzc2FnZSKLAQoSVmlkZW9GcmFtZVJlY2VpdmVkEi8KBmJ1ZmZlchgBIAIoCzIfLmxpdmVraXQucHJvdG8uT3duZWRWaWRlb0J1ZmZlchIUCgx0aW1lc3RhbXBfdXMYAiACKAMSLgoIcm90YXRpb24YAyACKA4yHC5saXZla2l0LnByb3RvLlZpZGVvUm90YXRpb24iEAoOVmlkZW9TdHJlYW1FT1MiNgoVVmlkZW9Tb3VyY2VSZXNvbHV0aW9uEg0KBXdpZHRoGAEgAigNEg4KBmhlaWdodBgCIAIoDSI/Cg9WaWRlb1NvdXJjZUluZm8SLAoEdHlwZRgBIAIoDjIeLmxpdmVraXQucHJvdG8uVmlkZW9Tb3VyY2VUeXBlIm8KEE93bmVkVmlkZW9Tb3VyY2USLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRIsCgRpbmZvGAIgAigLMh4ubGl2ZWtpdC5wcm90by5WaWRlb1NvdXJjZUluZm8qMQoKVmlkZW9Db2RlYxIHCgNWUDgQABIICgRIMjY0EAESBwoDQVYxEAISBwoDVlA5EAMqbAoNVmlkZW9Sb3RhdGlvbhIUChBWSURFT19ST1RBVElPTl8wEAASFQoRVklERU9fUk9UQVRJT05fOTAQARIWChJWSURFT19ST1RBVElPTl8xODAQAhIWChJWSURFT19ST1RBVElPTl8yNzAQAyqBAQoPVmlkZW9CdWZmZXJUeXBlEggKBFJHQkEQABIICgRBQkdSEAESCAoEQVJHQhACEggKBEJHUkEQAxIJCgVSR0IyNBAEEggKBEk0MjAQBRIJCgVJNDIwQRAGEggKBEk0MjIQBxIICgRJNDQ0EAgSCAoESTAxMBAJEggKBE5WMTIQCipZCg9WaWRlb1N0cmVhbVR5cGUSFwoTVklERU9fU1RSRUFNX05BVElWRRAAEhYKElZJREVPX1NUUkVBTV9XRUJHTBABEhUKEVZJREVPX1NUUkVBTV9IVE1MEAIqKgoPVmlkZW9Tb3VyY2VUeXBlEhcKE1ZJREVPX1NPVVJDRV9OQVRJVkUQAEIQqgINTGl2ZUtpdC5Qcm90bw", [import_handle_pb.file_handle, import_track_pb.file_track]);
const NewVideoStreamRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 0);
const NewVideoStreamResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 1);
const VideoStreamFromParticipantRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 2);
const VideoStreamFromParticipantResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 3);
const NewVideoSourceRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 4);
const NewVideoSourceResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 5);
const CaptureVideoFrameRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 6);
const CaptureVideoFrameResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 7);
const VideoConvertRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 8);
const VideoConvertResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 9);
const VideoResolutionSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 10);
const VideoBufferInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 11);
const VideoBufferInfo_ComponentInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 11, 0);
const OwnedVideoBufferSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 12);
const VideoStreamInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 13);
const OwnedVideoStreamSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 14);
const VideoStreamEventSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 15);
const VideoFrameReceivedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 16);
const VideoStreamEOSSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 17);
const VideoSourceResolutionSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 18);
const VideoSourceInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 19);
const OwnedVideoSourceSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_video_frame, 20);
var VideoCodec = /* @__PURE__ */ ((VideoCodec2) => {
  VideoCodec2[VideoCodec2["VP8"] = 0] = "VP8";
  VideoCodec2[VideoCodec2["H264"] = 1] = "H264";
  VideoCodec2[VideoCodec2["AV1"] = 2] = "AV1";
  VideoCodec2[VideoCodec2["VP9"] = 3] = "VP9";
  return VideoCodec2;
})(VideoCodec || {});
const VideoCodecSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_video_frame, 0);
var VideoRotation = /* @__PURE__ */ ((VideoRotation2) => {
  VideoRotation2[VideoRotation2["VIDEO_ROTATION_0"] = 0] = "VIDEO_ROTATION_0";
  VideoRotation2[VideoRotation2["VIDEO_ROTATION_90"] = 1] = "VIDEO_ROTATION_90";
  VideoRotation2[VideoRotation2["VIDEO_ROTATION_180"] = 2] = "VIDEO_ROTATION_180";
  VideoRotation2[VideoRotation2["VIDEO_ROTATION_270"] = 3] = "VIDEO_ROTATION_270";
  return VideoRotation2;
})(VideoRotation || {});
const VideoRotationSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_video_frame, 1);
var VideoBufferType = /* @__PURE__ */ ((VideoBufferType2) => {
  VideoBufferType2[VideoBufferType2["RGBA"] = 0] = "RGBA";
  VideoBufferType2[VideoBufferType2["ABGR"] = 1] = "ABGR";
  VideoBufferType2[VideoBufferType2["ARGB"] = 2] = "ARGB";
  VideoBufferType2[VideoBufferType2["BGRA"] = 3] = "BGRA";
  VideoBufferType2[VideoBufferType2["RGB24"] = 4] = "RGB24";
  VideoBufferType2[VideoBufferType2["I420"] = 5] = "I420";
  VideoBufferType2[VideoBufferType2["I420A"] = 6] = "I420A";
  VideoBufferType2[VideoBufferType2["I422"] = 7] = "I422";
  VideoBufferType2[VideoBufferType2["I444"] = 8] = "I444";
  VideoBufferType2[VideoBufferType2["I010"] = 9] = "I010";
  VideoBufferType2[VideoBufferType2["NV12"] = 10] = "NV12";
  return VideoBufferType2;
})(VideoBufferType || {});
const VideoBufferTypeSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_video_frame, 2);
var VideoStreamType = /* @__PURE__ */ ((VideoStreamType2) => {
  VideoStreamType2[VideoStreamType2["VIDEO_STREAM_NATIVE"] = 0] = "VIDEO_STREAM_NATIVE";
  VideoStreamType2[VideoStreamType2["VIDEO_STREAM_WEBGL"] = 1] = "VIDEO_STREAM_WEBGL";
  VideoStreamType2[VideoStreamType2["VIDEO_STREAM_HTML"] = 2] = "VIDEO_STREAM_HTML";
  return VideoStreamType2;
})(VideoStreamType || {});
const VideoStreamTypeSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_video_frame, 3);
var VideoSourceType = /* @__PURE__ */ ((VideoSourceType2) => {
  VideoSourceType2[VideoSourceType2["VIDEO_SOURCE_NATIVE"] = 0] = "VIDEO_SOURCE_NATIVE";
  return VideoSourceType2;
})(VideoSourceType || {});
const VideoSourceTypeSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_video_frame, 4);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CaptureVideoFrameRequestSchema,
  CaptureVideoFrameResponseSchema,
  NewVideoSourceRequestSchema,
  NewVideoSourceResponseSchema,
  NewVideoStreamRequestSchema,
  NewVideoStreamResponseSchema,
  OwnedVideoBufferSchema,
  OwnedVideoSourceSchema,
  OwnedVideoStreamSchema,
  VideoBufferInfoSchema,
  VideoBufferInfo_ComponentInfoSchema,
  VideoBufferType,
  VideoBufferTypeSchema,
  VideoCodec,
  VideoCodecSchema,
  VideoConvertRequestSchema,
  VideoConvertResponseSchema,
  VideoFrameReceivedSchema,
  VideoResolutionSchema,
  VideoRotation,
  VideoRotationSchema,
  VideoSourceInfoSchema,
  VideoSourceResolutionSchema,
  VideoSourceType,
  VideoSourceTypeSchema,
  VideoStreamEOSSchema,
  VideoStreamEventSchema,
  VideoStreamFromParticipantRequestSchema,
  VideoStreamFromParticipantResponseSchema,
  VideoStreamInfoSchema,
  VideoStreamType,
  VideoStreamTypeSchema,
  file_video_frame
});
//# sourceMappingURL=video_frame_pb.cjs.map