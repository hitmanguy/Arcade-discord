{"version":3,"sources":["../../src/proto/track_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v2.2.0 with parameter \"target=ts,import_extension=js\"\n// @generated from file track.proto (package livekit.proto, syntax proto2)\n/* eslint-disable */\n\nimport type { GenEnum, GenFile, GenMessage } from \"@bufbuild/protobuf/codegenv1\";\nimport { enumDesc, fileDesc, messageDesc } from \"@bufbuild/protobuf/codegenv1\";\nimport type { EncryptionType } from \"./e2ee_pb.js\";\nimport { file_e2ee } from \"./e2ee_pb.js\";\nimport type { FfiOwnedHandle } from \"./handle_pb.js\";\nimport { file_handle } from \"./handle_pb.js\";\nimport type { RtcStats } from \"./stats_pb.js\";\nimport { file_stats } from \"./stats_pb.js\";\nimport type { Message } from \"@bufbuild/protobuf\";\n\n/**\n * Describes the file track.proto.\n */\nexport const file_track: GenFile = /*@__PURE__*/\n  fileDesc(\"Cgt0cmFjay5wcm90bxINbGl2ZWtpdC5wcm90byI+ChdDcmVhdGVWaWRlb1RyYWNrUmVxdWVzdBIMCgRuYW1lGAEgAigJEhUKDXNvdXJjZV9oYW5kbGUYAiACKAQiRAoYQ3JlYXRlVmlkZW9UcmFja1Jlc3BvbnNlEigKBXRyYWNrGAEgAigLMhkubGl2ZWtpdC5wcm90by5Pd25lZFRyYWNrIj4KF0NyZWF0ZUF1ZGlvVHJhY2tSZXF1ZXN0EgwKBG5hbWUYASACKAkSFQoNc291cmNlX2hhbmRsZRgCIAIoBCJEChhDcmVhdGVBdWRpb1RyYWNrUmVzcG9uc2USKAoFdHJhY2sYASACKAsyGS5saXZla2l0LnByb3RvLk93bmVkVHJhY2siJwoPR2V0U3RhdHNSZXF1ZXN0EhQKDHRyYWNrX2hhbmRsZRgBIAIoBCIkChBHZXRTdGF0c1Jlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIlsKEEdldFN0YXRzQ2FsbGJhY2sSEAoIYXN5bmNfaWQYASACKAQSDQoFZXJyb3IYAiABKAkSJgoFc3RhdHMYAyADKAsyFy5saXZla2l0LnByb3RvLlJ0Y1N0YXRzIgwKClRyYWNrRXZlbnQiowIKFFRyYWNrUHVibGljYXRpb25JbmZvEgsKA3NpZBgBIAIoCRIMCgRuYW1lGAIgAigJEiYKBGtpbmQYAyACKA4yGC5saXZla2l0LnByb3RvLlRyYWNrS2luZBIqCgZzb3VyY2UYBCACKA4yGi5saXZla2l0LnByb3RvLlRyYWNrU291cmNlEhMKC3NpbXVsY2FzdGVkGAUgAigIEg0KBXdpZHRoGAYgAigNEg4KBmhlaWdodBgHIAIoDRIRCgltaW1lX3R5cGUYCCACKAkSDQoFbXV0ZWQYCSACKAgSDgoGcmVtb3RlGAogAigIEjYKD2VuY3J5cHRpb25fdHlwZRgLIAIoDjIdLmxpdmVraXQucHJvdG8uRW5jcnlwdGlvblR5cGUieQoVT3duZWRUcmFja1B1YmxpY2F0aW9uEi0KBmhhbmRsZRgBIAIoCzIdLmxpdmVraXQucHJvdG8uRmZpT3duZWRIYW5kbGUSMQoEaW5mbxgCIAIoCzIjLmxpdmVraXQucHJvdG8uVHJhY2tQdWJsaWNhdGlvbkluZm8inwEKCVRyYWNrSW5mbxILCgNzaWQYASACKAkSDAoEbmFtZRgCIAIoCRImCgRraW5kGAMgAigOMhgubGl2ZWtpdC5wcm90by5UcmFja0tpbmQSMAoMc3RyZWFtX3N0YXRlGAQgAigOMhoubGl2ZWtpdC5wcm90by5TdHJlYW1TdGF0ZRINCgVtdXRlZBgFIAIoCBIOCgZyZW1vdGUYBiACKAgiYwoKT3duZWRUcmFjaxItCgZoYW5kbGUYASACKAsyHS5saXZla2l0LnByb3RvLkZmaU93bmVkSGFuZGxlEiYKBGluZm8YAiACKAsyGC5saXZla2l0LnByb3RvLlRyYWNrSW5mbyI7ChVMb2NhbFRyYWNrTXV0ZVJlcXVlc3QSFAoMdHJhY2tfaGFuZGxlGAEgAigEEgwKBG11dGUYAiACKAgiJwoWTG9jYWxUcmFja011dGVSZXNwb25zZRINCgVtdXRlZBgBIAIoCCJBChhFbmFibGVSZW1vdGVUcmFja1JlcXVlc3QSFAoMdHJhY2tfaGFuZGxlGAEgAigEEg8KB2VuYWJsZWQYAiACKAgiLAoZRW5hYmxlUmVtb3RlVHJhY2tSZXNwb25zZRIPCgdlbmFibGVkGAEgAigIKj0KCVRyYWNrS2luZBIQCgxLSU5EX1VOS05PV04QABIOCgpLSU5EX0FVRElPEAESDgoKS0lORF9WSURFTxACKoEBCgtUcmFja1NvdXJjZRISCg5TT1VSQ0VfVU5LTk9XThAAEhEKDVNPVVJDRV9DQU1FUkEQARIVChFTT1VSQ0VfTUlDUk9QSE9ORRACEhYKElNPVVJDRV9TQ1JFRU5TSEFSRRADEhwKGFNPVVJDRV9TQ1JFRU5TSEFSRV9BVURJTxAEKkQKC1N0cmVhbVN0YXRlEhEKDVNUQVRFX1VOS05PV04QABIQCgxTVEFURV9BQ1RJVkUQARIQCgxTVEFURV9QQVVTRUQQAkIQqgINTGl2ZUtpdC5Qcm90bw\", [file_e2ee, file_handle, file_stats]);\n\n/**\n * Create a new VideoTrack from a VideoSource\n *\n * @generated from message livekit.proto.CreateVideoTrackRequest\n */\nexport type CreateVideoTrackRequest = Message<\"livekit.proto.CreateVideoTrackRequest\"> & {\n  /**\n   * @generated from field: required string name = 1;\n   */\n  name: string;\n\n  /**\n   * @generated from field: required uint64 source_handle = 2;\n   */\n  sourceHandle: bigint;\n};\n\n/**\n * Describes the message livekit.proto.CreateVideoTrackRequest.\n * Use `create(CreateVideoTrackRequestSchema)` to create a new message.\n */\nexport const CreateVideoTrackRequestSchema: GenMessage<CreateVideoTrackRequest> = /*@__PURE__*/\n  messageDesc(file_track, 0);\n\n/**\n * @generated from message livekit.proto.CreateVideoTrackResponse\n */\nexport type CreateVideoTrackResponse = Message<\"livekit.proto.CreateVideoTrackResponse\"> & {\n  /**\n   * @generated from field: required livekit.proto.OwnedTrack track = 1;\n   */\n  track?: OwnedTrack;\n};\n\n/**\n * Describes the message livekit.proto.CreateVideoTrackResponse.\n * Use `create(CreateVideoTrackResponseSchema)` to create a new message.\n */\nexport const CreateVideoTrackResponseSchema: GenMessage<CreateVideoTrackResponse> = /*@__PURE__*/\n  messageDesc(file_track, 1);\n\n/**\n * Create a new AudioTrack from a AudioSource\n *\n * @generated from message livekit.proto.CreateAudioTrackRequest\n */\nexport type CreateAudioTrackRequest = Message<\"livekit.proto.CreateAudioTrackRequest\"> & {\n  /**\n   * @generated from field: required string name = 1;\n   */\n  name: string;\n\n  /**\n   * @generated from field: required uint64 source_handle = 2;\n   */\n  sourceHandle: bigint;\n};\n\n/**\n * Describes the message livekit.proto.CreateAudioTrackRequest.\n * Use `create(CreateAudioTrackRequestSchema)` to create a new message.\n */\nexport const CreateAudioTrackRequestSchema: GenMessage<CreateAudioTrackRequest> = /*@__PURE__*/\n  messageDesc(file_track, 2);\n\n/**\n * @generated from message livekit.proto.CreateAudioTrackResponse\n */\nexport type CreateAudioTrackResponse = Message<\"livekit.proto.CreateAudioTrackResponse\"> & {\n  /**\n   * @generated from field: required livekit.proto.OwnedTrack track = 1;\n   */\n  track?: OwnedTrack;\n};\n\n/**\n * Describes the message livekit.proto.CreateAudioTrackResponse.\n * Use `create(CreateAudioTrackResponseSchema)` to create a new message.\n */\nexport const CreateAudioTrackResponseSchema: GenMessage<CreateAudioTrackResponse> = /*@__PURE__*/\n  messageDesc(file_track, 3);\n\n/**\n * @generated from message livekit.proto.GetStatsRequest\n */\nexport type GetStatsRequest = Message<\"livekit.proto.GetStatsRequest\"> & {\n  /**\n   * @generated from field: required uint64 track_handle = 1;\n   */\n  trackHandle: bigint;\n};\n\n/**\n * Describes the message livekit.proto.GetStatsRequest.\n * Use `create(GetStatsRequestSchema)` to create a new message.\n */\nexport const GetStatsRequestSchema: GenMessage<GetStatsRequest> = /*@__PURE__*/\n  messageDesc(file_track, 4);\n\n/**\n * @generated from message livekit.proto.GetStatsResponse\n */\nexport type GetStatsResponse = Message<\"livekit.proto.GetStatsResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.GetStatsResponse.\n * Use `create(GetStatsResponseSchema)` to create a new message.\n */\nexport const GetStatsResponseSchema: GenMessage<GetStatsResponse> = /*@__PURE__*/\n  messageDesc(file_track, 5);\n\n/**\n * @generated from message livekit.proto.GetStatsCallback\n */\nexport type GetStatsCallback = Message<\"livekit.proto.GetStatsCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from field: optional string error = 2;\n   */\n  error: string;\n\n  /**\n   * @generated from field: repeated livekit.proto.RtcStats stats = 3;\n   */\n  stats: RtcStats[];\n};\n\n/**\n * Describes the message livekit.proto.GetStatsCallback.\n * Use `create(GetStatsCallbackSchema)` to create a new message.\n */\nexport const GetStatsCallbackSchema: GenMessage<GetStatsCallback> = /*@__PURE__*/\n  messageDesc(file_track, 6);\n\n/**\n * @generated from message livekit.proto.TrackEvent\n */\nexport type TrackEvent = Message<\"livekit.proto.TrackEvent\"> & {\n};\n\n/**\n * Describes the message livekit.proto.TrackEvent.\n * Use `create(TrackEventSchema)` to create a new message.\n */\nexport const TrackEventSchema: GenMessage<TrackEvent> = /*@__PURE__*/\n  messageDesc(file_track, 7);\n\n/**\n * @generated from message livekit.proto.TrackPublicationInfo\n */\nexport type TrackPublicationInfo = Message<\"livekit.proto.TrackPublicationInfo\"> & {\n  /**\n   * @generated from field: required string sid = 1;\n   */\n  sid: string;\n\n  /**\n   * @generated from field: required string name = 2;\n   */\n  name: string;\n\n  /**\n   * @generated from field: required livekit.proto.TrackKind kind = 3;\n   */\n  kind: TrackKind;\n\n  /**\n   * @generated from field: required livekit.proto.TrackSource source = 4;\n   */\n  source: TrackSource;\n\n  /**\n   * @generated from field: required bool simulcasted = 5;\n   */\n  simulcasted: boolean;\n\n  /**\n   * @generated from field: required uint32 width = 6;\n   */\n  width: number;\n\n  /**\n   * @generated from field: required uint32 height = 7;\n   */\n  height: number;\n\n  /**\n   * @generated from field: required string mime_type = 8;\n   */\n  mimeType: string;\n\n  /**\n   * @generated from field: required bool muted = 9;\n   */\n  muted: boolean;\n\n  /**\n   * @generated from field: required bool remote = 10;\n   */\n  remote: boolean;\n\n  /**\n   * @generated from field: required livekit.proto.EncryptionType encryption_type = 11;\n   */\n  encryptionType: EncryptionType;\n};\n\n/**\n * Describes the message livekit.proto.TrackPublicationInfo.\n * Use `create(TrackPublicationInfoSchema)` to create a new message.\n */\nexport const TrackPublicationInfoSchema: GenMessage<TrackPublicationInfo> = /*@__PURE__*/\n  messageDesc(file_track, 8);\n\n/**\n * @generated from message livekit.proto.OwnedTrackPublication\n */\nexport type OwnedTrackPublication = Message<\"livekit.proto.OwnedTrackPublication\"> & {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.TrackPublicationInfo info = 2;\n   */\n  info?: TrackPublicationInfo;\n};\n\n/**\n * Describes the message livekit.proto.OwnedTrackPublication.\n * Use `create(OwnedTrackPublicationSchema)` to create a new message.\n */\nexport const OwnedTrackPublicationSchema: GenMessage<OwnedTrackPublication> = /*@__PURE__*/\n  messageDesc(file_track, 9);\n\n/**\n * @generated from message livekit.proto.TrackInfo\n */\nexport type TrackInfo = Message<\"livekit.proto.TrackInfo\"> & {\n  /**\n   * @generated from field: required string sid = 1;\n   */\n  sid: string;\n\n  /**\n   * @generated from field: required string name = 2;\n   */\n  name: string;\n\n  /**\n   * @generated from field: required livekit.proto.TrackKind kind = 3;\n   */\n  kind: TrackKind;\n\n  /**\n   * @generated from field: required livekit.proto.StreamState stream_state = 4;\n   */\n  streamState: StreamState;\n\n  /**\n   * @generated from field: required bool muted = 5;\n   */\n  muted: boolean;\n\n  /**\n   * @generated from field: required bool remote = 6;\n   */\n  remote: boolean;\n};\n\n/**\n * Describes the message livekit.proto.TrackInfo.\n * Use `create(TrackInfoSchema)` to create a new message.\n */\nexport const TrackInfoSchema: GenMessage<TrackInfo> = /*@__PURE__*/\n  messageDesc(file_track, 10);\n\n/**\n * @generated from message livekit.proto.OwnedTrack\n */\nexport type OwnedTrack = Message<\"livekit.proto.OwnedTrack\"> & {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.TrackInfo info = 2;\n   */\n  info?: TrackInfo;\n};\n\n/**\n * Describes the message livekit.proto.OwnedTrack.\n * Use `create(OwnedTrackSchema)` to create a new message.\n */\nexport const OwnedTrackSchema: GenMessage<OwnedTrack> = /*@__PURE__*/\n  messageDesc(file_track, 11);\n\n/**\n * Mute/UnMute a track\n *\n * @generated from message livekit.proto.LocalTrackMuteRequest\n */\nexport type LocalTrackMuteRequest = Message<\"livekit.proto.LocalTrackMuteRequest\"> & {\n  /**\n   * @generated from field: required uint64 track_handle = 1;\n   */\n  trackHandle: bigint;\n\n  /**\n   * @generated from field: required bool mute = 2;\n   */\n  mute: boolean;\n};\n\n/**\n * Describes the message livekit.proto.LocalTrackMuteRequest.\n * Use `create(LocalTrackMuteRequestSchema)` to create a new message.\n */\nexport const LocalTrackMuteRequestSchema: GenMessage<LocalTrackMuteRequest> = /*@__PURE__*/\n  messageDesc(file_track, 12);\n\n/**\n * @generated from message livekit.proto.LocalTrackMuteResponse\n */\nexport type LocalTrackMuteResponse = Message<\"livekit.proto.LocalTrackMuteResponse\"> & {\n  /**\n   * @generated from field: required bool muted = 1;\n   */\n  muted: boolean;\n};\n\n/**\n * Describes the message livekit.proto.LocalTrackMuteResponse.\n * Use `create(LocalTrackMuteResponseSchema)` to create a new message.\n */\nexport const LocalTrackMuteResponseSchema: GenMessage<LocalTrackMuteResponse> = /*@__PURE__*/\n  messageDesc(file_track, 13);\n\n/**\n * Enable/Disable a remote track\n *\n * @generated from message livekit.proto.EnableRemoteTrackRequest\n */\nexport type EnableRemoteTrackRequest = Message<\"livekit.proto.EnableRemoteTrackRequest\"> & {\n  /**\n   * @generated from field: required uint64 track_handle = 1;\n   */\n  trackHandle: bigint;\n\n  /**\n   * @generated from field: required bool enabled = 2;\n   */\n  enabled: boolean;\n};\n\n/**\n * Describes the message livekit.proto.EnableRemoteTrackRequest.\n * Use `create(EnableRemoteTrackRequestSchema)` to create a new message.\n */\nexport const EnableRemoteTrackRequestSchema: GenMessage<EnableRemoteTrackRequest> = /*@__PURE__*/\n  messageDesc(file_track, 14);\n\n/**\n * @generated from message livekit.proto.EnableRemoteTrackResponse\n */\nexport type EnableRemoteTrackResponse = Message<\"livekit.proto.EnableRemoteTrackResponse\"> & {\n  /**\n   * @generated from field: required bool enabled = 1;\n   */\n  enabled: boolean;\n};\n\n/**\n * Describes the message livekit.proto.EnableRemoteTrackResponse.\n * Use `create(EnableRemoteTrackResponseSchema)` to create a new message.\n */\nexport const EnableRemoteTrackResponseSchema: GenMessage<EnableRemoteTrackResponse> = /*@__PURE__*/\n  messageDesc(file_track, 15);\n\n/**\n * @generated from enum livekit.proto.TrackKind\n */\nexport enum TrackKind {\n  /**\n   * @generated from enum value: KIND_UNKNOWN = 0;\n   */\n  KIND_UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: KIND_AUDIO = 1;\n   */\n  KIND_AUDIO = 1,\n\n  /**\n   * @generated from enum value: KIND_VIDEO = 2;\n   */\n  KIND_VIDEO = 2,\n}\n\n/**\n * Describes the enum livekit.proto.TrackKind.\n */\nexport const TrackKindSchema: GenEnum<TrackKind> = /*@__PURE__*/\n  enumDesc(file_track, 0);\n\n/**\n * @generated from enum livekit.proto.TrackSource\n */\nexport enum TrackSource {\n  /**\n   * @generated from enum value: SOURCE_UNKNOWN = 0;\n   */\n  SOURCE_UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: SOURCE_CAMERA = 1;\n   */\n  SOURCE_CAMERA = 1,\n\n  /**\n   * @generated from enum value: SOURCE_MICROPHONE = 2;\n   */\n  SOURCE_MICROPHONE = 2,\n\n  /**\n   * @generated from enum value: SOURCE_SCREENSHARE = 3;\n   */\n  SOURCE_SCREENSHARE = 3,\n\n  /**\n   * @generated from enum value: SOURCE_SCREENSHARE_AUDIO = 4;\n   */\n  SOURCE_SCREENSHARE_AUDIO = 4,\n}\n\n/**\n * Describes the enum livekit.proto.TrackSource.\n */\nexport const TrackSourceSchema: GenEnum<TrackSource> = /*@__PURE__*/\n  enumDesc(file_track, 1);\n\n/**\n * @generated from enum livekit.proto.StreamState\n */\nexport enum StreamState {\n  /**\n   * @generated from enum value: STATE_UNKNOWN = 0;\n   */\n  STATE_UNKNOWN = 0,\n\n  /**\n   * @generated from enum value: STATE_ACTIVE = 1;\n   */\n  STATE_ACTIVE = 1,\n\n  /**\n   * @generated from enum value: STATE_PAUSED = 2;\n   */\n  STATE_PAUSED = 2,\n}\n\n/**\n * Describes the enum livekit.proto.StreamState.\n */\nexport const StreamStateSchema: GenEnum<StreamState> = /*@__PURE__*/\n  enumDesc(file_track, 2);\n\n"],"mappings":"AAmBA,SAAS,UAAU,UAAU,mBAAmB;AAEhD,SAAS,iBAAiB;AAE1B,SAAS,mBAAmB;AAE5B,SAAS,kBAAkB;AAMpB,MAAM,aACX,yBAAS,0qEAA0qE,CAAC,WAAW,aAAa,UAAU,CAAC;AAuBltE,MAAM,gCACX,4BAAY,YAAY,CAAC;AAgBpB,MAAM,iCACX,4BAAY,YAAY,CAAC;AAuBpB,MAAM,gCACX,4BAAY,YAAY,CAAC;AAgBpB,MAAM,iCACX,4BAAY,YAAY,CAAC;AAgBpB,MAAM,wBACX,4BAAY,YAAY,CAAC;AAgBpB,MAAM,yBACX,4BAAY,YAAY,CAAC;AA0BpB,MAAM,yBACX,4BAAY,YAAY,CAAC;AAYpB,MAAM,mBACX,4BAAY,YAAY,CAAC;AAkEpB,MAAM,6BACX,4BAAY,YAAY,CAAC;AAqBpB,MAAM,8BACX,4BAAY,YAAY,CAAC;AAyCpB,MAAM,kBACX,4BAAY,YAAY,EAAE;AAqBrB,MAAM,mBACX,4BAAY,YAAY,EAAE;AAuBrB,MAAM,8BACX,4BAAY,YAAY,EAAE;AAgBrB,MAAM,+BACX,4BAAY,YAAY,EAAE;AAuBrB,MAAM,iCACX,4BAAY,YAAY,EAAE;AAgBrB,MAAM,kCACX,4BAAY,YAAY,EAAE;AAKrB,IAAK,YAAL,kBAAKA,eAAL;AAIL,EAAAA,sBAAA,kBAAe,KAAf;AAKA,EAAAA,sBAAA,gBAAa,KAAb;AAKA,EAAAA,sBAAA,gBAAa,KAAb;AAdU,SAAAA;AAAA,GAAA;AAoBL,MAAM,kBACX,yBAAS,YAAY,CAAC;AAKjB,IAAK,cAAL,kBAAKC,iBAAL;AAIL,EAAAA,0BAAA,oBAAiB,KAAjB;AAKA,EAAAA,0BAAA,mBAAgB,KAAhB;AAKA,EAAAA,0BAAA,uBAAoB,KAApB;AAKA,EAAAA,0BAAA,wBAAqB,KAArB;AAKA,EAAAA,0BAAA,8BAA2B,KAA3B;AAxBU,SAAAA;AAAA,GAAA;AA8BL,MAAM,oBACX,yBAAS,YAAY,CAAC;AAKjB,IAAK,cAAL,kBAAKC,iBAAL;AAIL,EAAAA,0BAAA,mBAAgB,KAAhB;AAKA,EAAAA,0BAAA,kBAAe,KAAf;AAKA,EAAAA,0BAAA,kBAAe,KAAf;AAdU,SAAAA;AAAA,GAAA;AAoBL,MAAM,oBACX,yBAAS,YAAY,CAAC;","names":["TrackKind","TrackSource","StreamState"]}