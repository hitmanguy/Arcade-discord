"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var room_pb_exports = {};
__export(room_pb_exports, {
  ActiveSpeakersChangedSchema: () => ActiveSpeakersChangedSchema,
  AttributesEntrySchema: () => AttributesEntrySchema,
  AudioEncodingSchema: () => AudioEncodingSchema,
  BufferInfoSchema: () => BufferInfoSchema,
  ChatMessageReceivedSchema: () => ChatMessageReceivedSchema,
  ChatMessageSchema: () => ChatMessageSchema,
  ConnectCallbackSchema: () => ConnectCallbackSchema,
  ConnectCallback_ParticipantWithTracksSchema: () => ConnectCallback_ParticipantWithTracksSchema,
  ConnectCallback_ResultSchema: () => ConnectCallback_ResultSchema,
  ConnectRequestSchema: () => ConnectRequestSchema,
  ConnectResponseSchema: () => ConnectResponseSchema,
  ConnectedSchema: () => ConnectedSchema,
  ConnectionQuality: () => ConnectionQuality,
  ConnectionQualityChangedSchema: () => ConnectionQualityChangedSchema,
  ConnectionQualitySchema: () => ConnectionQualitySchema,
  ConnectionState: () => ConnectionState,
  ConnectionStateChangedSchema: () => ConnectionStateChangedSchema,
  ConnectionStateSchema: () => ConnectionStateSchema,
  ContinualGatheringPolicy: () => ContinualGatheringPolicy,
  ContinualGatheringPolicySchema: () => ContinualGatheringPolicySchema,
  DataPacketKind: () => DataPacketKind,
  DataPacketKindSchema: () => DataPacketKindSchema,
  DataPacketReceivedSchema: () => DataPacketReceivedSchema,
  DisconnectCallbackSchema: () => DisconnectCallbackSchema,
  DisconnectReason: () => DisconnectReason,
  DisconnectReasonSchema: () => DisconnectReasonSchema,
  DisconnectRequestSchema: () => DisconnectRequestSchema,
  DisconnectResponseSchema: () => DisconnectResponseSchema,
  DisconnectedSchema: () => DisconnectedSchema,
  E2eeStateChangedSchema: () => E2eeStateChangedSchema,
  EditChatMessageRequestSchema: () => EditChatMessageRequestSchema,
  GetSessionStatsCallbackSchema: () => GetSessionStatsCallbackSchema,
  GetSessionStatsCallback_ResultSchema: () => GetSessionStatsCallback_ResultSchema,
  GetSessionStatsRequestSchema: () => GetSessionStatsRequestSchema,
  GetSessionStatsResponseSchema: () => GetSessionStatsResponseSchema,
  IceServerSchema: () => IceServerSchema,
  IceTransportType: () => IceTransportType,
  IceTransportTypeSchema: () => IceTransportTypeSchema,
  LocalTrackPublishedSchema: () => LocalTrackPublishedSchema,
  LocalTrackSubscribedSchema: () => LocalTrackSubscribedSchema,
  LocalTrackUnpublishedSchema: () => LocalTrackUnpublishedSchema,
  OwnedBufferSchema: () => OwnedBufferSchema,
  OwnedRoomSchema: () => OwnedRoomSchema,
  ParticipantAttributesChangedSchema: () => ParticipantAttributesChangedSchema,
  ParticipantConnectedSchema: () => ParticipantConnectedSchema,
  ParticipantDisconnectedSchema: () => ParticipantDisconnectedSchema,
  ParticipantMetadataChangedSchema: () => ParticipantMetadataChangedSchema,
  ParticipantNameChangedSchema: () => ParticipantNameChangedSchema,
  PublishDataCallbackSchema: () => PublishDataCallbackSchema,
  PublishDataRequestSchema: () => PublishDataRequestSchema,
  PublishDataResponseSchema: () => PublishDataResponseSchema,
  PublishSipDtmfCallbackSchema: () => PublishSipDtmfCallbackSchema,
  PublishSipDtmfRequestSchema: () => PublishSipDtmfRequestSchema,
  PublishSipDtmfResponseSchema: () => PublishSipDtmfResponseSchema,
  PublishTrackCallbackSchema: () => PublishTrackCallbackSchema,
  PublishTrackRequestSchema: () => PublishTrackRequestSchema,
  PublishTrackResponseSchema: () => PublishTrackResponseSchema,
  PublishTranscriptionCallbackSchema: () => PublishTranscriptionCallbackSchema,
  PublishTranscriptionRequestSchema: () => PublishTranscriptionRequestSchema,
  PublishTranscriptionResponseSchema: () => PublishTranscriptionResponseSchema,
  ReconnectedSchema: () => ReconnectedSchema,
  ReconnectingSchema: () => ReconnectingSchema,
  RoomEOSSchema: () => RoomEOSSchema,
  RoomEventSchema: () => RoomEventSchema,
  RoomInfoSchema: () => RoomInfoSchema,
  RoomMetadataChangedSchema: () => RoomMetadataChangedSchema,
  RoomOptionsSchema: () => RoomOptionsSchema,
  RoomSidChangedSchema: () => RoomSidChangedSchema,
  RtcConfigSchema: () => RtcConfigSchema,
  SendChatMessageCallbackSchema: () => SendChatMessageCallbackSchema,
  SendChatMessageRequestSchema: () => SendChatMessageRequestSchema,
  SendChatMessageResponseSchema: () => SendChatMessageResponseSchema,
  SetLocalAttributesCallbackSchema: () => SetLocalAttributesCallbackSchema,
  SetLocalAttributesRequestSchema: () => SetLocalAttributesRequestSchema,
  SetLocalAttributesResponseSchema: () => SetLocalAttributesResponseSchema,
  SetLocalMetadataCallbackSchema: () => SetLocalMetadataCallbackSchema,
  SetLocalMetadataRequestSchema: () => SetLocalMetadataRequestSchema,
  SetLocalMetadataResponseSchema: () => SetLocalMetadataResponseSchema,
  SetLocalNameCallbackSchema: () => SetLocalNameCallbackSchema,
  SetLocalNameRequestSchema: () => SetLocalNameRequestSchema,
  SetLocalNameResponseSchema: () => SetLocalNameResponseSchema,
  SetSubscribedRequestSchema: () => SetSubscribedRequestSchema,
  SetSubscribedResponseSchema: () => SetSubscribedResponseSchema,
  SipDTMFSchema: () => SipDTMFSchema,
  TrackMutedSchema: () => TrackMutedSchema,
  TrackPublishOptionsSchema: () => TrackPublishOptionsSchema,
  TrackPublishedSchema: () => TrackPublishedSchema,
  TrackSubscribedSchema: () => TrackSubscribedSchema,
  TrackSubscriptionFailedSchema: () => TrackSubscriptionFailedSchema,
  TrackUnmutedSchema: () => TrackUnmutedSchema,
  TrackUnpublishedSchema: () => TrackUnpublishedSchema,
  TrackUnsubscribedSchema: () => TrackUnsubscribedSchema,
  TranscriptionReceivedSchema: () => TranscriptionReceivedSchema,
  TranscriptionSegmentSchema: () => TranscriptionSegmentSchema,
  UnpublishTrackCallbackSchema: () => UnpublishTrackCallbackSchema,
  UnpublishTrackRequestSchema: () => UnpublishTrackRequestSchema,
  UnpublishTrackResponseSchema: () => UnpublishTrackResponseSchema,
  UserPacketSchema: () => UserPacketSchema,
  VideoEncodingSchema: () => VideoEncodingSchema,
  file_room: () => file_room
});
module.exports = __toCommonJS(room_pb_exports);
var import_codegenv1 = require("@bufbuild/protobuf/codegenv1");
var import_e2ee_pb = require("./e2ee_pb.cjs");
var import_handle_pb = require("./handle_pb.cjs");
var import_participant_pb = require("./participant_pb.cjs");
var import_track_pb = require("./track_pb.cjs");
var import_video_frame_pb = require("./video_frame_pb.cjs");
var import_stats_pb = require("./stats_pb.cjs");
const file_room = /* @__PURE__ */ (0, import_codegenv1.fileDesc)("Cgpyb29tLnByb3RvEg1saXZla2l0LnByb3RvIlkKDkNvbm5lY3RSZXF1ZXN0EgsKA3VybBgBIAIoCRINCgV0b2tlbhgCIAIoCRIrCgdvcHRpb25zGAMgAigLMhoubGl2ZWtpdC5wcm90by5Sb29tT3B0aW9ucyIjCg9Db25uZWN0UmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQivwMKD0Nvbm5lY3RDYWxsYmFjaxIQCghhc3luY19pZBgBIAIoBBIPCgVlcnJvchgCIAEoCUgAEjcKBnJlc3VsdBgDIAEoCzIlLmxpdmVraXQucHJvdG8uQ29ubmVjdENhbGxiYWNrLlJlc3VsdEgAGokBChVQYXJ0aWNpcGFudFdpdGhUcmFja3MSNAoLcGFydGljaXBhbnQYASACKAsyHy5saXZla2l0LnByb3RvLk93bmVkUGFydGljaXBhbnQSOgoMcHVibGljYXRpb25zGAIgAygLMiQubGl2ZWtpdC5wcm90by5Pd25lZFRyYWNrUHVibGljYXRpb24auAEKBlJlc3VsdBImCgRyb29tGAEgAigLMhgubGl2ZWtpdC5wcm90by5Pd25lZFJvb20SOgoRbG9jYWxfcGFydGljaXBhbnQYAiACKAsyHy5saXZla2l0LnByb3RvLk93bmVkUGFydGljaXBhbnQSSgoMcGFydGljaXBhbnRzGAMgAygLMjQubGl2ZWtpdC5wcm90by5Db25uZWN0Q2FsbGJhY2suUGFydGljaXBhbnRXaXRoVHJhY2tzQgkKB21lc3NhZ2UiKAoRRGlzY29ubmVjdFJlcXVlc3QSEwoLcm9vbV9oYW5kbGUYASACKAQiJgoSRGlzY29ubmVjdFJlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIiYKEkRpc2Nvbm5lY3RDYWxsYmFjaxIQCghhc3luY19pZBgBIAIoBCKCAQoTUHVibGlzaFRyYWNrUmVxdWVzdBIgChhsb2NhbF9wYXJ0aWNpcGFudF9oYW5kbGUYASACKAQSFAoMdHJhY2tfaGFuZGxlGAIgAigEEjMKB29wdGlvbnMYAyACKAsyIi5saXZla2l0LnByb3RvLlRyYWNrUHVibGlzaE9wdGlvbnMiKAoUUHVibGlzaFRyYWNrUmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQigQEKFFB1Ymxpc2hUcmFja0NhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg8KBWVycm9yGAIgASgJSAASOwoLcHVibGljYXRpb24YAyABKAsyJC5saXZla2l0LnByb3RvLk93bmVkVHJhY2tQdWJsaWNhdGlvbkgAQgkKB21lc3NhZ2UiZwoVVW5wdWJsaXNoVHJhY2tSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIRCgl0cmFja19zaWQYAiACKAkSGQoRc3RvcF9vbl91bnB1Ymxpc2gYAyACKAgiKgoWVW5wdWJsaXNoVHJhY2tSZXNwb25zZRIQCghhc3luY19pZBgBIAIoBCI5ChZVbnB1Ymxpc2hUcmFja0NhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIrkBChJQdWJsaXNoRGF0YVJlcXVlc3QSIAoYbG9jYWxfcGFydGljaXBhbnRfaGFuZGxlGAEgAigEEhAKCGRhdGFfcHRyGAIgAigEEhAKCGRhdGFfbGVuGAMgAigEEhAKCHJlbGlhYmxlGAQgAigIEhwKEGRlc3RpbmF0aW9uX3NpZHMYBSADKAlCAhgBEg0KBXRvcGljGAYgASgJEh4KFmRlc3RpbmF0aW9uX2lkZW50aXRpZXMYByADKAkiJwoTUHVibGlzaERhdGFSZXNwb25zZRIQCghhc3luY19pZBgBIAIoBCI2ChNQdWJsaXNoRGF0YUNhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIqYBChtQdWJsaXNoVHJhbnNjcmlwdGlvblJlcXVlc3QSIAoYbG9jYWxfcGFydGljaXBhbnRfaGFuZGxlGAEgAigEEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAIgAigJEhAKCHRyYWNrX2lkGAMgAigJEjUKCHNlZ21lbnRzGAQgAygLMiMubGl2ZWtpdC5wcm90by5UcmFuc2NyaXB0aW9uU2VnbWVudCIwChxQdWJsaXNoVHJhbnNjcmlwdGlvblJlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIj8KHFB1Ymxpc2hUcmFuc2NyaXB0aW9uQ2FsbGJhY2sSEAoIYXN5bmNfaWQYASACKAQSDQoFZXJyb3IYAiABKAkidgoVUHVibGlzaFNpcER0bWZSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIMCgRjb2RlGAIgAigNEg0KBWRpZ2l0GAMgAigJEh4KFmRlc3RpbmF0aW9uX2lkZW50aXRpZXMYBCADKAkiKgoWUHVibGlzaFNpcER0bWZSZXNwb25zZRIQCghhc3luY19pZBgBIAIoBCI5ChZQdWJsaXNoU2lwRHRtZkNhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIk0KF1NldExvY2FsTWV0YWRhdGFSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIQCghtZXRhZGF0YRgCIAIoCSIsChhTZXRMb2NhbE1ldGFkYXRhUmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQiOwoYU2V0TG9jYWxNZXRhZGF0YUNhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIoQBChZTZW5kQ2hhdE1lc3NhZ2VSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIPCgdtZXNzYWdlGAIgAigJEh4KFmRlc3RpbmF0aW9uX2lkZW50aXRpZXMYAyADKAkSFwoPc2VuZGVyX2lkZW50aXR5GAQgASgJIrwBChZFZGl0Q2hhdE1lc3NhZ2VSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIRCgllZGl0X3RleHQYAiACKAkSNAoQb3JpZ2luYWxfbWVzc2FnZRgDIAIoCzIaLmxpdmVraXQucHJvdG8uQ2hhdE1lc3NhZ2USHgoWZGVzdGluYXRpb25faWRlbnRpdGllcxgEIAMoCRIXCg9zZW5kZXJfaWRlbnRpdHkYBSABKAkiKwoXU2VuZENoYXRNZXNzYWdlUmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQiewoXU2VuZENoYXRNZXNzYWdlQ2FsbGJhY2sSEAoIYXN5bmNfaWQYASACKAQSDwoFZXJyb3IYAiABKAlIABIyCgxjaGF0X21lc3NhZ2UYAyABKAsyGi5saXZla2l0LnByb3RvLkNoYXRNZXNzYWdlSABCCQoHbWVzc2FnZSJxChlTZXRMb2NhbEF0dHJpYnV0ZXNSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIyCgphdHRyaWJ1dGVzGAIgAygLMh4ubGl2ZWtpdC5wcm90by5BdHRyaWJ1dGVzRW50cnkiLQoPQXR0cmlidXRlc0VudHJ5EgsKA2tleRgBIAIoCRINCgV2YWx1ZRgCIAIoCSIuChpTZXRMb2NhbEF0dHJpYnV0ZXNSZXNwb25zZRIQCghhc3luY19pZBgBIAIoBCI9ChpTZXRMb2NhbEF0dHJpYnV0ZXNDYWxsYmFjaxIQCghhc3luY19pZBgBIAIoBBINCgVlcnJvchgCIAEoCSJFChNTZXRMb2NhbE5hbWVSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIMCgRuYW1lGAIgAigJIigKFFNldExvY2FsTmFtZVJlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIjcKFFNldExvY2FsTmFtZUNhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIkUKFFNldFN1YnNjcmliZWRSZXF1ZXN0EhEKCXN1YnNjcmliZRgBIAIoCBIaChJwdWJsaWNhdGlvbl9oYW5kbGUYAiACKAQiFwoVU2V0U3Vic2NyaWJlZFJlc3BvbnNlIi0KFkdldFNlc3Npb25TdGF0c1JlcXVlc3QSEwoLcm9vbV9oYW5kbGUYASACKAQiKwoXR2V0U2Vzc2lvblN0YXRzUmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQi9wEKF0dldFNlc3Npb25TdGF0c0NhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg8KBWVycm9yGAIgASgJSAASPwoGcmVzdWx0GAMgASgLMi0ubGl2ZWtpdC5wcm90by5HZXRTZXNzaW9uU3RhdHNDYWxsYmFjay5SZXN1bHRIABptCgZSZXN1bHQSMAoPcHVibGlzaGVyX3N0YXRzGAEgAygLMhcubGl2ZWtpdC5wcm90by5SdGNTdGF0cxIxChBzdWJzY3JpYmVyX3N0YXRzGAIgAygLMhcubGl2ZWtpdC5wcm90by5SdGNTdGF0c0IJCgdtZXNzYWdlIjsKDVZpZGVvRW5jb2RpbmcSEwoLbWF4X2JpdHJhdGUYASACKAQSFQoNbWF4X2ZyYW1lcmF0ZRgCIAIoASIkCg1BdWRpb0VuY29kaW5nEhMKC21heF9iaXRyYXRlGAEgAigEIpoCChNUcmFja1B1Ymxpc2hPcHRpb25zEjQKDnZpZGVvX2VuY29kaW5nGAEgASgLMhwubGl2ZWtpdC5wcm90by5WaWRlb0VuY29kaW5nEjQKDmF1ZGlvX2VuY29kaW5nGAIgASgLMhwubGl2ZWtpdC5wcm90by5BdWRpb0VuY29kaW5nEi4KC3ZpZGVvX2NvZGVjGAMgASgOMhkubGl2ZWtpdC5wcm90by5WaWRlb0NvZGVjEgsKA2R0eBgEIAEoCBILCgNyZWQYBSABKAgSEQoJc2ltdWxjYXN0GAYgASgIEioKBnNvdXJjZRgHIAEoDjIaLmxpdmVraXQucHJvdG8uVHJhY2tTb3VyY2USDgoGc3RyZWFtGAggASgJIj0KCUljZVNlcnZlchIMCgR1cmxzGAEgAygJEhAKCHVzZXJuYW1lGAIgASgJEhAKCHBhc3N3b3JkGAMgASgJIsQBCglSdGNDb25maWcSOwoSaWNlX3RyYW5zcG9ydF90eXBlGAEgASgOMh8ubGl2ZWtpdC5wcm90by5JY2VUcmFuc3BvcnRUeXBlEksKGmNvbnRpbnVhbF9nYXRoZXJpbmdfcG9saWN5GAIgASgOMicubGl2ZWtpdC5wcm90by5Db250aW51YWxHYXRoZXJpbmdQb2xpY3kSLQoLaWNlX3NlcnZlcnMYAyADKAsyGC5saXZla2l0LnByb3RvLkljZVNlcnZlciK+AQoLUm9vbU9wdGlvbnMSFgoOYXV0b19zdWJzY3JpYmUYASABKAgSFwoPYWRhcHRpdmVfc3RyZWFtGAIgASgIEhAKCGR5bmFjYXN0GAMgASgIEigKBGUyZWUYBCABKAsyGi5saXZla2l0LnByb3RvLkUyZWVPcHRpb25zEiwKCnJ0Y19jb25maWcYBSABKAsyGC5saXZla2l0LnByb3RvLlJ0Y0NvbmZpZxIUCgxqb2luX3JldHJpZXMYBiABKA0idwoUVHJhbnNjcmlwdGlvblNlZ21lbnQSCgoCaWQYASACKAkSDAoEdGV4dBgCIAIoCRISCgpzdGFydF90aW1lGAMgAigEEhAKCGVuZF90aW1lGAQgAigEEg0KBWZpbmFsGAUgAigIEhAKCGxhbmd1YWdlGAYgAigJIjAKCkJ1ZmZlckluZm8SEAoIZGF0YV9wdHIYASACKAQSEAoIZGF0YV9sZW4YAiACKAQiZQoLT3duZWRCdWZmZXISLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRInCgRkYXRhGAIgAigLMhkubGl2ZWtpdC5wcm90by5CdWZmZXJJbmZvIt0OCglSb29tRXZlbnQSEwoLcm9vbV9oYW5kbGUYASACKAQSRAoVcGFydGljaXBhbnRfY29ubmVjdGVkGAIgASgLMiMubGl2ZWtpdC5wcm90by5QYXJ0aWNpcGFudENvbm5lY3RlZEgAEkoKGHBhcnRpY2lwYW50X2Rpc2Nvbm5lY3RlZBgDIAEoCzImLmxpdmVraXQucHJvdG8uUGFydGljaXBhbnREaXNjb25uZWN0ZWRIABJDChVsb2NhbF90cmFja19wdWJsaXNoZWQYBCABKAsyIi5saXZla2l0LnByb3RvLkxvY2FsVHJhY2tQdWJsaXNoZWRIABJHChdsb2NhbF90cmFja191bnB1Ymxpc2hlZBgFIAEoCzIkLmxpdmVraXQucHJvdG8uTG9jYWxUcmFja1VucHVibGlzaGVkSAASRQoWbG9jYWxfdHJhY2tfc3Vic2NyaWJlZBgGIAEoCzIjLmxpdmVraXQucHJvdG8uTG9jYWxUcmFja1N1YnNjcmliZWRIABI4Cg90cmFja19wdWJsaXNoZWQYByABKAsyHS5saXZla2l0LnByb3RvLlRyYWNrUHVibGlzaGVkSAASPAoRdHJhY2tfdW5wdWJsaXNoZWQYCCABKAsyHy5saXZla2l0LnByb3RvLlRyYWNrVW5wdWJsaXNoZWRIABI6ChB0cmFja19zdWJzY3JpYmVkGAkgASgLMh4ubGl2ZWtpdC5wcm90by5UcmFja1N1YnNjcmliZWRIABI+ChJ0cmFja191bnN1YnNjcmliZWQYCiABKAsyIC5saXZla2l0LnByb3RvLlRyYWNrVW5zdWJzY3JpYmVkSAASSwoZdHJhY2tfc3Vic2NyaXB0aW9uX2ZhaWxlZBgLIAEoCzImLmxpdmVraXQucHJvdG8uVHJhY2tTdWJzY3JpcHRpb25GYWlsZWRIABIwCgt0cmFja19tdXRlZBgMIAEoCzIZLmxpdmVraXQucHJvdG8uVHJhY2tNdXRlZEgAEjQKDXRyYWNrX3VubXV0ZWQYDSABKAsyGy5saXZla2l0LnByb3RvLlRyYWNrVW5tdXRlZEgAEkcKF2FjdGl2ZV9zcGVha2Vyc19jaGFuZ2VkGA4gASgLMiQubGl2ZWtpdC5wcm90by5BY3RpdmVTcGVha2Vyc0NoYW5nZWRIABJDChVyb29tX21ldGFkYXRhX2NoYW5nZWQYDyABKAsyIi5saXZla2l0LnByb3RvLlJvb21NZXRhZGF0YUNoYW5nZWRIABI5ChByb29tX3NpZF9jaGFuZ2VkGBAgASgLMh0ubGl2ZWtpdC5wcm90by5Sb29tU2lkQ2hhbmdlZEgAElEKHHBhcnRpY2lwYW50X21ldGFkYXRhX2NoYW5nZWQYESABKAsyKS5saXZla2l0LnByb3RvLlBhcnRpY2lwYW50TWV0YWRhdGFDaGFuZ2VkSAASSQoYcGFydGljaXBhbnRfbmFtZV9jaGFuZ2VkGBIgASgLMiUubGl2ZWtpdC5wcm90by5QYXJ0aWNpcGFudE5hbWVDaGFuZ2VkSAASVQoecGFydGljaXBhbnRfYXR0cmlidXRlc19jaGFuZ2VkGBMgASgLMisubGl2ZWtpdC5wcm90by5QYXJ0aWNpcGFudEF0dHJpYnV0ZXNDaGFuZ2VkSAASTQoaY29ubmVjdGlvbl9xdWFsaXR5X2NoYW5nZWQYFCABKAsyJy5saXZla2l0LnByb3RvLkNvbm5lY3Rpb25RdWFsaXR5Q2hhbmdlZEgAEkkKGGNvbm5lY3Rpb25fc3RhdGVfY2hhbmdlZBgVIAEoCzIlLmxpdmVraXQucHJvdG8uQ29ubmVjdGlvblN0YXRlQ2hhbmdlZEgAEjMKDGRpc2Nvbm5lY3RlZBgWIAEoCzIbLmxpdmVraXQucHJvdG8uRGlzY29ubmVjdGVkSAASMwoMcmVjb25uZWN0aW5nGBcgASgLMhsubGl2ZWtpdC5wcm90by5SZWNvbm5lY3RpbmdIABIxCgtyZWNvbm5lY3RlZBgYIAEoCzIaLmxpdmVraXQucHJvdG8uUmVjb25uZWN0ZWRIABI9ChJlMmVlX3N0YXRlX2NoYW5nZWQYGSABKAsyHy5saXZla2l0LnByb3RvLkUyZWVTdGF0ZUNoYW5nZWRIABIlCgNlb3MYGiABKAsyFi5saXZla2l0LnByb3RvLlJvb21FT1NIABJBChRkYXRhX3BhY2tldF9yZWNlaXZlZBgbIAEoCzIhLmxpdmVraXQucHJvdG8uRGF0YVBhY2tldFJlY2VpdmVkSAASRgoWdHJhbnNjcmlwdGlvbl9yZWNlaXZlZBgcIAEoCzIkLmxpdmVraXQucHJvdG8uVHJhbnNjcmlwdGlvblJlY2VpdmVkSAASOgoMY2hhdF9tZXNzYWdlGB0gASgLMiIubGl2ZWtpdC5wcm90by5DaGF0TWVzc2FnZVJlY2VpdmVkSABCCQoHbWVzc2FnZSI3CghSb29tSW5mbxILCgNzaWQYASABKAkSDAoEbmFtZRgCIAIoCRIQCghtZXRhZGF0YRgDIAIoCSJhCglPd25lZFJvb20SLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRIlCgRpbmZvGAIgAigLMhcubGl2ZWtpdC5wcm90by5Sb29tSW5mbyJFChRQYXJ0aWNpcGFudENvbm5lY3RlZBItCgRpbmZvGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZFBhcnRpY2lwYW50IjcKF1BhcnRpY2lwYW50RGlzY29ubmVjdGVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJIigKE0xvY2FsVHJhY2tQdWJsaXNoZWQSEQoJdHJhY2tfc2lkGAEgAigJIjAKFUxvY2FsVHJhY2tVbnB1Ymxpc2hlZBIXCg9wdWJsaWNhdGlvbl9zaWQYASACKAkiKQoUTG9jYWxUcmFja1N1YnNjcmliZWQSEQoJdHJhY2tfc2lkGAIgAigJImkKDlRyYWNrUHVibGlzaGVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEjkKC3B1YmxpY2F0aW9uGAIgAigLMiQubGl2ZWtpdC5wcm90by5Pd25lZFRyYWNrUHVibGljYXRpb24iSQoQVHJhY2tVbnB1Ymxpc2hlZBIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgBIAIoCRIXCg9wdWJsaWNhdGlvbl9zaWQYAiACKAkiWQoPVHJhY2tTdWJzY3JpYmVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEigKBXRyYWNrGAIgAigLMhkubGl2ZWtpdC5wcm90by5Pd25lZFRyYWNrIkQKEVRyYWNrVW5zdWJzY3JpYmVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEhEKCXRyYWNrX3NpZBgCIAIoCSJZChdUcmFja1N1YnNjcmlwdGlvbkZhaWxlZBIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgBIAIoCRIRCgl0cmFja19zaWQYAiACKAkSDQoFZXJyb3IYAyACKAkiPQoKVHJhY2tNdXRlZBIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgBIAIoCRIRCgl0cmFja19zaWQYAiACKAkiPwoMVHJhY2tVbm11dGVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEhEKCXRyYWNrX3NpZBgCIAIoCSJfChBFMmVlU3RhdGVDaGFuZ2VkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEi0KBXN0YXRlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5FbmNyeXB0aW9uU3RhdGUiNwoVQWN0aXZlU3BlYWtlcnNDaGFuZ2VkEh4KFnBhcnRpY2lwYW50X2lkZW50aXRpZXMYASADKAkiJwoTUm9vbU1ldGFkYXRhQ2hhbmdlZBIQCghtZXRhZGF0YRgBIAIoCSIdCg5Sb29tU2lkQ2hhbmdlZBILCgNzaWQYASACKAkiTAoaUGFydGljaXBhbnRNZXRhZGF0YUNoYW5nZWQSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSEAoIbWV0YWRhdGEYAiACKAkirAEKHFBhcnRpY2lwYW50QXR0cmlidXRlc0NoYW5nZWQSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSMgoKYXR0cmlidXRlcxgCIAMoCzIeLmxpdmVraXQucHJvdG8uQXR0cmlidXRlc0VudHJ5EjoKEmNoYW5nZWRfYXR0cmlidXRlcxgDIAMoCzIeLmxpdmVraXQucHJvdG8uQXR0cmlidXRlc0VudHJ5IkQKFlBhcnRpY2lwYW50TmFtZUNoYW5nZWQSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSDAoEbmFtZRgCIAIoCSJrChhDb25uZWN0aW9uUXVhbGl0eUNoYW5nZWQSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSMQoHcXVhbGl0eRgCIAIoDjIgLmxpdmVraXQucHJvdG8uQ29ubmVjdGlvblF1YWxpdHkiRQoKVXNlclBhY2tldBIoCgRkYXRhGAEgAigLMhoubGl2ZWtpdC5wcm90by5Pd25lZEJ1ZmZlchINCgV0b3BpYxgCIAEoCSJ5CgtDaGF0TWVzc2FnZRIKCgJpZBgBIAIoCRIRCgl0aW1lc3RhbXAYAiACKAMSDwoHbWVzc2FnZRgDIAIoCRIWCg5lZGl0X3RpbWVzdGFtcBgEIAEoAxIPCgdkZWxldGVkGAUgASgIEhEKCWdlbmVyYXRlZBgGIAEoCCJgChNDaGF0TWVzc2FnZVJlY2VpdmVkEisKB21lc3NhZ2UYASACKAsyGi5saXZla2l0LnByb3RvLkNoYXRNZXNzYWdlEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAIgAigJIiYKB1NpcERUTUYSDAoEY29kZRgBIAIoDRINCgVkaWdpdBgCIAEoCSK/AQoSRGF0YVBhY2tldFJlY2VpdmVkEisKBGtpbmQYASACKA4yHS5saXZla2l0LnByb3RvLkRhdGFQYWNrZXRLaW5kEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAIgAigJEikKBHVzZXIYBCABKAsyGS5saXZla2l0LnByb3RvLlVzZXJQYWNrZXRIABIqCghzaXBfZHRtZhgFIAEoCzIWLmxpdmVraXQucHJvdG8uU2lwRFRNRkgAQgcKBXZhbHVlIn8KFVRyYW5zY3JpcHRpb25SZWNlaXZlZBIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgBIAEoCRIRCgl0cmFja19zaWQYAiABKAkSNQoIc2VnbWVudHMYAyADKAsyIy5saXZla2l0LnByb3RvLlRyYW5zY3JpcHRpb25TZWdtZW50IkcKFkNvbm5lY3Rpb25TdGF0ZUNoYW5nZWQSLQoFc3RhdGUYASACKA4yHi5saXZla2l0LnByb3RvLkNvbm5lY3Rpb25TdGF0ZSILCglDb25uZWN0ZWQiPwoMRGlzY29ubmVjdGVkEi8KBnJlYXNvbhgBIAIoDjIfLmxpdmVraXQucHJvdG8uRGlzY29ubmVjdFJlYXNvbiIOCgxSZWNvbm5lY3RpbmciDQoLUmVjb25uZWN0ZWQiCQoHUm9vbUVPUypQChBJY2VUcmFuc3BvcnRUeXBlEhMKD1RSQU5TUE9SVF9SRUxBWRAAEhQKEFRSQU5TUE9SVF9OT0hPU1QQARIRCg1UUkFOU1BPUlRfQUxMEAIqQwoYQ29udGludWFsR2F0aGVyaW5nUG9saWN5Eg8KC0dBVEhFUl9PTkNFEAASFgoSR0FUSEVSX0NPTlRJTlVBTExZEAEqYAoRQ29ubmVjdGlvblF1YWxpdHkSEAoMUVVBTElUWV9QT09SEAASEAoMUVVBTElUWV9HT09EEAESFQoRUVVBTElUWV9FWENFTExFTlQQAhIQCgxRVUFMSVRZX0xPU1QQAypTCg9Db25uZWN0aW9uU3RhdGUSFQoRQ09OTl9ESVNDT05ORUNURUQQABISCg5DT05OX0NPTk5FQ1RFRBABEhUKEUNPTk5fUkVDT05ORUNUSU5HEAIqMwoORGF0YVBhY2tldEtpbmQSDgoKS0lORF9MT1NTWRAAEhEKDUtJTkRfUkVMSUFCTEUQASrsAQoQRGlzY29ubmVjdFJlYXNvbhISCg5VTktOT1dOX1JFQVNPThAAEhQKEENMSUVOVF9JTklUSUFURUQQARIWChJEVVBMSUNBVEVfSURFTlRJVFkQAhITCg9TRVJWRVJfU0hVVERPV04QAxIXChNQQVJUSUNJUEFOVF9SRU1PVkVEEAQSEAoMUk9PTV9ERUxFVEVEEAUSEgoOU1RBVEVfTUlTTUFUQ0gQBhIQCgxKT0lOX0ZBSUxVUkUQBxINCglNSUdSQVRJT04QCBIQCgxTSUdOQUxfQ0xPU0UQCRIPCgtST09NX0NMT1NFRBAKQhCqAg1MaXZlS2l0LlByb3Rv", [import_e2ee_pb.file_e2ee, import_handle_pb.file_handle, import_participant_pb.file_participant, import_track_pb.file_track, import_video_frame_pb.file_video_frame, import_stats_pb.file_stats]);
const ConnectRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 0);
const ConnectResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 1);
const ConnectCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 2);
const ConnectCallback_ParticipantWithTracksSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 2, 0);
const ConnectCallback_ResultSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 2, 1);
const DisconnectRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 3);
const DisconnectResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 4);
const DisconnectCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 5);
const PublishTrackRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 6);
const PublishTrackResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 7);
const PublishTrackCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 8);
const UnpublishTrackRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 9);
const UnpublishTrackResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 10);
const UnpublishTrackCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 11);
const PublishDataRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 12);
const PublishDataResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 13);
const PublishDataCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 14);
const PublishTranscriptionRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 15);
const PublishTranscriptionResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 16);
const PublishTranscriptionCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 17);
const PublishSipDtmfRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 18);
const PublishSipDtmfResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 19);
const PublishSipDtmfCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 20);
const SetLocalMetadataRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 21);
const SetLocalMetadataResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 22);
const SetLocalMetadataCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 23);
const SendChatMessageRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 24);
const EditChatMessageRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 25);
const SendChatMessageResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 26);
const SendChatMessageCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 27);
const SetLocalAttributesRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 28);
const AttributesEntrySchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 29);
const SetLocalAttributesResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 30);
const SetLocalAttributesCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 31);
const SetLocalNameRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 32);
const SetLocalNameResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 33);
const SetLocalNameCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 34);
const SetSubscribedRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 35);
const SetSubscribedResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 36);
const GetSessionStatsRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 37);
const GetSessionStatsResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 38);
const GetSessionStatsCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 39);
const GetSessionStatsCallback_ResultSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 39, 0);
const VideoEncodingSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 40);
const AudioEncodingSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 41);
const TrackPublishOptionsSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 42);
const IceServerSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 43);
const RtcConfigSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 44);
const RoomOptionsSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 45);
const TranscriptionSegmentSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 46);
const BufferInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 47);
const OwnedBufferSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 48);
const RoomEventSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 49);
const RoomInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 50);
const OwnedRoomSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 51);
const ParticipantConnectedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 52);
const ParticipantDisconnectedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 53);
const LocalTrackPublishedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 54);
const LocalTrackUnpublishedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 55);
const LocalTrackSubscribedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 56);
const TrackPublishedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 57);
const TrackUnpublishedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 58);
const TrackSubscribedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 59);
const TrackUnsubscribedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 60);
const TrackSubscriptionFailedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 61);
const TrackMutedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 62);
const TrackUnmutedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 63);
const E2eeStateChangedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 64);
const ActiveSpeakersChangedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 65);
const RoomMetadataChangedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 66);
const RoomSidChangedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 67);
const ParticipantMetadataChangedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 68);
const ParticipantAttributesChangedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 69);
const ParticipantNameChangedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 70);
const ConnectionQualityChangedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 71);
const UserPacketSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 72);
const ChatMessageSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 73);
const ChatMessageReceivedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 74);
const SipDTMFSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 75);
const DataPacketReceivedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 76);
const TranscriptionReceivedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 77);
const ConnectionStateChangedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 78);
const ConnectedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 79);
const DisconnectedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 80);
const ReconnectingSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 81);
const ReconnectedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 82);
const RoomEOSSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_room, 83);
var IceTransportType = /* @__PURE__ */ ((IceTransportType2) => {
  IceTransportType2[IceTransportType2["TRANSPORT_RELAY"] = 0] = "TRANSPORT_RELAY";
  IceTransportType2[IceTransportType2["TRANSPORT_NOHOST"] = 1] = "TRANSPORT_NOHOST";
  IceTransportType2[IceTransportType2["TRANSPORT_ALL"] = 2] = "TRANSPORT_ALL";
  return IceTransportType2;
})(IceTransportType || {});
const IceTransportTypeSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_room, 0);
var ContinualGatheringPolicy = /* @__PURE__ */ ((ContinualGatheringPolicy2) => {
  ContinualGatheringPolicy2[ContinualGatheringPolicy2["GATHER_ONCE"] = 0] = "GATHER_ONCE";
  ContinualGatheringPolicy2[ContinualGatheringPolicy2["GATHER_CONTINUALLY"] = 1] = "GATHER_CONTINUALLY";
  return ContinualGatheringPolicy2;
})(ContinualGatheringPolicy || {});
const ContinualGatheringPolicySchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_room, 1);
var ConnectionQuality = /* @__PURE__ */ ((ConnectionQuality2) => {
  ConnectionQuality2[ConnectionQuality2["QUALITY_POOR"] = 0] = "QUALITY_POOR";
  ConnectionQuality2[ConnectionQuality2["QUALITY_GOOD"] = 1] = "QUALITY_GOOD";
  ConnectionQuality2[ConnectionQuality2["QUALITY_EXCELLENT"] = 2] = "QUALITY_EXCELLENT";
  ConnectionQuality2[ConnectionQuality2["QUALITY_LOST"] = 3] = "QUALITY_LOST";
  return ConnectionQuality2;
})(ConnectionQuality || {});
const ConnectionQualitySchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_room, 2);
var ConnectionState = /* @__PURE__ */ ((ConnectionState2) => {
  ConnectionState2[ConnectionState2["CONN_DISCONNECTED"] = 0] = "CONN_DISCONNECTED";
  ConnectionState2[ConnectionState2["CONN_CONNECTED"] = 1] = "CONN_CONNECTED";
  ConnectionState2[ConnectionState2["CONN_RECONNECTING"] = 2] = "CONN_RECONNECTING";
  return ConnectionState2;
})(ConnectionState || {});
const ConnectionStateSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_room, 3);
var DataPacketKind = /* @__PURE__ */ ((DataPacketKind2) => {
  DataPacketKind2[DataPacketKind2["KIND_LOSSY"] = 0] = "KIND_LOSSY";
  DataPacketKind2[DataPacketKind2["KIND_RELIABLE"] = 1] = "KIND_RELIABLE";
  return DataPacketKind2;
})(DataPacketKind || {});
const DataPacketKindSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_room, 4);
var DisconnectReason = /* @__PURE__ */ ((DisconnectReason2) => {
  DisconnectReason2[DisconnectReason2["UNKNOWN_REASON"] = 0] = "UNKNOWN_REASON";
  DisconnectReason2[DisconnectReason2["CLIENT_INITIATED"] = 1] = "CLIENT_INITIATED";
  DisconnectReason2[DisconnectReason2["DUPLICATE_IDENTITY"] = 2] = "DUPLICATE_IDENTITY";
  DisconnectReason2[DisconnectReason2["SERVER_SHUTDOWN"] = 3] = "SERVER_SHUTDOWN";
  DisconnectReason2[DisconnectReason2["PARTICIPANT_REMOVED"] = 4] = "PARTICIPANT_REMOVED";
  DisconnectReason2[DisconnectReason2["ROOM_DELETED"] = 5] = "ROOM_DELETED";
  DisconnectReason2[DisconnectReason2["STATE_MISMATCH"] = 6] = "STATE_MISMATCH";
  DisconnectReason2[DisconnectReason2["JOIN_FAILURE"] = 7] = "JOIN_FAILURE";
  DisconnectReason2[DisconnectReason2["MIGRATION"] = 8] = "MIGRATION";
  DisconnectReason2[DisconnectReason2["SIGNAL_CLOSE"] = 9] = "SIGNAL_CLOSE";
  DisconnectReason2[DisconnectReason2["ROOM_CLOSED"] = 10] = "ROOM_CLOSED";
  return DisconnectReason2;
})(DisconnectReason || {});
const DisconnectReasonSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_room, 5);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ActiveSpeakersChangedSchema,
  AttributesEntrySchema,
  AudioEncodingSchema,
  BufferInfoSchema,
  ChatMessageReceivedSchema,
  ChatMessageSchema,
  ConnectCallbackSchema,
  ConnectCallback_ParticipantWithTracksSchema,
  ConnectCallback_ResultSchema,
  ConnectRequestSchema,
  ConnectResponseSchema,
  ConnectedSchema,
  ConnectionQuality,
  ConnectionQualityChangedSchema,
  ConnectionQualitySchema,
  ConnectionState,
  ConnectionStateChangedSchema,
  ConnectionStateSchema,
  ContinualGatheringPolicy,
  ContinualGatheringPolicySchema,
  DataPacketKind,
  DataPacketKindSchema,
  DataPacketReceivedSchema,
  DisconnectCallbackSchema,
  DisconnectReason,
  DisconnectReasonSchema,
  DisconnectRequestSchema,
  DisconnectResponseSchema,
  DisconnectedSchema,
  E2eeStateChangedSchema,
  EditChatMessageRequestSchema,
  GetSessionStatsCallbackSchema,
  GetSessionStatsCallback_ResultSchema,
  GetSessionStatsRequestSchema,
  GetSessionStatsResponseSchema,
  IceServerSchema,
  IceTransportType,
  IceTransportTypeSchema,
  LocalTrackPublishedSchema,
  LocalTrackSubscribedSchema,
  LocalTrackUnpublishedSchema,
  OwnedBufferSchema,
  OwnedRoomSchema,
  ParticipantAttributesChangedSchema,
  ParticipantConnectedSchema,
  ParticipantDisconnectedSchema,
  ParticipantMetadataChangedSchema,
  ParticipantNameChangedSchema,
  PublishDataCallbackSchema,
  PublishDataRequestSchema,
  PublishDataResponseSchema,
  PublishSipDtmfCallbackSchema,
  PublishSipDtmfRequestSchema,
  PublishSipDtmfResponseSchema,
  PublishTrackCallbackSchema,
  PublishTrackRequestSchema,
  PublishTrackResponseSchema,
  PublishTranscriptionCallbackSchema,
  PublishTranscriptionRequestSchema,
  PublishTranscriptionResponseSchema,
  ReconnectedSchema,
  ReconnectingSchema,
  RoomEOSSchema,
  RoomEventSchema,
  RoomInfoSchema,
  RoomMetadataChangedSchema,
  RoomOptionsSchema,
  RoomSidChangedSchema,
  RtcConfigSchema,
  SendChatMessageCallbackSchema,
  SendChatMessageRequestSchema,
  SendChatMessageResponseSchema,
  SetLocalAttributesCallbackSchema,
  SetLocalAttributesRequestSchema,
  SetLocalAttributesResponseSchema,
  SetLocalMetadataCallbackSchema,
  SetLocalMetadataRequestSchema,
  SetLocalMetadataResponseSchema,
  SetLocalNameCallbackSchema,
  SetLocalNameRequestSchema,
  SetLocalNameResponseSchema,
  SetSubscribedRequestSchema,
  SetSubscribedResponseSchema,
  SipDTMFSchema,
  TrackMutedSchema,
  TrackPublishOptionsSchema,
  TrackPublishedSchema,
  TrackSubscribedSchema,
  TrackSubscriptionFailedSchema,
  TrackUnmutedSchema,
  TrackUnpublishedSchema,
  TrackUnsubscribedSchema,
  TranscriptionReceivedSchema,
  TranscriptionSegmentSchema,
  UnpublishTrackCallbackSchema,
  UnpublishTrackRequestSchema,
  UnpublishTrackResponseSchema,
  UserPacketSchema,
  VideoEncodingSchema,
  file_room
});
//# sourceMappingURL=room_pb.cjs.map