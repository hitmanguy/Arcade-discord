"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var audio_frame_pb_exports = {};
__export(audio_frame_pb_exports, {
  AudioFrameBufferInfoSchema: () => AudioFrameBufferInfoSchema,
  AudioFrameReceivedSchema: () => AudioFrameReceivedSchema,
  AudioResamplerInfoSchema: () => AudioResamplerInfoSchema,
  AudioSourceInfoSchema: () => AudioSourceInfoSchema,
  AudioSourceOptionsSchema: () => AudioSourceOptionsSchema,
  AudioSourceType: () => AudioSourceType,
  AudioSourceTypeSchema: () => AudioSourceTypeSchema,
  AudioStreamEOSSchema: () => AudioStreamEOSSchema,
  AudioStreamEventSchema: () => AudioStreamEventSchema,
  AudioStreamFromParticipantRequestSchema: () => AudioStreamFromParticipantRequestSchema,
  AudioStreamFromParticipantResponseSchema: () => AudioStreamFromParticipantResponseSchema,
  AudioStreamInfoSchema: () => AudioStreamInfoSchema,
  AudioStreamType: () => AudioStreamType,
  AudioStreamTypeSchema: () => AudioStreamTypeSchema,
  CaptureAudioFrameCallbackSchema: () => CaptureAudioFrameCallbackSchema,
  CaptureAudioFrameRequestSchema: () => CaptureAudioFrameRequestSchema,
  CaptureAudioFrameResponseSchema: () => CaptureAudioFrameResponseSchema,
  ClearAudioBufferRequestSchema: () => ClearAudioBufferRequestSchema,
  ClearAudioBufferResponseSchema: () => ClearAudioBufferResponseSchema,
  FlushSoxResamplerRequestSchema: () => FlushSoxResamplerRequestSchema,
  FlushSoxResamplerResponseSchema: () => FlushSoxResamplerResponseSchema,
  NewAudioResamplerRequestSchema: () => NewAudioResamplerRequestSchema,
  NewAudioResamplerResponseSchema: () => NewAudioResamplerResponseSchema,
  NewAudioSourceRequestSchema: () => NewAudioSourceRequestSchema,
  NewAudioSourceResponseSchema: () => NewAudioSourceResponseSchema,
  NewAudioStreamRequestSchema: () => NewAudioStreamRequestSchema,
  NewAudioStreamResponseSchema: () => NewAudioStreamResponseSchema,
  NewSoxResamplerRequestSchema: () => NewSoxResamplerRequestSchema,
  NewSoxResamplerResponseSchema: () => NewSoxResamplerResponseSchema,
  OwnedAudioFrameBufferSchema: () => OwnedAudioFrameBufferSchema,
  OwnedAudioResamplerSchema: () => OwnedAudioResamplerSchema,
  OwnedAudioSourceSchema: () => OwnedAudioSourceSchema,
  OwnedAudioStreamSchema: () => OwnedAudioStreamSchema,
  OwnedSoxResamplerSchema: () => OwnedSoxResamplerSchema,
  PushSoxResamplerRequestSchema: () => PushSoxResamplerRequestSchema,
  PushSoxResamplerResponseSchema: () => PushSoxResamplerResponseSchema,
  RemixAndResampleRequestSchema: () => RemixAndResampleRequestSchema,
  RemixAndResampleResponseSchema: () => RemixAndResampleResponseSchema,
  SoxFlagBits: () => SoxFlagBits,
  SoxFlagBitsSchema: () => SoxFlagBitsSchema,
  SoxQualityRecipe: () => SoxQualityRecipe,
  SoxQualityRecipeSchema: () => SoxQualityRecipeSchema,
  SoxResamplerDataType: () => SoxResamplerDataType,
  SoxResamplerDataTypeSchema: () => SoxResamplerDataTypeSchema,
  SoxResamplerInfoSchema: () => SoxResamplerInfoSchema,
  file_audio_frame: () => file_audio_frame
});
module.exports = __toCommonJS(audio_frame_pb_exports);
var import_codegenv1 = require("@bufbuild/protobuf/codegenv1");
var import_handle_pb = require("./handle_pb.cjs");
var import_track_pb = require("./track_pb.cjs");
const file_audio_frame = /* @__PURE__ */ (0, import_codegenv1.fileDesc)("ChFhdWRpb19mcmFtZS5wcm90bxINbGl2ZWtpdC5wcm90byKGAQoVTmV3QXVkaW9TdHJlYW1SZXF1ZXN0EhQKDHRyYWNrX2hhbmRsZRgBIAIoBBIsCgR0eXBlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5BdWRpb1N0cmVhbVR5cGUSEwoLc2FtcGxlX3JhdGUYAyABKA0SFAoMbnVtX2NoYW5uZWxzGAQgASgNIkkKFk5ld0F1ZGlvU3RyZWFtUmVzcG9uc2USLwoGc3RyZWFtGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZEF1ZGlvU3RyZWFtIsoBCiFBdWRpb1N0cmVhbUZyb21QYXJ0aWNpcGFudFJlcXVlc3QSGgoScGFydGljaXBhbnRfaGFuZGxlGAEgAigEEiwKBHR5cGUYAiACKA4yHi5saXZla2l0LnByb3RvLkF1ZGlvU3RyZWFtVHlwZRIwCgx0cmFja19zb3VyY2UYAyABKA4yGi5saXZla2l0LnByb3RvLlRyYWNrU291cmNlEhMKC3NhbXBsZV9yYXRlGAUgASgNEhQKDG51bV9jaGFubmVscxgGIAEoDSJVCiJBdWRpb1N0cmVhbUZyb21QYXJ0aWNpcGFudFJlc3BvbnNlEi8KBnN0cmVhbRgBIAIoCzIfLmxpdmVraXQucHJvdG8uT3duZWRBdWRpb1N0cmVhbSK7AQoVTmV3QXVkaW9Tb3VyY2VSZXF1ZXN0EiwKBHR5cGUYASACKA4yHi5saXZla2l0LnByb3RvLkF1ZGlvU291cmNlVHlwZRIyCgdvcHRpb25zGAIgASgLMiEubGl2ZWtpdC5wcm90by5BdWRpb1NvdXJjZU9wdGlvbnMSEwoLc2FtcGxlX3JhdGUYAyACKA0SFAoMbnVtX2NoYW5uZWxzGAQgAigNEhUKDXF1ZXVlX3NpemVfbXMYBSABKA0iSQoWTmV3QXVkaW9Tb3VyY2VSZXNwb25zZRIvCgZzb3VyY2UYASACKAsyHy5saXZla2l0LnByb3RvLk93bmVkQXVkaW9Tb3VyY2UiZgoYQ2FwdHVyZUF1ZGlvRnJhbWVSZXF1ZXN0EhUKDXNvdXJjZV9oYW5kbGUYASACKAQSMwoGYnVmZmVyGAIgAigLMiMubGl2ZWtpdC5wcm90by5BdWRpb0ZyYW1lQnVmZmVySW5mbyItChlDYXB0dXJlQXVkaW9GcmFtZVJlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIjwKGUNhcHR1cmVBdWRpb0ZyYW1lQ2FsbGJhY2sSEAoIYXN5bmNfaWQYASACKAQSDQoFZXJyb3IYAiABKAkiMAoXQ2xlYXJBdWRpb0J1ZmZlclJlcXVlc3QSFQoNc291cmNlX2hhbmRsZRgBIAIoBCIaChhDbGVhckF1ZGlvQnVmZmVyUmVzcG9uc2UiGgoYTmV3QXVkaW9SZXNhbXBsZXJSZXF1ZXN0IlIKGU5ld0F1ZGlvUmVzYW1wbGVyUmVzcG9uc2USNQoJcmVzYW1wbGVyGAEgAigLMiIubGl2ZWtpdC5wcm90by5Pd25lZEF1ZGlvUmVzYW1wbGVyIpMBChdSZW1peEFuZFJlc2FtcGxlUmVxdWVzdBIYChByZXNhbXBsZXJfaGFuZGxlGAEgAigEEjMKBmJ1ZmZlchgCIAIoCzIjLmxpdmVraXQucHJvdG8uQXVkaW9GcmFtZUJ1ZmZlckluZm8SFAoMbnVtX2NoYW5uZWxzGAMgAigNEhMKC3NhbXBsZV9yYXRlGAQgAigNIlAKGFJlbWl4QW5kUmVzYW1wbGVSZXNwb25zZRI0CgZidWZmZXIYASACKAsyJC5saXZla2l0LnByb3RvLk93bmVkQXVkaW9GcmFtZUJ1ZmZlciKcAgoWTmV3U294UmVzYW1wbGVyUmVxdWVzdBISCgppbnB1dF9yYXRlGAEgAigBEhMKC291dHB1dF9yYXRlGAIgAigBEhQKDG51bV9jaGFubmVscxgDIAIoDRI8Cg9pbnB1dF9kYXRhX3R5cGUYBCACKA4yIy5saXZla2l0LnByb3RvLlNveFJlc2FtcGxlckRhdGFUeXBlEj0KEG91dHB1dF9kYXRhX3R5cGUYBSACKA4yIy5saXZla2l0LnByb3RvLlNveFJlc2FtcGxlckRhdGFUeXBlEjcKDnF1YWxpdHlfcmVjaXBlGAYgAigOMh8ubGl2ZWtpdC5wcm90by5Tb3hRdWFsaXR5UmVjaXBlEg0KBWZsYWdzGAcgASgNImwKF05ld1NveFJlc2FtcGxlclJlc3BvbnNlEjUKCXJlc2FtcGxlchgBIAEoCzIgLmxpdmVraXQucHJvdG8uT3duZWRTb3hSZXNhbXBsZXJIABIPCgVlcnJvchgCIAEoCUgAQgkKB21lc3NhZ2UiUwoXUHVzaFNveFJlc2FtcGxlclJlcXVlc3QSGAoQcmVzYW1wbGVyX2hhbmRsZRgBIAIoBBIQCghkYXRhX3B0chgCIAIoBBIMCgRzaXplGAMgAigNIksKGFB1c2hTb3hSZXNhbXBsZXJSZXNwb25zZRISCgpvdXRwdXRfcHRyGAEgAigEEgwKBHNpemUYAiACKA0SDQoFZXJyb3IYAyABKAkiNAoYRmx1c2hTb3hSZXNhbXBsZXJSZXF1ZXN0EhgKEHJlc2FtcGxlcl9oYW5kbGUYASACKAQiTAoZRmx1c2hTb3hSZXNhbXBsZXJSZXNwb25zZRISCgpvdXRwdXRfcHRyGAEgAigEEgwKBHNpemUYAiACKA0SDQoFZXJyb3IYAyABKAkicAoUQXVkaW9GcmFtZUJ1ZmZlckluZm8SEAoIZGF0YV9wdHIYASACKAQSFAoMbnVtX2NoYW5uZWxzGAIgAigNEhMKC3NhbXBsZV9yYXRlGAMgAigNEhsKE3NhbXBsZXNfcGVyX2NoYW5uZWwYBCACKA0ieQoVT3duZWRBdWRpb0ZyYW1lQnVmZmVyEi0KBmhhbmRsZRgBIAIoCzIdLmxpdmVraXQucHJvdG8uRmZpT3duZWRIYW5kbGUSMQoEaW5mbxgCIAIoCzIjLmxpdmVraXQucHJvdG8uQXVkaW9GcmFtZUJ1ZmZlckluZm8iPwoPQXVkaW9TdHJlYW1JbmZvEiwKBHR5cGUYASACKA4yHi5saXZla2l0LnByb3RvLkF1ZGlvU3RyZWFtVHlwZSJvChBPd25lZEF1ZGlvU3RyZWFtEi0KBmhhbmRsZRgBIAIoCzIdLmxpdmVraXQucHJvdG8uRmZpT3duZWRIYW5kbGUSLAoEaW5mbxgCIAIoCzIeLmxpdmVraXQucHJvdG8uQXVkaW9TdHJlYW1JbmZvIp8BChBBdWRpb1N0cmVhbUV2ZW50EhUKDXN0cmVhbV9oYW5kbGUYASACKAQSOwoOZnJhbWVfcmVjZWl2ZWQYAiABKAsyIS5saXZla2l0LnByb3RvLkF1ZGlvRnJhbWVSZWNlaXZlZEgAEiwKA2VvcxgDIAEoCzIdLmxpdmVraXQucHJvdG8uQXVkaW9TdHJlYW1FT1NIAEIJCgdtZXNzYWdlIkkKEkF1ZGlvRnJhbWVSZWNlaXZlZBIzCgVmcmFtZRgBIAIoCzIkLmxpdmVraXQucHJvdG8uT3duZWRBdWRpb0ZyYW1lQnVmZmVyIhAKDkF1ZGlvU3RyZWFtRU9TImUKEkF1ZGlvU291cmNlT3B0aW9ucxIZChFlY2hvX2NhbmNlbGxhdGlvbhgBIAIoCBIZChFub2lzZV9zdXBwcmVzc2lvbhgCIAIoCBIZChFhdXRvX2dhaW5fY29udHJvbBgDIAIoCCI/Cg9BdWRpb1NvdXJjZUluZm8SLAoEdHlwZRgCIAIoDjIeLmxpdmVraXQucHJvdG8uQXVkaW9Tb3VyY2VUeXBlIm8KEE93bmVkQXVkaW9Tb3VyY2USLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRIsCgRpbmZvGAIgAigLMh4ubGl2ZWtpdC5wcm90by5BdWRpb1NvdXJjZUluZm8iFAoSQXVkaW9SZXNhbXBsZXJJbmZvInUKE093bmVkQXVkaW9SZXNhbXBsZXISLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRIvCgRpbmZvGAIgAigLMiEubGl2ZWtpdC5wcm90by5BdWRpb1Jlc2FtcGxlckluZm8iEgoQU294UmVzYW1wbGVySW5mbyJxChFPd25lZFNveFJlc2FtcGxlchItCgZoYW5kbGUYASACKAsyHS5saXZla2l0LnByb3RvLkZmaU93bmVkSGFuZGxlEi0KBGluZm8YAiACKAsyHy5saXZla2l0LnByb3RvLlNveFJlc2FtcGxlckluZm8qSgoUU294UmVzYW1wbGVyRGF0YVR5cGUSGAoUU09YUl9EQVRBVFlQRV9JTlQxNkkQABIYChRTT1hSX0RBVEFUWVBFX0lOVDE2UxABKosBChBTb3hRdWFsaXR5UmVjaXBlEhYKElNPWFJfUVVBTElUWV9RVUlDSxAAEhQKEFNPWFJfUVVBTElUWV9MT1cQARIXChNTT1hSX1FVQUxJVFlfTUVESVVNEAISFQoRU09YUl9RVUFMSVRZX0hJR0gQAxIZChVTT1hSX1FVQUxJVFlfVkVSWUhJR0gQBCqXAQoLU294RmxhZ0JpdHMSFgoSU09YUl9ST0xMT0ZGX1NNQUxMEAASFwoTU09YUl9ST0xMT0ZGX01FRElVTRABEhUKEVNPWFJfUk9MTE9GRl9OT05FEAISGAoUU09YUl9ISUdIX1BSRUNfQ0xPQ0sQAxIZChVTT1hSX0RPVUJMRV9QUkVDSVNJT04QBBILCgdTT1hSX1ZSEAUqQQoPQXVkaW9TdHJlYW1UeXBlEhcKE0FVRElPX1NUUkVBTV9OQVRJVkUQABIVChFBVURJT19TVFJFQU1fSFRNTBABKioKD0F1ZGlvU291cmNlVHlwZRIXChNBVURJT19TT1VSQ0VfTkFUSVZFEABCEKoCDUxpdmVLaXQuUHJvdG8", [import_handle_pb.file_handle, import_track_pb.file_track]);
const NewAudioStreamRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 0);
const NewAudioStreamResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 1);
const AudioStreamFromParticipantRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 2);
const AudioStreamFromParticipantResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 3);
const NewAudioSourceRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 4);
const NewAudioSourceResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 5);
const CaptureAudioFrameRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 6);
const CaptureAudioFrameResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 7);
const CaptureAudioFrameCallbackSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 8);
const ClearAudioBufferRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 9);
const ClearAudioBufferResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 10);
const NewAudioResamplerRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 11);
const NewAudioResamplerResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 12);
const RemixAndResampleRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 13);
const RemixAndResampleResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 14);
const NewSoxResamplerRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 15);
const NewSoxResamplerResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 16);
const PushSoxResamplerRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 17);
const PushSoxResamplerResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 18);
const FlushSoxResamplerRequestSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 19);
const FlushSoxResamplerResponseSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 20);
const AudioFrameBufferInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 21);
const OwnedAudioFrameBufferSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 22);
const AudioStreamInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 23);
const OwnedAudioStreamSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 24);
const AudioStreamEventSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 25);
const AudioFrameReceivedSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 26);
const AudioStreamEOSSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 27);
const AudioSourceOptionsSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 28);
const AudioSourceInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 29);
const OwnedAudioSourceSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 30);
const AudioResamplerInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 31);
const OwnedAudioResamplerSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 32);
const SoxResamplerInfoSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 33);
const OwnedSoxResamplerSchema = /* @__PURE__ */ (0, import_codegenv1.messageDesc)(file_audio_frame, 34);
var SoxResamplerDataType = /* @__PURE__ */ ((SoxResamplerDataType2) => {
  SoxResamplerDataType2[SoxResamplerDataType2["SOXR_DATATYPE_INT16I"] = 0] = "SOXR_DATATYPE_INT16I";
  SoxResamplerDataType2[SoxResamplerDataType2["SOXR_DATATYPE_INT16S"] = 1] = "SOXR_DATATYPE_INT16S";
  return SoxResamplerDataType2;
})(SoxResamplerDataType || {});
const SoxResamplerDataTypeSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_audio_frame, 0);
var SoxQualityRecipe = /* @__PURE__ */ ((SoxQualityRecipe2) => {
  SoxQualityRecipe2[SoxQualityRecipe2["SOXR_QUALITY_QUICK"] = 0] = "SOXR_QUALITY_QUICK";
  SoxQualityRecipe2[SoxQualityRecipe2["SOXR_QUALITY_LOW"] = 1] = "SOXR_QUALITY_LOW";
  SoxQualityRecipe2[SoxQualityRecipe2["SOXR_QUALITY_MEDIUM"] = 2] = "SOXR_QUALITY_MEDIUM";
  SoxQualityRecipe2[SoxQualityRecipe2["SOXR_QUALITY_HIGH"] = 3] = "SOXR_QUALITY_HIGH";
  SoxQualityRecipe2[SoxQualityRecipe2["SOXR_QUALITY_VERYHIGH"] = 4] = "SOXR_QUALITY_VERYHIGH";
  return SoxQualityRecipe2;
})(SoxQualityRecipe || {});
const SoxQualityRecipeSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_audio_frame, 1);
var SoxFlagBits = /* @__PURE__ */ ((SoxFlagBits2) => {
  SoxFlagBits2[SoxFlagBits2["SOXR_ROLLOFF_SMALL"] = 0] = "SOXR_ROLLOFF_SMALL";
  SoxFlagBits2[SoxFlagBits2["SOXR_ROLLOFF_MEDIUM"] = 1] = "SOXR_ROLLOFF_MEDIUM";
  SoxFlagBits2[SoxFlagBits2["SOXR_ROLLOFF_NONE"] = 2] = "SOXR_ROLLOFF_NONE";
  SoxFlagBits2[SoxFlagBits2["SOXR_HIGH_PREC_CLOCK"] = 3] = "SOXR_HIGH_PREC_CLOCK";
  SoxFlagBits2[SoxFlagBits2["SOXR_DOUBLE_PRECISION"] = 4] = "SOXR_DOUBLE_PRECISION";
  SoxFlagBits2[SoxFlagBits2["SOXR_VR"] = 5] = "SOXR_VR";
  return SoxFlagBits2;
})(SoxFlagBits || {});
const SoxFlagBitsSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_audio_frame, 2);
var AudioStreamType = /* @__PURE__ */ ((AudioStreamType2) => {
  AudioStreamType2[AudioStreamType2["AUDIO_STREAM_NATIVE"] = 0] = "AUDIO_STREAM_NATIVE";
  AudioStreamType2[AudioStreamType2["AUDIO_STREAM_HTML"] = 1] = "AUDIO_STREAM_HTML";
  return AudioStreamType2;
})(AudioStreamType || {});
const AudioStreamTypeSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_audio_frame, 3);
var AudioSourceType = /* @__PURE__ */ ((AudioSourceType2) => {
  AudioSourceType2[AudioSourceType2["AUDIO_SOURCE_NATIVE"] = 0] = "AUDIO_SOURCE_NATIVE";
  return AudioSourceType2;
})(AudioSourceType || {});
const AudioSourceTypeSchema = /* @__PURE__ */ (0, import_codegenv1.enumDesc)(file_audio_frame, 4);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AudioFrameBufferInfoSchema,
  AudioFrameReceivedSchema,
  AudioResamplerInfoSchema,
  AudioSourceInfoSchema,
  AudioSourceOptionsSchema,
  AudioSourceType,
  AudioSourceTypeSchema,
  AudioStreamEOSSchema,
  AudioStreamEventSchema,
  AudioStreamFromParticipantRequestSchema,
  AudioStreamFromParticipantResponseSchema,
  AudioStreamInfoSchema,
  AudioStreamType,
  AudioStreamTypeSchema,
  CaptureAudioFrameCallbackSchema,
  CaptureAudioFrameRequestSchema,
  CaptureAudioFrameResponseSchema,
  ClearAudioBufferRequestSchema,
  ClearAudioBufferResponseSchema,
  FlushSoxResamplerRequestSchema,
  FlushSoxResamplerResponseSchema,
  NewAudioResamplerRequestSchema,
  NewAudioResamplerResponseSchema,
  NewAudioSourceRequestSchema,
  NewAudioSourceResponseSchema,
  NewAudioStreamRequestSchema,
  NewAudioStreamResponseSchema,
  NewSoxResamplerRequestSchema,
  NewSoxResamplerResponseSchema,
  OwnedAudioFrameBufferSchema,
  OwnedAudioResamplerSchema,
  OwnedAudioSourceSchema,
  OwnedAudioStreamSchema,
  OwnedSoxResamplerSchema,
  PushSoxResamplerRequestSchema,
  PushSoxResamplerResponseSchema,
  RemixAndResampleRequestSchema,
  RemixAndResampleResponseSchema,
  SoxFlagBits,
  SoxFlagBitsSchema,
  SoxQualityRecipe,
  SoxQualityRecipeSchema,
  SoxResamplerDataType,
  SoxResamplerDataTypeSchema,
  SoxResamplerInfoSchema,
  file_audio_frame
});
//# sourceMappingURL=audio_frame_pb.cjs.map