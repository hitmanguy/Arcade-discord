{"version":3,"sources":["../../src/proto/room_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v2.2.0 with parameter \"target=ts,import_extension=js\"\n// @generated from file room.proto (package livekit.proto, syntax proto2)\n/* eslint-disable */\n\nimport type { GenEnum, GenFile, GenMessage } from \"@bufbuild/protobuf/codegenv1\";\nimport { enumDesc, fileDesc, messageDesc } from \"@bufbuild/protobuf/codegenv1\";\nimport type { E2eeOptions, EncryptionState } from \"./e2ee_pb.js\";\nimport { file_e2ee } from \"./e2ee_pb.js\";\nimport type { FfiOwnedHandle } from \"./handle_pb.js\";\nimport { file_handle } from \"./handle_pb.js\";\nimport type { OwnedParticipant } from \"./participant_pb.js\";\nimport { file_participant } from \"./participant_pb.js\";\nimport type { OwnedTrack, OwnedTrackPublication, TrackSource } from \"./track_pb.js\";\nimport { file_track } from \"./track_pb.js\";\nimport type { VideoCodec } from \"./video_frame_pb.js\";\nimport { file_video_frame } from \"./video_frame_pb.js\";\nimport type { RtcStats } from \"./stats_pb.js\";\nimport { file_stats } from \"./stats_pb.js\";\nimport type { Message } from \"@bufbuild/protobuf\";\n\n/**\n * Describes the file room.proto.\n */\nexport const file_room: GenFile = /*@__PURE__*/\n  fileDesc(\"Cgpyb29tLnByb3RvEg1saXZla2l0LnByb3RvIlkKDkNvbm5lY3RSZXF1ZXN0EgsKA3VybBgBIAIoCRINCgV0b2tlbhgCIAIoCRIrCgdvcHRpb25zGAMgAigLMhoubGl2ZWtpdC5wcm90by5Sb29tT3B0aW9ucyIjCg9Db25uZWN0UmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQivwMKD0Nvbm5lY3RDYWxsYmFjaxIQCghhc3luY19pZBgBIAIoBBIPCgVlcnJvchgCIAEoCUgAEjcKBnJlc3VsdBgDIAEoCzIlLmxpdmVraXQucHJvdG8uQ29ubmVjdENhbGxiYWNrLlJlc3VsdEgAGokBChVQYXJ0aWNpcGFudFdpdGhUcmFja3MSNAoLcGFydGljaXBhbnQYASACKAsyHy5saXZla2l0LnByb3RvLk93bmVkUGFydGljaXBhbnQSOgoMcHVibGljYXRpb25zGAIgAygLMiQubGl2ZWtpdC5wcm90by5Pd25lZFRyYWNrUHVibGljYXRpb24auAEKBlJlc3VsdBImCgRyb29tGAEgAigLMhgubGl2ZWtpdC5wcm90by5Pd25lZFJvb20SOgoRbG9jYWxfcGFydGljaXBhbnQYAiACKAsyHy5saXZla2l0LnByb3RvLk93bmVkUGFydGljaXBhbnQSSgoMcGFydGljaXBhbnRzGAMgAygLMjQubGl2ZWtpdC5wcm90by5Db25uZWN0Q2FsbGJhY2suUGFydGljaXBhbnRXaXRoVHJhY2tzQgkKB21lc3NhZ2UiKAoRRGlzY29ubmVjdFJlcXVlc3QSEwoLcm9vbV9oYW5kbGUYASACKAQiJgoSRGlzY29ubmVjdFJlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIiYKEkRpc2Nvbm5lY3RDYWxsYmFjaxIQCghhc3luY19pZBgBIAIoBCKCAQoTUHVibGlzaFRyYWNrUmVxdWVzdBIgChhsb2NhbF9wYXJ0aWNpcGFudF9oYW5kbGUYASACKAQSFAoMdHJhY2tfaGFuZGxlGAIgAigEEjMKB29wdGlvbnMYAyACKAsyIi5saXZla2l0LnByb3RvLlRyYWNrUHVibGlzaE9wdGlvbnMiKAoUUHVibGlzaFRyYWNrUmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQigQEKFFB1Ymxpc2hUcmFja0NhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg8KBWVycm9yGAIgASgJSAASOwoLcHVibGljYXRpb24YAyABKAsyJC5saXZla2l0LnByb3RvLk93bmVkVHJhY2tQdWJsaWNhdGlvbkgAQgkKB21lc3NhZ2UiZwoVVW5wdWJsaXNoVHJhY2tSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIRCgl0cmFja19zaWQYAiACKAkSGQoRc3RvcF9vbl91bnB1Ymxpc2gYAyACKAgiKgoWVW5wdWJsaXNoVHJhY2tSZXNwb25zZRIQCghhc3luY19pZBgBIAIoBCI5ChZVbnB1Ymxpc2hUcmFja0NhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIrkBChJQdWJsaXNoRGF0YVJlcXVlc3QSIAoYbG9jYWxfcGFydGljaXBhbnRfaGFuZGxlGAEgAigEEhAKCGRhdGFfcHRyGAIgAigEEhAKCGRhdGFfbGVuGAMgAigEEhAKCHJlbGlhYmxlGAQgAigIEhwKEGRlc3RpbmF0aW9uX3NpZHMYBSADKAlCAhgBEg0KBXRvcGljGAYgASgJEh4KFmRlc3RpbmF0aW9uX2lkZW50aXRpZXMYByADKAkiJwoTUHVibGlzaERhdGFSZXNwb25zZRIQCghhc3luY19pZBgBIAIoBCI2ChNQdWJsaXNoRGF0YUNhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIqYBChtQdWJsaXNoVHJhbnNjcmlwdGlvblJlcXVlc3QSIAoYbG9jYWxfcGFydGljaXBhbnRfaGFuZGxlGAEgAigEEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAIgAigJEhAKCHRyYWNrX2lkGAMgAigJEjUKCHNlZ21lbnRzGAQgAygLMiMubGl2ZWtpdC5wcm90by5UcmFuc2NyaXB0aW9uU2VnbWVudCIwChxQdWJsaXNoVHJhbnNjcmlwdGlvblJlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIj8KHFB1Ymxpc2hUcmFuc2NyaXB0aW9uQ2FsbGJhY2sSEAoIYXN5bmNfaWQYASACKAQSDQoFZXJyb3IYAiABKAkidgoVUHVibGlzaFNpcER0bWZSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIMCgRjb2RlGAIgAigNEg0KBWRpZ2l0GAMgAigJEh4KFmRlc3RpbmF0aW9uX2lkZW50aXRpZXMYBCADKAkiKgoWUHVibGlzaFNpcER0bWZSZXNwb25zZRIQCghhc3luY19pZBgBIAIoBCI5ChZQdWJsaXNoU2lwRHRtZkNhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIk0KF1NldExvY2FsTWV0YWRhdGFSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIQCghtZXRhZGF0YRgCIAIoCSIsChhTZXRMb2NhbE1ldGFkYXRhUmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQiOwoYU2V0TG9jYWxNZXRhZGF0YUNhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIoQBChZTZW5kQ2hhdE1lc3NhZ2VSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIPCgdtZXNzYWdlGAIgAigJEh4KFmRlc3RpbmF0aW9uX2lkZW50aXRpZXMYAyADKAkSFwoPc2VuZGVyX2lkZW50aXR5GAQgASgJIrwBChZFZGl0Q2hhdE1lc3NhZ2VSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIRCgllZGl0X3RleHQYAiACKAkSNAoQb3JpZ2luYWxfbWVzc2FnZRgDIAIoCzIaLmxpdmVraXQucHJvdG8uQ2hhdE1lc3NhZ2USHgoWZGVzdGluYXRpb25faWRlbnRpdGllcxgEIAMoCRIXCg9zZW5kZXJfaWRlbnRpdHkYBSABKAkiKwoXU2VuZENoYXRNZXNzYWdlUmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQiewoXU2VuZENoYXRNZXNzYWdlQ2FsbGJhY2sSEAoIYXN5bmNfaWQYASACKAQSDwoFZXJyb3IYAiABKAlIABIyCgxjaGF0X21lc3NhZ2UYAyABKAsyGi5saXZla2l0LnByb3RvLkNoYXRNZXNzYWdlSABCCQoHbWVzc2FnZSJxChlTZXRMb2NhbEF0dHJpYnV0ZXNSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIyCgphdHRyaWJ1dGVzGAIgAygLMh4ubGl2ZWtpdC5wcm90by5BdHRyaWJ1dGVzRW50cnkiLQoPQXR0cmlidXRlc0VudHJ5EgsKA2tleRgBIAIoCRINCgV2YWx1ZRgCIAIoCSIuChpTZXRMb2NhbEF0dHJpYnV0ZXNSZXNwb25zZRIQCghhc3luY19pZBgBIAIoBCI9ChpTZXRMb2NhbEF0dHJpYnV0ZXNDYWxsYmFjaxIQCghhc3luY19pZBgBIAIoBBINCgVlcnJvchgCIAEoCSJFChNTZXRMb2NhbE5hbWVSZXF1ZXN0EiAKGGxvY2FsX3BhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIMCgRuYW1lGAIgAigJIigKFFNldExvY2FsTmFtZVJlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIjcKFFNldExvY2FsTmFtZUNhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg0KBWVycm9yGAIgASgJIkUKFFNldFN1YnNjcmliZWRSZXF1ZXN0EhEKCXN1YnNjcmliZRgBIAIoCBIaChJwdWJsaWNhdGlvbl9oYW5kbGUYAiACKAQiFwoVU2V0U3Vic2NyaWJlZFJlc3BvbnNlIi0KFkdldFNlc3Npb25TdGF0c1JlcXVlc3QSEwoLcm9vbV9oYW5kbGUYASACKAQiKwoXR2V0U2Vzc2lvblN0YXRzUmVzcG9uc2USEAoIYXN5bmNfaWQYASACKAQi9wEKF0dldFNlc3Npb25TdGF0c0NhbGxiYWNrEhAKCGFzeW5jX2lkGAEgAigEEg8KBWVycm9yGAIgASgJSAASPwoGcmVzdWx0GAMgASgLMi0ubGl2ZWtpdC5wcm90by5HZXRTZXNzaW9uU3RhdHNDYWxsYmFjay5SZXN1bHRIABptCgZSZXN1bHQSMAoPcHVibGlzaGVyX3N0YXRzGAEgAygLMhcubGl2ZWtpdC5wcm90by5SdGNTdGF0cxIxChBzdWJzY3JpYmVyX3N0YXRzGAIgAygLMhcubGl2ZWtpdC5wcm90by5SdGNTdGF0c0IJCgdtZXNzYWdlIjsKDVZpZGVvRW5jb2RpbmcSEwoLbWF4X2JpdHJhdGUYASACKAQSFQoNbWF4X2ZyYW1lcmF0ZRgCIAIoASIkCg1BdWRpb0VuY29kaW5nEhMKC21heF9iaXRyYXRlGAEgAigEIpoCChNUcmFja1B1Ymxpc2hPcHRpb25zEjQKDnZpZGVvX2VuY29kaW5nGAEgASgLMhwubGl2ZWtpdC5wcm90by5WaWRlb0VuY29kaW5nEjQKDmF1ZGlvX2VuY29kaW5nGAIgASgLMhwubGl2ZWtpdC5wcm90by5BdWRpb0VuY29kaW5nEi4KC3ZpZGVvX2NvZGVjGAMgASgOMhkubGl2ZWtpdC5wcm90by5WaWRlb0NvZGVjEgsKA2R0eBgEIAEoCBILCgNyZWQYBSABKAgSEQoJc2ltdWxjYXN0GAYgASgIEioKBnNvdXJjZRgHIAEoDjIaLmxpdmVraXQucHJvdG8uVHJhY2tTb3VyY2USDgoGc3RyZWFtGAggASgJIj0KCUljZVNlcnZlchIMCgR1cmxzGAEgAygJEhAKCHVzZXJuYW1lGAIgASgJEhAKCHBhc3N3b3JkGAMgASgJIsQBCglSdGNDb25maWcSOwoSaWNlX3RyYW5zcG9ydF90eXBlGAEgASgOMh8ubGl2ZWtpdC5wcm90by5JY2VUcmFuc3BvcnRUeXBlEksKGmNvbnRpbnVhbF9nYXRoZXJpbmdfcG9saWN5GAIgASgOMicubGl2ZWtpdC5wcm90by5Db250aW51YWxHYXRoZXJpbmdQb2xpY3kSLQoLaWNlX3NlcnZlcnMYAyADKAsyGC5saXZla2l0LnByb3RvLkljZVNlcnZlciK+AQoLUm9vbU9wdGlvbnMSFgoOYXV0b19zdWJzY3JpYmUYASABKAgSFwoPYWRhcHRpdmVfc3RyZWFtGAIgASgIEhAKCGR5bmFjYXN0GAMgASgIEigKBGUyZWUYBCABKAsyGi5saXZla2l0LnByb3RvLkUyZWVPcHRpb25zEiwKCnJ0Y19jb25maWcYBSABKAsyGC5saXZla2l0LnByb3RvLlJ0Y0NvbmZpZxIUCgxqb2luX3JldHJpZXMYBiABKA0idwoUVHJhbnNjcmlwdGlvblNlZ21lbnQSCgoCaWQYASACKAkSDAoEdGV4dBgCIAIoCRISCgpzdGFydF90aW1lGAMgAigEEhAKCGVuZF90aW1lGAQgAigEEg0KBWZpbmFsGAUgAigIEhAKCGxhbmd1YWdlGAYgAigJIjAKCkJ1ZmZlckluZm8SEAoIZGF0YV9wdHIYASACKAQSEAoIZGF0YV9sZW4YAiACKAQiZQoLT3duZWRCdWZmZXISLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRInCgRkYXRhGAIgAigLMhkubGl2ZWtpdC5wcm90by5CdWZmZXJJbmZvIt0OCglSb29tRXZlbnQSEwoLcm9vbV9oYW5kbGUYASACKAQSRAoVcGFydGljaXBhbnRfY29ubmVjdGVkGAIgASgLMiMubGl2ZWtpdC5wcm90by5QYXJ0aWNpcGFudENvbm5lY3RlZEgAEkoKGHBhcnRpY2lwYW50X2Rpc2Nvbm5lY3RlZBgDIAEoCzImLmxpdmVraXQucHJvdG8uUGFydGljaXBhbnREaXNjb25uZWN0ZWRIABJDChVsb2NhbF90cmFja19wdWJsaXNoZWQYBCABKAsyIi5saXZla2l0LnByb3RvLkxvY2FsVHJhY2tQdWJsaXNoZWRIABJHChdsb2NhbF90cmFja191bnB1Ymxpc2hlZBgFIAEoCzIkLmxpdmVraXQucHJvdG8uTG9jYWxUcmFja1VucHVibGlzaGVkSAASRQoWbG9jYWxfdHJhY2tfc3Vic2NyaWJlZBgGIAEoCzIjLmxpdmVraXQucHJvdG8uTG9jYWxUcmFja1N1YnNjcmliZWRIABI4Cg90cmFja19wdWJsaXNoZWQYByABKAsyHS5saXZla2l0LnByb3RvLlRyYWNrUHVibGlzaGVkSAASPAoRdHJhY2tfdW5wdWJsaXNoZWQYCCABKAsyHy5saXZla2l0LnByb3RvLlRyYWNrVW5wdWJsaXNoZWRIABI6ChB0cmFja19zdWJzY3JpYmVkGAkgASgLMh4ubGl2ZWtpdC5wcm90by5UcmFja1N1YnNjcmliZWRIABI+ChJ0cmFja191bnN1YnNjcmliZWQYCiABKAsyIC5saXZla2l0LnByb3RvLlRyYWNrVW5zdWJzY3JpYmVkSAASSwoZdHJhY2tfc3Vic2NyaXB0aW9uX2ZhaWxlZBgLIAEoCzImLmxpdmVraXQucHJvdG8uVHJhY2tTdWJzY3JpcHRpb25GYWlsZWRIABIwCgt0cmFja19tdXRlZBgMIAEoCzIZLmxpdmVraXQucHJvdG8uVHJhY2tNdXRlZEgAEjQKDXRyYWNrX3VubXV0ZWQYDSABKAsyGy5saXZla2l0LnByb3RvLlRyYWNrVW5tdXRlZEgAEkcKF2FjdGl2ZV9zcGVha2Vyc19jaGFuZ2VkGA4gASgLMiQubGl2ZWtpdC5wcm90by5BY3RpdmVTcGVha2Vyc0NoYW5nZWRIABJDChVyb29tX21ldGFkYXRhX2NoYW5nZWQYDyABKAsyIi5saXZla2l0LnByb3RvLlJvb21NZXRhZGF0YUNoYW5nZWRIABI5ChByb29tX3NpZF9jaGFuZ2VkGBAgASgLMh0ubGl2ZWtpdC5wcm90by5Sb29tU2lkQ2hhbmdlZEgAElEKHHBhcnRpY2lwYW50X21ldGFkYXRhX2NoYW5nZWQYESABKAsyKS5saXZla2l0LnByb3RvLlBhcnRpY2lwYW50TWV0YWRhdGFDaGFuZ2VkSAASSQoYcGFydGljaXBhbnRfbmFtZV9jaGFuZ2VkGBIgASgLMiUubGl2ZWtpdC5wcm90by5QYXJ0aWNpcGFudE5hbWVDaGFuZ2VkSAASVQoecGFydGljaXBhbnRfYXR0cmlidXRlc19jaGFuZ2VkGBMgASgLMisubGl2ZWtpdC5wcm90by5QYXJ0aWNpcGFudEF0dHJpYnV0ZXNDaGFuZ2VkSAASTQoaY29ubmVjdGlvbl9xdWFsaXR5X2NoYW5nZWQYFCABKAsyJy5saXZla2l0LnByb3RvLkNvbm5lY3Rpb25RdWFsaXR5Q2hhbmdlZEgAEkkKGGNvbm5lY3Rpb25fc3RhdGVfY2hhbmdlZBgVIAEoCzIlLmxpdmVraXQucHJvdG8uQ29ubmVjdGlvblN0YXRlQ2hhbmdlZEgAEjMKDGRpc2Nvbm5lY3RlZBgWIAEoCzIbLmxpdmVraXQucHJvdG8uRGlzY29ubmVjdGVkSAASMwoMcmVjb25uZWN0aW5nGBcgASgLMhsubGl2ZWtpdC5wcm90by5SZWNvbm5lY3RpbmdIABIxCgtyZWNvbm5lY3RlZBgYIAEoCzIaLmxpdmVraXQucHJvdG8uUmVjb25uZWN0ZWRIABI9ChJlMmVlX3N0YXRlX2NoYW5nZWQYGSABKAsyHy5saXZla2l0LnByb3RvLkUyZWVTdGF0ZUNoYW5nZWRIABIlCgNlb3MYGiABKAsyFi5saXZla2l0LnByb3RvLlJvb21FT1NIABJBChRkYXRhX3BhY2tldF9yZWNlaXZlZBgbIAEoCzIhLmxpdmVraXQucHJvdG8uRGF0YVBhY2tldFJlY2VpdmVkSAASRgoWdHJhbnNjcmlwdGlvbl9yZWNlaXZlZBgcIAEoCzIkLmxpdmVraXQucHJvdG8uVHJhbnNjcmlwdGlvblJlY2VpdmVkSAASOgoMY2hhdF9tZXNzYWdlGB0gASgLMiIubGl2ZWtpdC5wcm90by5DaGF0TWVzc2FnZVJlY2VpdmVkSABCCQoHbWVzc2FnZSI3CghSb29tSW5mbxILCgNzaWQYASABKAkSDAoEbmFtZRgCIAIoCRIQCghtZXRhZGF0YRgDIAIoCSJhCglPd25lZFJvb20SLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRIlCgRpbmZvGAIgAigLMhcubGl2ZWtpdC5wcm90by5Sb29tSW5mbyJFChRQYXJ0aWNpcGFudENvbm5lY3RlZBItCgRpbmZvGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZFBhcnRpY2lwYW50IjcKF1BhcnRpY2lwYW50RGlzY29ubmVjdGVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJIigKE0xvY2FsVHJhY2tQdWJsaXNoZWQSEQoJdHJhY2tfc2lkGAEgAigJIjAKFUxvY2FsVHJhY2tVbnB1Ymxpc2hlZBIXCg9wdWJsaWNhdGlvbl9zaWQYASACKAkiKQoUTG9jYWxUcmFja1N1YnNjcmliZWQSEQoJdHJhY2tfc2lkGAIgAigJImkKDlRyYWNrUHVibGlzaGVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEjkKC3B1YmxpY2F0aW9uGAIgAigLMiQubGl2ZWtpdC5wcm90by5Pd25lZFRyYWNrUHVibGljYXRpb24iSQoQVHJhY2tVbnB1Ymxpc2hlZBIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgBIAIoCRIXCg9wdWJsaWNhdGlvbl9zaWQYAiACKAkiWQoPVHJhY2tTdWJzY3JpYmVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEigKBXRyYWNrGAIgAigLMhkubGl2ZWtpdC5wcm90by5Pd25lZFRyYWNrIkQKEVRyYWNrVW5zdWJzY3JpYmVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEhEKCXRyYWNrX3NpZBgCIAIoCSJZChdUcmFja1N1YnNjcmlwdGlvbkZhaWxlZBIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgBIAIoCRIRCgl0cmFja19zaWQYAiACKAkSDQoFZXJyb3IYAyACKAkiPQoKVHJhY2tNdXRlZBIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgBIAIoCRIRCgl0cmFja19zaWQYAiACKAkiPwoMVHJhY2tVbm11dGVkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEhEKCXRyYWNrX3NpZBgCIAIoCSJfChBFMmVlU3RhdGVDaGFuZ2VkEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEi0KBXN0YXRlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5FbmNyeXB0aW9uU3RhdGUiNwoVQWN0aXZlU3BlYWtlcnNDaGFuZ2VkEh4KFnBhcnRpY2lwYW50X2lkZW50aXRpZXMYASADKAkiJwoTUm9vbU1ldGFkYXRhQ2hhbmdlZBIQCghtZXRhZGF0YRgBIAIoCSIdCg5Sb29tU2lkQ2hhbmdlZBILCgNzaWQYASACKAkiTAoaUGFydGljaXBhbnRNZXRhZGF0YUNoYW5nZWQSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSEAoIbWV0YWRhdGEYAiACKAkirAEKHFBhcnRpY2lwYW50QXR0cmlidXRlc0NoYW5nZWQSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSMgoKYXR0cmlidXRlcxgCIAMoCzIeLmxpdmVraXQucHJvdG8uQXR0cmlidXRlc0VudHJ5EjoKEmNoYW5nZWRfYXR0cmlidXRlcxgDIAMoCzIeLmxpdmVraXQucHJvdG8uQXR0cmlidXRlc0VudHJ5IkQKFlBhcnRpY2lwYW50TmFtZUNoYW5nZWQSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSDAoEbmFtZRgCIAIoCSJrChhDb25uZWN0aW9uUXVhbGl0eUNoYW5nZWQSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSMQoHcXVhbGl0eRgCIAIoDjIgLmxpdmVraXQucHJvdG8uQ29ubmVjdGlvblF1YWxpdHkiRQoKVXNlclBhY2tldBIoCgRkYXRhGAEgAigLMhoubGl2ZWtpdC5wcm90by5Pd25lZEJ1ZmZlchINCgV0b3BpYxgCIAEoCSJ5CgtDaGF0TWVzc2FnZRIKCgJpZBgBIAIoCRIRCgl0aW1lc3RhbXAYAiACKAMSDwoHbWVzc2FnZRgDIAIoCRIWCg5lZGl0X3RpbWVzdGFtcBgEIAEoAxIPCgdkZWxldGVkGAUgASgIEhEKCWdlbmVyYXRlZBgGIAEoCCJgChNDaGF0TWVzc2FnZVJlY2VpdmVkEisKB21lc3NhZ2UYASACKAsyGi5saXZla2l0LnByb3RvLkNoYXRNZXNzYWdlEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAIgAigJIiYKB1NpcERUTUYSDAoEY29kZRgBIAIoDRINCgVkaWdpdBgCIAEoCSK/AQoSRGF0YVBhY2tldFJlY2VpdmVkEisKBGtpbmQYASACKA4yHS5saXZla2l0LnByb3RvLkRhdGFQYWNrZXRLaW5kEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAIgAigJEikKBHVzZXIYBCABKAsyGS5saXZla2l0LnByb3RvLlVzZXJQYWNrZXRIABIqCghzaXBfZHRtZhgFIAEoCzIWLmxpdmVraXQucHJvdG8uU2lwRFRNRkgAQgcKBXZhbHVlIn8KFVRyYW5zY3JpcHRpb25SZWNlaXZlZBIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgBIAEoCRIRCgl0cmFja19zaWQYAiABKAkSNQoIc2VnbWVudHMYAyADKAsyIy5saXZla2l0LnByb3RvLlRyYW5zY3JpcHRpb25TZWdtZW50IkcKFkNvbm5lY3Rpb25TdGF0ZUNoYW5nZWQSLQoFc3RhdGUYASACKA4yHi5saXZla2l0LnByb3RvLkNvbm5lY3Rpb25TdGF0ZSILCglDb25uZWN0ZWQiPwoMRGlzY29ubmVjdGVkEi8KBnJlYXNvbhgBIAIoDjIfLmxpdmVraXQucHJvdG8uRGlzY29ubmVjdFJlYXNvbiIOCgxSZWNvbm5lY3RpbmciDQoLUmVjb25uZWN0ZWQiCQoHUm9vbUVPUypQChBJY2VUcmFuc3BvcnRUeXBlEhMKD1RSQU5TUE9SVF9SRUxBWRAAEhQKEFRSQU5TUE9SVF9OT0hPU1QQARIRCg1UUkFOU1BPUlRfQUxMEAIqQwoYQ29udGludWFsR2F0aGVyaW5nUG9saWN5Eg8KC0dBVEhFUl9PTkNFEAASFgoSR0FUSEVSX0NPTlRJTlVBTExZEAEqYAoRQ29ubmVjdGlvblF1YWxpdHkSEAoMUVVBTElUWV9QT09SEAASEAoMUVVBTElUWV9HT09EEAESFQoRUVVBTElUWV9FWENFTExFTlQQAhIQCgxRVUFMSVRZX0xPU1QQAypTCg9Db25uZWN0aW9uU3RhdGUSFQoRQ09OTl9ESVNDT05ORUNURUQQABISCg5DT05OX0NPTk5FQ1RFRBABEhUKEUNPTk5fUkVDT05ORUNUSU5HEAIqMwoORGF0YVBhY2tldEtpbmQSDgoKS0lORF9MT1NTWRAAEhEKDUtJTkRfUkVMSUFCTEUQASrsAQoQRGlzY29ubmVjdFJlYXNvbhISCg5VTktOT1dOX1JFQVNPThAAEhQKEENMSUVOVF9JTklUSUFURUQQARIWChJEVVBMSUNBVEVfSURFTlRJVFkQAhITCg9TRVJWRVJfU0hVVERPV04QAxIXChNQQVJUSUNJUEFOVF9SRU1PVkVEEAQSEAoMUk9PTV9ERUxFVEVEEAUSEgoOU1RBVEVfTUlTTUFUQ0gQBhIQCgxKT0lOX0ZBSUxVUkUQBxINCglNSUdSQVRJT04QCBIQCgxTSUdOQUxfQ0xPU0UQCRIPCgtST09NX0NMT1NFRBAKQhCqAg1MaXZlS2l0LlByb3Rv\", [file_e2ee, file_handle, file_participant, file_track, file_video_frame, file_stats]);\n\n/**\n * Connect to a new LiveKit room\n *\n * @generated from message livekit.proto.ConnectRequest\n */\nexport type ConnectRequest = Message<\"livekit.proto.ConnectRequest\"> & {\n  /**\n   * @generated from field: required string url = 1;\n   */\n  url: string;\n\n  /**\n   * @generated from field: required string token = 2;\n   */\n  token: string;\n\n  /**\n   * @generated from field: required livekit.proto.RoomOptions options = 3;\n   */\n  options?: RoomOptions;\n};\n\n/**\n * Describes the message livekit.proto.ConnectRequest.\n * Use `create(ConnectRequestSchema)` to create a new message.\n */\nexport const ConnectRequestSchema: GenMessage<ConnectRequest> = /*@__PURE__*/\n  messageDesc(file_room, 0);\n\n/**\n * @generated from message livekit.proto.ConnectResponse\n */\nexport type ConnectResponse = Message<\"livekit.proto.ConnectResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.ConnectResponse.\n * Use `create(ConnectResponseSchema)` to create a new message.\n */\nexport const ConnectResponseSchema: GenMessage<ConnectResponse> = /*@__PURE__*/\n  messageDesc(file_room, 1);\n\n/**\n * @generated from message livekit.proto.ConnectCallback\n */\nexport type ConnectCallback = Message<\"livekit.proto.ConnectCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.ConnectCallback.message\n   */\n  message: {\n    /**\n     * @generated from field: string error = 2;\n     */\n    value: string;\n    case: \"error\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ConnectCallback.Result result = 3;\n     */\n    value: ConnectCallback_Result;\n    case: \"result\";\n  } | { case: undefined; value?: undefined };\n};\n\n/**\n * Describes the message livekit.proto.ConnectCallback.\n * Use `create(ConnectCallbackSchema)` to create a new message.\n */\nexport const ConnectCallbackSchema: GenMessage<ConnectCallback> = /*@__PURE__*/\n  messageDesc(file_room, 2);\n\n/**\n * @generated from message livekit.proto.ConnectCallback.ParticipantWithTracks\n */\nexport type ConnectCallback_ParticipantWithTracks = Message<\"livekit.proto.ConnectCallback.ParticipantWithTracks\"> & {\n  /**\n   * @generated from field: required livekit.proto.OwnedParticipant participant = 1;\n   */\n  participant?: OwnedParticipant;\n\n  /**\n   * TrackInfo are not needed here, if we're subscribed to a track, the FfiServer will send\n   * a TrackSubscribed event\n   *\n   * @generated from field: repeated livekit.proto.OwnedTrackPublication publications = 2;\n   */\n  publications: OwnedTrackPublication[];\n};\n\n/**\n * Describes the message livekit.proto.ConnectCallback.ParticipantWithTracks.\n * Use `create(ConnectCallback_ParticipantWithTracksSchema)` to create a new message.\n */\nexport const ConnectCallback_ParticipantWithTracksSchema: GenMessage<ConnectCallback_ParticipantWithTracks> = /*@__PURE__*/\n  messageDesc(file_room, 2, 0);\n\n/**\n * @generated from message livekit.proto.ConnectCallback.Result\n */\nexport type ConnectCallback_Result = Message<\"livekit.proto.ConnectCallback.Result\"> & {\n  /**\n   * @generated from field: required livekit.proto.OwnedRoom room = 1;\n   */\n  room?: OwnedRoom;\n\n  /**\n   * @generated from field: required livekit.proto.OwnedParticipant local_participant = 2;\n   */\n  localParticipant?: OwnedParticipant;\n\n  /**\n   * @generated from field: repeated livekit.proto.ConnectCallback.ParticipantWithTracks participants = 3;\n   */\n  participants: ConnectCallback_ParticipantWithTracks[];\n};\n\n/**\n * Describes the message livekit.proto.ConnectCallback.Result.\n * Use `create(ConnectCallback_ResultSchema)` to create a new message.\n */\nexport const ConnectCallback_ResultSchema: GenMessage<ConnectCallback_Result> = /*@__PURE__*/\n  messageDesc(file_room, 2, 1);\n\n/**\n * Disconnect from the a room\n *\n * @generated from message livekit.proto.DisconnectRequest\n */\nexport type DisconnectRequest = Message<\"livekit.proto.DisconnectRequest\"> & {\n  /**\n   * @generated from field: required uint64 room_handle = 1;\n   */\n  roomHandle: bigint;\n};\n\n/**\n * Describes the message livekit.proto.DisconnectRequest.\n * Use `create(DisconnectRequestSchema)` to create a new message.\n */\nexport const DisconnectRequestSchema: GenMessage<DisconnectRequest> = /*@__PURE__*/\n  messageDesc(file_room, 3);\n\n/**\n * @generated from message livekit.proto.DisconnectResponse\n */\nexport type DisconnectResponse = Message<\"livekit.proto.DisconnectResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.DisconnectResponse.\n * Use `create(DisconnectResponseSchema)` to create a new message.\n */\nexport const DisconnectResponseSchema: GenMessage<DisconnectResponse> = /*@__PURE__*/\n  messageDesc(file_room, 4);\n\n/**\n * @generated from message livekit.proto.DisconnectCallback\n */\nexport type DisconnectCallback = Message<\"livekit.proto.DisconnectCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.DisconnectCallback.\n * Use `create(DisconnectCallbackSchema)` to create a new message.\n */\nexport const DisconnectCallbackSchema: GenMessage<DisconnectCallback> = /*@__PURE__*/\n  messageDesc(file_room, 5);\n\n/**\n * Publish a track to the room\n *\n * @generated from message livekit.proto.PublishTrackRequest\n */\nexport type PublishTrackRequest = Message<\"livekit.proto.PublishTrackRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: required uint64 track_handle = 2;\n   */\n  trackHandle: bigint;\n\n  /**\n   * @generated from field: required livekit.proto.TrackPublishOptions options = 3;\n   */\n  options?: TrackPublishOptions;\n};\n\n/**\n * Describes the message livekit.proto.PublishTrackRequest.\n * Use `create(PublishTrackRequestSchema)` to create a new message.\n */\nexport const PublishTrackRequestSchema: GenMessage<PublishTrackRequest> = /*@__PURE__*/\n  messageDesc(file_room, 6);\n\n/**\n * @generated from message livekit.proto.PublishTrackResponse\n */\nexport type PublishTrackResponse = Message<\"livekit.proto.PublishTrackResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.PublishTrackResponse.\n * Use `create(PublishTrackResponseSchema)` to create a new message.\n */\nexport const PublishTrackResponseSchema: GenMessage<PublishTrackResponse> = /*@__PURE__*/\n  messageDesc(file_room, 7);\n\n/**\n * @generated from message livekit.proto.PublishTrackCallback\n */\nexport type PublishTrackCallback = Message<\"livekit.proto.PublishTrackCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.PublishTrackCallback.message\n   */\n  message: {\n    /**\n     * @generated from field: string error = 2;\n     */\n    value: string;\n    case: \"error\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.OwnedTrackPublication publication = 3;\n     */\n    value: OwnedTrackPublication;\n    case: \"publication\";\n  } | { case: undefined; value?: undefined };\n};\n\n/**\n * Describes the message livekit.proto.PublishTrackCallback.\n * Use `create(PublishTrackCallbackSchema)` to create a new message.\n */\nexport const PublishTrackCallbackSchema: GenMessage<PublishTrackCallback> = /*@__PURE__*/\n  messageDesc(file_room, 8);\n\n/**\n * Unpublish a track from the room\n *\n * @generated from message livekit.proto.UnpublishTrackRequest\n */\nexport type UnpublishTrackRequest = Message<\"livekit.proto.UnpublishTrackRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid: string;\n\n  /**\n   * @generated from field: required bool stop_on_unpublish = 3;\n   */\n  stopOnUnpublish: boolean;\n};\n\n/**\n * Describes the message livekit.proto.UnpublishTrackRequest.\n * Use `create(UnpublishTrackRequestSchema)` to create a new message.\n */\nexport const UnpublishTrackRequestSchema: GenMessage<UnpublishTrackRequest> = /*@__PURE__*/\n  messageDesc(file_room, 9);\n\n/**\n * @generated from message livekit.proto.UnpublishTrackResponse\n */\nexport type UnpublishTrackResponse = Message<\"livekit.proto.UnpublishTrackResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.UnpublishTrackResponse.\n * Use `create(UnpublishTrackResponseSchema)` to create a new message.\n */\nexport const UnpublishTrackResponseSchema: GenMessage<UnpublishTrackResponse> = /*@__PURE__*/\n  messageDesc(file_room, 10);\n\n/**\n * @generated from message livekit.proto.UnpublishTrackCallback\n */\nexport type UnpublishTrackCallback = Message<\"livekit.proto.UnpublishTrackCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from field: optional string error = 2;\n   */\n  error: string;\n};\n\n/**\n * Describes the message livekit.proto.UnpublishTrackCallback.\n * Use `create(UnpublishTrackCallbackSchema)` to create a new message.\n */\nexport const UnpublishTrackCallbackSchema: GenMessage<UnpublishTrackCallback> = /*@__PURE__*/\n  messageDesc(file_room, 11);\n\n/**\n * Publish data to other participants\n *\n * @generated from message livekit.proto.PublishDataRequest\n */\nexport type PublishDataRequest = Message<\"livekit.proto.PublishDataRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: required uint64 data_ptr = 2;\n   */\n  dataPtr: bigint;\n\n  /**\n   * @generated from field: required uint64 data_len = 3;\n   */\n  dataLen: bigint;\n\n  /**\n   * @generated from field: required bool reliable = 4;\n   */\n  reliable: boolean;\n\n  /**\n   * @generated from field: repeated string destination_sids = 5 [deprecated = true];\n   * @deprecated\n   */\n  destinationSids: string[];\n\n  /**\n   * @generated from field: optional string topic = 6;\n   */\n  topic: string;\n\n  /**\n   * @generated from field: repeated string destination_identities = 7;\n   */\n  destinationIdentities: string[];\n};\n\n/**\n * Describes the message livekit.proto.PublishDataRequest.\n * Use `create(PublishDataRequestSchema)` to create a new message.\n */\nexport const PublishDataRequestSchema: GenMessage<PublishDataRequest> = /*@__PURE__*/\n  messageDesc(file_room, 12);\n\n/**\n * @generated from message livekit.proto.PublishDataResponse\n */\nexport type PublishDataResponse = Message<\"livekit.proto.PublishDataResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.PublishDataResponse.\n * Use `create(PublishDataResponseSchema)` to create a new message.\n */\nexport const PublishDataResponseSchema: GenMessage<PublishDataResponse> = /*@__PURE__*/\n  messageDesc(file_room, 13);\n\n/**\n * @generated from message livekit.proto.PublishDataCallback\n */\nexport type PublishDataCallback = Message<\"livekit.proto.PublishDataCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from field: optional string error = 2;\n   */\n  error: string;\n};\n\n/**\n * Describes the message livekit.proto.PublishDataCallback.\n * Use `create(PublishDataCallbackSchema)` to create a new message.\n */\nexport const PublishDataCallbackSchema: GenMessage<PublishDataCallback> = /*@__PURE__*/\n  messageDesc(file_room, 14);\n\n/**\n * Publish transcription messages to room\n *\n * @generated from message livekit.proto.PublishTranscriptionRequest\n */\nexport type PublishTranscriptionRequest = Message<\"livekit.proto.PublishTranscriptionRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: required string participant_identity = 2;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string track_id = 3;\n   */\n  trackId: string;\n\n  /**\n   * @generated from field: repeated livekit.proto.TranscriptionSegment segments = 4;\n   */\n  segments: TranscriptionSegment[];\n};\n\n/**\n * Describes the message livekit.proto.PublishTranscriptionRequest.\n * Use `create(PublishTranscriptionRequestSchema)` to create a new message.\n */\nexport const PublishTranscriptionRequestSchema: GenMessage<PublishTranscriptionRequest> = /*@__PURE__*/\n  messageDesc(file_room, 15);\n\n/**\n * @generated from message livekit.proto.PublishTranscriptionResponse\n */\nexport type PublishTranscriptionResponse = Message<\"livekit.proto.PublishTranscriptionResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.PublishTranscriptionResponse.\n * Use `create(PublishTranscriptionResponseSchema)` to create a new message.\n */\nexport const PublishTranscriptionResponseSchema: GenMessage<PublishTranscriptionResponse> = /*@__PURE__*/\n  messageDesc(file_room, 16);\n\n/**\n * @generated from message livekit.proto.PublishTranscriptionCallback\n */\nexport type PublishTranscriptionCallback = Message<\"livekit.proto.PublishTranscriptionCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from field: optional string error = 2;\n   */\n  error: string;\n};\n\n/**\n * Describes the message livekit.proto.PublishTranscriptionCallback.\n * Use `create(PublishTranscriptionCallbackSchema)` to create a new message.\n */\nexport const PublishTranscriptionCallbackSchema: GenMessage<PublishTranscriptionCallback> = /*@__PURE__*/\n  messageDesc(file_room, 17);\n\n/**\n * Publish Sip DTMF messages to other participants\n *\n * @generated from message livekit.proto.PublishSipDtmfRequest\n */\nexport type PublishSipDtmfRequest = Message<\"livekit.proto.PublishSipDtmfRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: required uint32 code = 2;\n   */\n  code: number;\n\n  /**\n   * @generated from field: required string digit = 3;\n   */\n  digit: string;\n\n  /**\n   * @generated from field: repeated string destination_identities = 4;\n   */\n  destinationIdentities: string[];\n};\n\n/**\n * Describes the message livekit.proto.PublishSipDtmfRequest.\n * Use `create(PublishSipDtmfRequestSchema)` to create a new message.\n */\nexport const PublishSipDtmfRequestSchema: GenMessage<PublishSipDtmfRequest> = /*@__PURE__*/\n  messageDesc(file_room, 18);\n\n/**\n * @generated from message livekit.proto.PublishSipDtmfResponse\n */\nexport type PublishSipDtmfResponse = Message<\"livekit.proto.PublishSipDtmfResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.PublishSipDtmfResponse.\n * Use `create(PublishSipDtmfResponseSchema)` to create a new message.\n */\nexport const PublishSipDtmfResponseSchema: GenMessage<PublishSipDtmfResponse> = /*@__PURE__*/\n  messageDesc(file_room, 19);\n\n/**\n * @generated from message livekit.proto.PublishSipDtmfCallback\n */\nexport type PublishSipDtmfCallback = Message<\"livekit.proto.PublishSipDtmfCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from field: optional string error = 2;\n   */\n  error: string;\n};\n\n/**\n * Describes the message livekit.proto.PublishSipDtmfCallback.\n * Use `create(PublishSipDtmfCallbackSchema)` to create a new message.\n */\nexport const PublishSipDtmfCallbackSchema: GenMessage<PublishSipDtmfCallback> = /*@__PURE__*/\n  messageDesc(file_room, 20);\n\n/**\n * Change the local participant's metadata\n *\n * @generated from message livekit.proto.SetLocalMetadataRequest\n */\nexport type SetLocalMetadataRequest = Message<\"livekit.proto.SetLocalMetadataRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: required string metadata = 2;\n   */\n  metadata: string;\n};\n\n/**\n * Describes the message livekit.proto.SetLocalMetadataRequest.\n * Use `create(SetLocalMetadataRequestSchema)` to create a new message.\n */\nexport const SetLocalMetadataRequestSchema: GenMessage<SetLocalMetadataRequest> = /*@__PURE__*/\n  messageDesc(file_room, 21);\n\n/**\n * @generated from message livekit.proto.SetLocalMetadataResponse\n */\nexport type SetLocalMetadataResponse = Message<\"livekit.proto.SetLocalMetadataResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.SetLocalMetadataResponse.\n * Use `create(SetLocalMetadataResponseSchema)` to create a new message.\n */\nexport const SetLocalMetadataResponseSchema: GenMessage<SetLocalMetadataResponse> = /*@__PURE__*/\n  messageDesc(file_room, 22);\n\n/**\n * @generated from message livekit.proto.SetLocalMetadataCallback\n */\nexport type SetLocalMetadataCallback = Message<\"livekit.proto.SetLocalMetadataCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from field: optional string error = 2;\n   */\n  error: string;\n};\n\n/**\n * Describes the message livekit.proto.SetLocalMetadataCallback.\n * Use `create(SetLocalMetadataCallbackSchema)` to create a new message.\n */\nexport const SetLocalMetadataCallbackSchema: GenMessage<SetLocalMetadataCallback> = /*@__PURE__*/\n  messageDesc(file_room, 23);\n\n/**\n * @generated from message livekit.proto.SendChatMessageRequest\n */\nexport type SendChatMessageRequest = Message<\"livekit.proto.SendChatMessageRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: required string message = 2;\n   */\n  message: string;\n\n  /**\n   * @generated from field: repeated string destination_identities = 3;\n   */\n  destinationIdentities: string[];\n\n  /**\n   * @generated from field: optional string sender_identity = 4;\n   */\n  senderIdentity: string;\n};\n\n/**\n * Describes the message livekit.proto.SendChatMessageRequest.\n * Use `create(SendChatMessageRequestSchema)` to create a new message.\n */\nexport const SendChatMessageRequestSchema: GenMessage<SendChatMessageRequest> = /*@__PURE__*/\n  messageDesc(file_room, 24);\n\n/**\n * @generated from message livekit.proto.EditChatMessageRequest\n */\nexport type EditChatMessageRequest = Message<\"livekit.proto.EditChatMessageRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: required string edit_text = 2;\n   */\n  editText: string;\n\n  /**\n   * @generated from field: required livekit.proto.ChatMessage original_message = 3;\n   */\n  originalMessage?: ChatMessage;\n\n  /**\n   * @generated from field: repeated string destination_identities = 4;\n   */\n  destinationIdentities: string[];\n\n  /**\n   * @generated from field: optional string sender_identity = 5;\n   */\n  senderIdentity: string;\n};\n\n/**\n * Describes the message livekit.proto.EditChatMessageRequest.\n * Use `create(EditChatMessageRequestSchema)` to create a new message.\n */\nexport const EditChatMessageRequestSchema: GenMessage<EditChatMessageRequest> = /*@__PURE__*/\n  messageDesc(file_room, 25);\n\n/**\n * @generated from message livekit.proto.SendChatMessageResponse\n */\nexport type SendChatMessageResponse = Message<\"livekit.proto.SendChatMessageResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.SendChatMessageResponse.\n * Use `create(SendChatMessageResponseSchema)` to create a new message.\n */\nexport const SendChatMessageResponseSchema: GenMessage<SendChatMessageResponse> = /*@__PURE__*/\n  messageDesc(file_room, 26);\n\n/**\n * @generated from message livekit.proto.SendChatMessageCallback\n */\nexport type SendChatMessageCallback = Message<\"livekit.proto.SendChatMessageCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.SendChatMessageCallback.message\n   */\n  message: {\n    /**\n     * @generated from field: string error = 2;\n     */\n    value: string;\n    case: \"error\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ChatMessage chat_message = 3;\n     */\n    value: ChatMessage;\n    case: \"chatMessage\";\n  } | { case: undefined; value?: undefined };\n};\n\n/**\n * Describes the message livekit.proto.SendChatMessageCallback.\n * Use `create(SendChatMessageCallbackSchema)` to create a new message.\n */\nexport const SendChatMessageCallbackSchema: GenMessage<SendChatMessageCallback> = /*@__PURE__*/\n  messageDesc(file_room, 27);\n\n/**\n * Change the local participant's attributes\n *\n * @generated from message livekit.proto.SetLocalAttributesRequest\n */\nexport type SetLocalAttributesRequest = Message<\"livekit.proto.SetLocalAttributesRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: repeated livekit.proto.AttributesEntry attributes = 2;\n   */\n  attributes: AttributesEntry[];\n};\n\n/**\n * Describes the message livekit.proto.SetLocalAttributesRequest.\n * Use `create(SetLocalAttributesRequestSchema)` to create a new message.\n */\nexport const SetLocalAttributesRequestSchema: GenMessage<SetLocalAttributesRequest> = /*@__PURE__*/\n  messageDesc(file_room, 28);\n\n/**\n * @generated from message livekit.proto.AttributesEntry\n */\nexport type AttributesEntry = Message<\"livekit.proto.AttributesEntry\"> & {\n  /**\n   * @generated from field: required string key = 1;\n   */\n  key: string;\n\n  /**\n   * @generated from field: required string value = 2;\n   */\n  value: string;\n};\n\n/**\n * Describes the message livekit.proto.AttributesEntry.\n * Use `create(AttributesEntrySchema)` to create a new message.\n */\nexport const AttributesEntrySchema: GenMessage<AttributesEntry> = /*@__PURE__*/\n  messageDesc(file_room, 29);\n\n/**\n * @generated from message livekit.proto.SetLocalAttributesResponse\n */\nexport type SetLocalAttributesResponse = Message<\"livekit.proto.SetLocalAttributesResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.SetLocalAttributesResponse.\n * Use `create(SetLocalAttributesResponseSchema)` to create a new message.\n */\nexport const SetLocalAttributesResponseSchema: GenMessage<SetLocalAttributesResponse> = /*@__PURE__*/\n  messageDesc(file_room, 30);\n\n/**\n * @generated from message livekit.proto.SetLocalAttributesCallback\n */\nexport type SetLocalAttributesCallback = Message<\"livekit.proto.SetLocalAttributesCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from field: optional string error = 2;\n   */\n  error: string;\n};\n\n/**\n * Describes the message livekit.proto.SetLocalAttributesCallback.\n * Use `create(SetLocalAttributesCallbackSchema)` to create a new message.\n */\nexport const SetLocalAttributesCallbackSchema: GenMessage<SetLocalAttributesCallback> = /*@__PURE__*/\n  messageDesc(file_room, 31);\n\n/**\n * Change the local participant's name\n *\n * @generated from message livekit.proto.SetLocalNameRequest\n */\nexport type SetLocalNameRequest = Message<\"livekit.proto.SetLocalNameRequest\"> & {\n  /**\n   * @generated from field: required uint64 local_participant_handle = 1;\n   */\n  localParticipantHandle: bigint;\n\n  /**\n   * @generated from field: required string name = 2;\n   */\n  name: string;\n};\n\n/**\n * Describes the message livekit.proto.SetLocalNameRequest.\n * Use `create(SetLocalNameRequestSchema)` to create a new message.\n */\nexport const SetLocalNameRequestSchema: GenMessage<SetLocalNameRequest> = /*@__PURE__*/\n  messageDesc(file_room, 32);\n\n/**\n * @generated from message livekit.proto.SetLocalNameResponse\n */\nexport type SetLocalNameResponse = Message<\"livekit.proto.SetLocalNameResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.SetLocalNameResponse.\n * Use `create(SetLocalNameResponseSchema)` to create a new message.\n */\nexport const SetLocalNameResponseSchema: GenMessage<SetLocalNameResponse> = /*@__PURE__*/\n  messageDesc(file_room, 33);\n\n/**\n * @generated from message livekit.proto.SetLocalNameCallback\n */\nexport type SetLocalNameCallback = Message<\"livekit.proto.SetLocalNameCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from field: optional string error = 2;\n   */\n  error: string;\n};\n\n/**\n * Describes the message livekit.proto.SetLocalNameCallback.\n * Use `create(SetLocalNameCallbackSchema)` to create a new message.\n */\nexport const SetLocalNameCallbackSchema: GenMessage<SetLocalNameCallback> = /*@__PURE__*/\n  messageDesc(file_room, 34);\n\n/**\n * Change the \"desire\" to subs2ribe to a track\n *\n * @generated from message livekit.proto.SetSubscribedRequest\n */\nexport type SetSubscribedRequest = Message<\"livekit.proto.SetSubscribedRequest\"> & {\n  /**\n   * @generated from field: required bool subscribe = 1;\n   */\n  subscribe: boolean;\n\n  /**\n   * @generated from field: required uint64 publication_handle = 2;\n   */\n  publicationHandle: bigint;\n};\n\n/**\n * Describes the message livekit.proto.SetSubscribedRequest.\n * Use `create(SetSubscribedRequestSchema)` to create a new message.\n */\nexport const SetSubscribedRequestSchema: GenMessage<SetSubscribedRequest> = /*@__PURE__*/\n  messageDesc(file_room, 35);\n\n/**\n * @generated from message livekit.proto.SetSubscribedResponse\n */\nexport type SetSubscribedResponse = Message<\"livekit.proto.SetSubscribedResponse\"> & {\n};\n\n/**\n * Describes the message livekit.proto.SetSubscribedResponse.\n * Use `create(SetSubscribedResponseSchema)` to create a new message.\n */\nexport const SetSubscribedResponseSchema: GenMessage<SetSubscribedResponse> = /*@__PURE__*/\n  messageDesc(file_room, 36);\n\n/**\n * @generated from message livekit.proto.GetSessionStatsRequest\n */\nexport type GetSessionStatsRequest = Message<\"livekit.proto.GetSessionStatsRequest\"> & {\n  /**\n   * @generated from field: required uint64 room_handle = 1;\n   */\n  roomHandle: bigint;\n};\n\n/**\n * Describes the message livekit.proto.GetSessionStatsRequest.\n * Use `create(GetSessionStatsRequestSchema)` to create a new message.\n */\nexport const GetSessionStatsRequestSchema: GenMessage<GetSessionStatsRequest> = /*@__PURE__*/\n  messageDesc(file_room, 37);\n\n/**\n * @generated from message livekit.proto.GetSessionStatsResponse\n */\nexport type GetSessionStatsResponse = Message<\"livekit.proto.GetSessionStatsResponse\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n};\n\n/**\n * Describes the message livekit.proto.GetSessionStatsResponse.\n * Use `create(GetSessionStatsResponseSchema)` to create a new message.\n */\nexport const GetSessionStatsResponseSchema: GenMessage<GetSessionStatsResponse> = /*@__PURE__*/\n  messageDesc(file_room, 38);\n\n/**\n * @generated from message livekit.proto.GetSessionStatsCallback\n */\nexport type GetSessionStatsCallback = Message<\"livekit.proto.GetSessionStatsCallback\"> & {\n  /**\n   * @generated from field: required uint64 async_id = 1;\n   */\n  asyncId: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.GetSessionStatsCallback.message\n   */\n  message: {\n    /**\n     * @generated from field: string error = 2;\n     */\n    value: string;\n    case: \"error\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.GetSessionStatsCallback.Result result = 3;\n     */\n    value: GetSessionStatsCallback_Result;\n    case: \"result\";\n  } | { case: undefined; value?: undefined };\n};\n\n/**\n * Describes the message livekit.proto.GetSessionStatsCallback.\n * Use `create(GetSessionStatsCallbackSchema)` to create a new message.\n */\nexport const GetSessionStatsCallbackSchema: GenMessage<GetSessionStatsCallback> = /*@__PURE__*/\n  messageDesc(file_room, 39);\n\n/**\n * @generated from message livekit.proto.GetSessionStatsCallback.Result\n */\nexport type GetSessionStatsCallback_Result = Message<\"livekit.proto.GetSessionStatsCallback.Result\"> & {\n  /**\n   * @generated from field: repeated livekit.proto.RtcStats publisher_stats = 1;\n   */\n  publisherStats: RtcStats[];\n\n  /**\n   * @generated from field: repeated livekit.proto.RtcStats subscriber_stats = 2;\n   */\n  subscriberStats: RtcStats[];\n};\n\n/**\n * Describes the message livekit.proto.GetSessionStatsCallback.Result.\n * Use `create(GetSessionStatsCallback_ResultSchema)` to create a new message.\n */\nexport const GetSessionStatsCallback_ResultSchema: GenMessage<GetSessionStatsCallback_Result> = /*@__PURE__*/\n  messageDesc(file_room, 39, 0);\n\n/**\n * @generated from message livekit.proto.VideoEncoding\n */\nexport type VideoEncoding = Message<\"livekit.proto.VideoEncoding\"> & {\n  /**\n   * @generated from field: required uint64 max_bitrate = 1;\n   */\n  maxBitrate: bigint;\n\n  /**\n   * @generated from field: required double max_framerate = 2;\n   */\n  maxFramerate: number;\n};\n\n/**\n * Describes the message livekit.proto.VideoEncoding.\n * Use `create(VideoEncodingSchema)` to create a new message.\n */\nexport const VideoEncodingSchema: GenMessage<VideoEncoding> = /*@__PURE__*/\n  messageDesc(file_room, 40);\n\n/**\n * @generated from message livekit.proto.AudioEncoding\n */\nexport type AudioEncoding = Message<\"livekit.proto.AudioEncoding\"> & {\n  /**\n   * @generated from field: required uint64 max_bitrate = 1;\n   */\n  maxBitrate: bigint;\n};\n\n/**\n * Describes the message livekit.proto.AudioEncoding.\n * Use `create(AudioEncodingSchema)` to create a new message.\n */\nexport const AudioEncodingSchema: GenMessage<AudioEncoding> = /*@__PURE__*/\n  messageDesc(file_room, 41);\n\n/**\n * @generated from message livekit.proto.TrackPublishOptions\n */\nexport type TrackPublishOptions = Message<\"livekit.proto.TrackPublishOptions\"> & {\n  /**\n   * encodings are optional\n   *\n   * @generated from field: optional livekit.proto.VideoEncoding video_encoding = 1;\n   */\n  videoEncoding?: VideoEncoding;\n\n  /**\n   * @generated from field: optional livekit.proto.AudioEncoding audio_encoding = 2;\n   */\n  audioEncoding?: AudioEncoding;\n\n  /**\n   * @generated from field: optional livekit.proto.VideoCodec video_codec = 3;\n   */\n  videoCodec: VideoCodec;\n\n  /**\n   * @generated from field: optional bool dtx = 4;\n   */\n  dtx: boolean;\n\n  /**\n   * @generated from field: optional bool red = 5;\n   */\n  red: boolean;\n\n  /**\n   * @generated from field: optional bool simulcast = 6;\n   */\n  simulcast: boolean;\n\n  /**\n   * @generated from field: optional livekit.proto.TrackSource source = 7;\n   */\n  source: TrackSource;\n\n  /**\n   * @generated from field: optional string stream = 8;\n   */\n  stream: string;\n};\n\n/**\n * Describes the message livekit.proto.TrackPublishOptions.\n * Use `create(TrackPublishOptionsSchema)` to create a new message.\n */\nexport const TrackPublishOptionsSchema: GenMessage<TrackPublishOptions> = /*@__PURE__*/\n  messageDesc(file_room, 42);\n\n/**\n * @generated from message livekit.proto.IceServer\n */\nexport type IceServer = Message<\"livekit.proto.IceServer\"> & {\n  /**\n   * @generated from field: repeated string urls = 1;\n   */\n  urls: string[];\n\n  /**\n   * @generated from field: optional string username = 2;\n   */\n  username: string;\n\n  /**\n   * @generated from field: optional string password = 3;\n   */\n  password: string;\n};\n\n/**\n * Describes the message livekit.proto.IceServer.\n * Use `create(IceServerSchema)` to create a new message.\n */\nexport const IceServerSchema: GenMessage<IceServer> = /*@__PURE__*/\n  messageDesc(file_room, 43);\n\n/**\n * @generated from message livekit.proto.RtcConfig\n */\nexport type RtcConfig = Message<\"livekit.proto.RtcConfig\"> & {\n  /**\n   * @generated from field: optional livekit.proto.IceTransportType ice_transport_type = 1;\n   */\n  iceTransportType: IceTransportType;\n\n  /**\n   * @generated from field: optional livekit.proto.ContinualGatheringPolicy continual_gathering_policy = 2;\n   */\n  continualGatheringPolicy: ContinualGatheringPolicy;\n\n  /**\n   * empty fallback to default\n   *\n   * @generated from field: repeated livekit.proto.IceServer ice_servers = 3;\n   */\n  iceServers: IceServer[];\n};\n\n/**\n * Describes the message livekit.proto.RtcConfig.\n * Use `create(RtcConfigSchema)` to create a new message.\n */\nexport const RtcConfigSchema: GenMessage<RtcConfig> = /*@__PURE__*/\n  messageDesc(file_room, 44);\n\n/**\n * @generated from message livekit.proto.RoomOptions\n */\nexport type RoomOptions = Message<\"livekit.proto.RoomOptions\"> & {\n  /**\n   * @generated from field: optional bool auto_subscribe = 1;\n   */\n  autoSubscribe: boolean;\n\n  /**\n   * @generated from field: optional bool adaptive_stream = 2;\n   */\n  adaptiveStream: boolean;\n\n  /**\n   * @generated from field: optional bool dynacast = 3;\n   */\n  dynacast: boolean;\n\n  /**\n   * @generated from field: optional livekit.proto.E2eeOptions e2ee = 4;\n   */\n  e2ee?: E2eeOptions;\n\n  /**\n   * allow to setup a custom RtcConfiguration\n   *\n   * @generated from field: optional livekit.proto.RtcConfig rtc_config = 5;\n   */\n  rtcConfig?: RtcConfig;\n\n  /**\n   * @generated from field: optional uint32 join_retries = 6;\n   */\n  joinRetries: number;\n};\n\n/**\n * Describes the message livekit.proto.RoomOptions.\n * Use `create(RoomOptionsSchema)` to create a new message.\n */\nexport const RoomOptionsSchema: GenMessage<RoomOptions> = /*@__PURE__*/\n  messageDesc(file_room, 45);\n\n/**\n * @generated from message livekit.proto.TranscriptionSegment\n */\nexport type TranscriptionSegment = Message<\"livekit.proto.TranscriptionSegment\"> & {\n  /**\n   * @generated from field: required string id = 1;\n   */\n  id: string;\n\n  /**\n   * @generated from field: required string text = 2;\n   */\n  text: string;\n\n  /**\n   * @generated from field: required uint64 start_time = 3;\n   */\n  startTime: bigint;\n\n  /**\n   * @generated from field: required uint64 end_time = 4;\n   */\n  endTime: bigint;\n\n  /**\n   * @generated from field: required bool final = 5;\n   */\n  final: boolean;\n\n  /**\n   * @generated from field: required string language = 6;\n   */\n  language: string;\n};\n\n/**\n * Describes the message livekit.proto.TranscriptionSegment.\n * Use `create(TranscriptionSegmentSchema)` to create a new message.\n */\nexport const TranscriptionSegmentSchema: GenMessage<TranscriptionSegment> = /*@__PURE__*/\n  messageDesc(file_room, 46);\n\n/**\n * @generated from message livekit.proto.BufferInfo\n */\nexport type BufferInfo = Message<\"livekit.proto.BufferInfo\"> & {\n  /**\n   * @generated from field: required uint64 data_ptr = 1;\n   */\n  dataPtr: bigint;\n\n  /**\n   * @generated from field: required uint64 data_len = 2;\n   */\n  dataLen: bigint;\n};\n\n/**\n * Describes the message livekit.proto.BufferInfo.\n * Use `create(BufferInfoSchema)` to create a new message.\n */\nexport const BufferInfoSchema: GenMessage<BufferInfo> = /*@__PURE__*/\n  messageDesc(file_room, 47);\n\n/**\n * @generated from message livekit.proto.OwnedBuffer\n */\nexport type OwnedBuffer = Message<\"livekit.proto.OwnedBuffer\"> & {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.BufferInfo data = 2;\n   */\n  data?: BufferInfo;\n};\n\n/**\n * Describes the message livekit.proto.OwnedBuffer.\n * Use `create(OwnedBufferSchema)` to create a new message.\n */\nexport const OwnedBufferSchema: GenMessage<OwnedBuffer> = /*@__PURE__*/\n  messageDesc(file_room, 48);\n\n/**\n * @generated from message livekit.proto.RoomEvent\n */\nexport type RoomEvent = Message<\"livekit.proto.RoomEvent\"> & {\n  /**\n   * @generated from field: required uint64 room_handle = 1;\n   */\n  roomHandle: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.RoomEvent.message\n   */\n  message: {\n    /**\n     * @generated from field: livekit.proto.ParticipantConnected participant_connected = 2;\n     */\n    value: ParticipantConnected;\n    case: \"participantConnected\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ParticipantDisconnected participant_disconnected = 3;\n     */\n    value: ParticipantDisconnected;\n    case: \"participantDisconnected\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.LocalTrackPublished local_track_published = 4;\n     */\n    value: LocalTrackPublished;\n    case: \"localTrackPublished\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.LocalTrackUnpublished local_track_unpublished = 5;\n     */\n    value: LocalTrackUnpublished;\n    case: \"localTrackUnpublished\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.LocalTrackSubscribed local_track_subscribed = 6;\n     */\n    value: LocalTrackSubscribed;\n    case: \"localTrackSubscribed\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.TrackPublished track_published = 7;\n     */\n    value: TrackPublished;\n    case: \"trackPublished\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.TrackUnpublished track_unpublished = 8;\n     */\n    value: TrackUnpublished;\n    case: \"trackUnpublished\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.TrackSubscribed track_subscribed = 9;\n     */\n    value: TrackSubscribed;\n    case: \"trackSubscribed\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.TrackUnsubscribed track_unsubscribed = 10;\n     */\n    value: TrackUnsubscribed;\n    case: \"trackUnsubscribed\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.TrackSubscriptionFailed track_subscription_failed = 11;\n     */\n    value: TrackSubscriptionFailed;\n    case: \"trackSubscriptionFailed\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.TrackMuted track_muted = 12;\n     */\n    value: TrackMuted;\n    case: \"trackMuted\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.TrackUnmuted track_unmuted = 13;\n     */\n    value: TrackUnmuted;\n    case: \"trackUnmuted\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ActiveSpeakersChanged active_speakers_changed = 14;\n     */\n    value: ActiveSpeakersChanged;\n    case: \"activeSpeakersChanged\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RoomMetadataChanged room_metadata_changed = 15;\n     */\n    value: RoomMetadataChanged;\n    case: \"roomMetadataChanged\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RoomSidChanged room_sid_changed = 16;\n     */\n    value: RoomSidChanged;\n    case: \"roomSidChanged\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ParticipantMetadataChanged participant_metadata_changed = 17;\n     */\n    value: ParticipantMetadataChanged;\n    case: \"participantMetadataChanged\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ParticipantNameChanged participant_name_changed = 18;\n     */\n    value: ParticipantNameChanged;\n    case: \"participantNameChanged\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ParticipantAttributesChanged participant_attributes_changed = 19;\n     */\n    value: ParticipantAttributesChanged;\n    case: \"participantAttributesChanged\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ConnectionQualityChanged connection_quality_changed = 20;\n     */\n    value: ConnectionQualityChanged;\n    case: \"connectionQualityChanged\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ConnectionStateChanged connection_state_changed = 21;\n     */\n    value: ConnectionStateChanged;\n    case: \"connectionStateChanged\";\n  } | {\n    /**\n     * Connected connected = 21;\n     *\n     * @generated from field: livekit.proto.Disconnected disconnected = 22;\n     */\n    value: Disconnected;\n    case: \"disconnected\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.Reconnecting reconnecting = 23;\n     */\n    value: Reconnecting;\n    case: \"reconnecting\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.Reconnected reconnected = 24;\n     */\n    value: Reconnected;\n    case: \"reconnected\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.E2eeStateChanged e2ee_state_changed = 25;\n     */\n    value: E2eeStateChanged;\n    case: \"e2eeStateChanged\";\n  } | {\n    /**\n     * The stream of room events has ended\n     *\n     * @generated from field: livekit.proto.RoomEOS eos = 26;\n     */\n    value: RoomEOS;\n    case: \"eos\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.DataPacketReceived data_packet_received = 27;\n     */\n    value: DataPacketReceived;\n    case: \"dataPacketReceived\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.TranscriptionReceived transcription_received = 28;\n     */\n    value: TranscriptionReceived;\n    case: \"transcriptionReceived\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.ChatMessageReceived chat_message = 29;\n     */\n    value: ChatMessageReceived;\n    case: \"chatMessage\";\n  } | { case: undefined; value?: undefined };\n};\n\n/**\n * Describes the message livekit.proto.RoomEvent.\n * Use `create(RoomEventSchema)` to create a new message.\n */\nexport const RoomEventSchema: GenMessage<RoomEvent> = /*@__PURE__*/\n  messageDesc(file_room, 49);\n\n/**\n * @generated from message livekit.proto.RoomInfo\n */\nexport type RoomInfo = Message<\"livekit.proto.RoomInfo\"> & {\n  /**\n   * @generated from field: optional string sid = 1;\n   */\n  sid: string;\n\n  /**\n   * @generated from field: required string name = 2;\n   */\n  name: string;\n\n  /**\n   * @generated from field: required string metadata = 3;\n   */\n  metadata: string;\n};\n\n/**\n * Describes the message livekit.proto.RoomInfo.\n * Use `create(RoomInfoSchema)` to create a new message.\n */\nexport const RoomInfoSchema: GenMessage<RoomInfo> = /*@__PURE__*/\n  messageDesc(file_room, 50);\n\n/**\n * @generated from message livekit.proto.OwnedRoom\n */\nexport type OwnedRoom = Message<\"livekit.proto.OwnedRoom\"> & {\n  /**\n   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;\n   */\n  handle?: FfiOwnedHandle;\n\n  /**\n   * @generated from field: required livekit.proto.RoomInfo info = 2;\n   */\n  info?: RoomInfo;\n};\n\n/**\n * Describes the message livekit.proto.OwnedRoom.\n * Use `create(OwnedRoomSchema)` to create a new message.\n */\nexport const OwnedRoomSchema: GenMessage<OwnedRoom> = /*@__PURE__*/\n  messageDesc(file_room, 51);\n\n/**\n * @generated from message livekit.proto.ParticipantConnected\n */\nexport type ParticipantConnected = Message<\"livekit.proto.ParticipantConnected\"> & {\n  /**\n   * @generated from field: required livekit.proto.OwnedParticipant info = 1;\n   */\n  info?: OwnedParticipant;\n};\n\n/**\n * Describes the message livekit.proto.ParticipantConnected.\n * Use `create(ParticipantConnectedSchema)` to create a new message.\n */\nexport const ParticipantConnectedSchema: GenMessage<ParticipantConnected> = /*@__PURE__*/\n  messageDesc(file_room, 52);\n\n/**\n * @generated from message livekit.proto.ParticipantDisconnected\n */\nexport type ParticipantDisconnected = Message<\"livekit.proto.ParticipantDisconnected\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n};\n\n/**\n * Describes the message livekit.proto.ParticipantDisconnected.\n * Use `create(ParticipantDisconnectedSchema)` to create a new message.\n */\nexport const ParticipantDisconnectedSchema: GenMessage<ParticipantDisconnected> = /*@__PURE__*/\n  messageDesc(file_room, 53);\n\n/**\n * @generated from message livekit.proto.LocalTrackPublished\n */\nexport type LocalTrackPublished = Message<\"livekit.proto.LocalTrackPublished\"> & {\n  /**\n   * The TrackPublicationInfo comes from the PublishTrack response\n   * and the FfiClient musts wait for it before firing this event\n   *\n   * @generated from field: required string track_sid = 1;\n   */\n  trackSid: string;\n};\n\n/**\n * Describes the message livekit.proto.LocalTrackPublished.\n * Use `create(LocalTrackPublishedSchema)` to create a new message.\n */\nexport const LocalTrackPublishedSchema: GenMessage<LocalTrackPublished> = /*@__PURE__*/\n  messageDesc(file_room, 54);\n\n/**\n * @generated from message livekit.proto.LocalTrackUnpublished\n */\nexport type LocalTrackUnpublished = Message<\"livekit.proto.LocalTrackUnpublished\"> & {\n  /**\n   * @generated from field: required string publication_sid = 1;\n   */\n  publicationSid: string;\n};\n\n/**\n * Describes the message livekit.proto.LocalTrackUnpublished.\n * Use `create(LocalTrackUnpublishedSchema)` to create a new message.\n */\nexport const LocalTrackUnpublishedSchema: GenMessage<LocalTrackUnpublished> = /*@__PURE__*/\n  messageDesc(file_room, 55);\n\n/**\n * @generated from message livekit.proto.LocalTrackSubscribed\n */\nexport type LocalTrackSubscribed = Message<\"livekit.proto.LocalTrackSubscribed\"> & {\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid: string;\n};\n\n/**\n * Describes the message livekit.proto.LocalTrackSubscribed.\n * Use `create(LocalTrackSubscribedSchema)` to create a new message.\n */\nexport const LocalTrackSubscribedSchema: GenMessage<LocalTrackSubscribed> = /*@__PURE__*/\n  messageDesc(file_room, 56);\n\n/**\n * @generated from message livekit.proto.TrackPublished\n */\nexport type TrackPublished = Message<\"livekit.proto.TrackPublished\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required livekit.proto.OwnedTrackPublication publication = 2;\n   */\n  publication?: OwnedTrackPublication;\n};\n\n/**\n * Describes the message livekit.proto.TrackPublished.\n * Use `create(TrackPublishedSchema)` to create a new message.\n */\nexport const TrackPublishedSchema: GenMessage<TrackPublished> = /*@__PURE__*/\n  messageDesc(file_room, 57);\n\n/**\n * @generated from message livekit.proto.TrackUnpublished\n */\nexport type TrackUnpublished = Message<\"livekit.proto.TrackUnpublished\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string publication_sid = 2;\n   */\n  publicationSid: string;\n};\n\n/**\n * Describes the message livekit.proto.TrackUnpublished.\n * Use `create(TrackUnpublishedSchema)` to create a new message.\n */\nexport const TrackUnpublishedSchema: GenMessage<TrackUnpublished> = /*@__PURE__*/\n  messageDesc(file_room, 58);\n\n/**\n * Publication isn't needed for subscription events on the FFI\n * The FFI will retrieve the publication using the Track sid\n *\n * @generated from message livekit.proto.TrackSubscribed\n */\nexport type TrackSubscribed = Message<\"livekit.proto.TrackSubscribed\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required livekit.proto.OwnedTrack track = 2;\n   */\n  track?: OwnedTrack;\n};\n\n/**\n * Describes the message livekit.proto.TrackSubscribed.\n * Use `create(TrackSubscribedSchema)` to create a new message.\n */\nexport const TrackSubscribedSchema: GenMessage<TrackSubscribed> = /*@__PURE__*/\n  messageDesc(file_room, 59);\n\n/**\n * @generated from message livekit.proto.TrackUnsubscribed\n */\nexport type TrackUnsubscribed = Message<\"livekit.proto.TrackUnsubscribed\"> & {\n  /**\n   * The FFI language can dispose/remove the VideoSink here\n   *\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid: string;\n};\n\n/**\n * Describes the message livekit.proto.TrackUnsubscribed.\n * Use `create(TrackUnsubscribedSchema)` to create a new message.\n */\nexport const TrackUnsubscribedSchema: GenMessage<TrackUnsubscribed> = /*@__PURE__*/\n  messageDesc(file_room, 60);\n\n/**\n * @generated from message livekit.proto.TrackSubscriptionFailed\n */\nexport type TrackSubscriptionFailed = Message<\"livekit.proto.TrackSubscriptionFailed\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid: string;\n\n  /**\n   * @generated from field: required string error = 3;\n   */\n  error: string;\n};\n\n/**\n * Describes the message livekit.proto.TrackSubscriptionFailed.\n * Use `create(TrackSubscriptionFailedSchema)` to create a new message.\n */\nexport const TrackSubscriptionFailedSchema: GenMessage<TrackSubscriptionFailed> = /*@__PURE__*/\n  messageDesc(file_room, 61);\n\n/**\n * @generated from message livekit.proto.TrackMuted\n */\nexport type TrackMuted = Message<\"livekit.proto.TrackMuted\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid: string;\n};\n\n/**\n * Describes the message livekit.proto.TrackMuted.\n * Use `create(TrackMutedSchema)` to create a new message.\n */\nexport const TrackMutedSchema: GenMessage<TrackMuted> = /*@__PURE__*/\n  messageDesc(file_room, 62);\n\n/**\n * @generated from message livekit.proto.TrackUnmuted\n */\nexport type TrackUnmuted = Message<\"livekit.proto.TrackUnmuted\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid: string;\n};\n\n/**\n * Describes the message livekit.proto.TrackUnmuted.\n * Use `create(TrackUnmutedSchema)` to create a new message.\n */\nexport const TrackUnmutedSchema: GenMessage<TrackUnmuted> = /*@__PURE__*/\n  messageDesc(file_room, 63);\n\n/**\n * @generated from message livekit.proto.E2eeStateChanged\n */\nexport type E2eeStateChanged = Message<\"livekit.proto.E2eeStateChanged\"> & {\n  /**\n   * Using sid instead of identity for ffi communication\n   *\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required livekit.proto.EncryptionState state = 2;\n   */\n  state: EncryptionState;\n};\n\n/**\n * Describes the message livekit.proto.E2eeStateChanged.\n * Use `create(E2eeStateChangedSchema)` to create a new message.\n */\nexport const E2eeStateChangedSchema: GenMessage<E2eeStateChanged> = /*@__PURE__*/\n  messageDesc(file_room, 64);\n\n/**\n * @generated from message livekit.proto.ActiveSpeakersChanged\n */\nexport type ActiveSpeakersChanged = Message<\"livekit.proto.ActiveSpeakersChanged\"> & {\n  /**\n   * @generated from field: repeated string participant_identities = 1;\n   */\n  participantIdentities: string[];\n};\n\n/**\n * Describes the message livekit.proto.ActiveSpeakersChanged.\n * Use `create(ActiveSpeakersChangedSchema)` to create a new message.\n */\nexport const ActiveSpeakersChangedSchema: GenMessage<ActiveSpeakersChanged> = /*@__PURE__*/\n  messageDesc(file_room, 65);\n\n/**\n * @generated from message livekit.proto.RoomMetadataChanged\n */\nexport type RoomMetadataChanged = Message<\"livekit.proto.RoomMetadataChanged\"> & {\n  /**\n   * @generated from field: required string metadata = 1;\n   */\n  metadata: string;\n};\n\n/**\n * Describes the message livekit.proto.RoomMetadataChanged.\n * Use `create(RoomMetadataChangedSchema)` to create a new message.\n */\nexport const RoomMetadataChangedSchema: GenMessage<RoomMetadataChanged> = /*@__PURE__*/\n  messageDesc(file_room, 66);\n\n/**\n * @generated from message livekit.proto.RoomSidChanged\n */\nexport type RoomSidChanged = Message<\"livekit.proto.RoomSidChanged\"> & {\n  /**\n   * @generated from field: required string sid = 1;\n   */\n  sid: string;\n};\n\n/**\n * Describes the message livekit.proto.RoomSidChanged.\n * Use `create(RoomSidChangedSchema)` to create a new message.\n */\nexport const RoomSidChangedSchema: GenMessage<RoomSidChanged> = /*@__PURE__*/\n  messageDesc(file_room, 67);\n\n/**\n * @generated from message livekit.proto.ParticipantMetadataChanged\n */\nexport type ParticipantMetadataChanged = Message<\"livekit.proto.ParticipantMetadataChanged\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string metadata = 2;\n   */\n  metadata: string;\n};\n\n/**\n * Describes the message livekit.proto.ParticipantMetadataChanged.\n * Use `create(ParticipantMetadataChangedSchema)` to create a new message.\n */\nexport const ParticipantMetadataChangedSchema: GenMessage<ParticipantMetadataChanged> = /*@__PURE__*/\n  messageDesc(file_room, 68);\n\n/**\n * @generated from message livekit.proto.ParticipantAttributesChanged\n */\nexport type ParticipantAttributesChanged = Message<\"livekit.proto.ParticipantAttributesChanged\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: repeated livekit.proto.AttributesEntry attributes = 2;\n   */\n  attributes: AttributesEntry[];\n\n  /**\n   * @generated from field: repeated livekit.proto.AttributesEntry changed_attributes = 3;\n   */\n  changedAttributes: AttributesEntry[];\n};\n\n/**\n * Describes the message livekit.proto.ParticipantAttributesChanged.\n * Use `create(ParticipantAttributesChangedSchema)` to create a new message.\n */\nexport const ParticipantAttributesChangedSchema: GenMessage<ParticipantAttributesChanged> = /*@__PURE__*/\n  messageDesc(file_room, 69);\n\n/**\n * @generated from message livekit.proto.ParticipantNameChanged\n */\nexport type ParticipantNameChanged = Message<\"livekit.proto.ParticipantNameChanged\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string name = 2;\n   */\n  name: string;\n};\n\n/**\n * Describes the message livekit.proto.ParticipantNameChanged.\n * Use `create(ParticipantNameChangedSchema)` to create a new message.\n */\nexport const ParticipantNameChangedSchema: GenMessage<ParticipantNameChanged> = /*@__PURE__*/\n  messageDesc(file_room, 70);\n\n/**\n * @generated from message livekit.proto.ConnectionQualityChanged\n */\nexport type ConnectionQualityChanged = Message<\"livekit.proto.ConnectionQualityChanged\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required livekit.proto.ConnectionQuality quality = 2;\n   */\n  quality: ConnectionQuality;\n};\n\n/**\n * Describes the message livekit.proto.ConnectionQualityChanged.\n * Use `create(ConnectionQualityChangedSchema)` to create a new message.\n */\nexport const ConnectionQualityChangedSchema: GenMessage<ConnectionQualityChanged> = /*@__PURE__*/\n  messageDesc(file_room, 71);\n\n/**\n * @generated from message livekit.proto.UserPacket\n */\nexport type UserPacket = Message<\"livekit.proto.UserPacket\"> & {\n  /**\n   * @generated from field: required livekit.proto.OwnedBuffer data = 1;\n   */\n  data?: OwnedBuffer;\n\n  /**\n   * @generated from field: optional string topic = 2;\n   */\n  topic: string;\n};\n\n/**\n * Describes the message livekit.proto.UserPacket.\n * Use `create(UserPacketSchema)` to create a new message.\n */\nexport const UserPacketSchema: GenMessage<UserPacket> = /*@__PURE__*/\n  messageDesc(file_room, 72);\n\n/**\n * @generated from message livekit.proto.ChatMessage\n */\nexport type ChatMessage = Message<\"livekit.proto.ChatMessage\"> & {\n  /**\n   * @generated from field: required string id = 1;\n   */\n  id: string;\n\n  /**\n   * @generated from field: required int64 timestamp = 2;\n   */\n  timestamp: bigint;\n\n  /**\n   * @generated from field: required string message = 3;\n   */\n  message: string;\n\n  /**\n   * @generated from field: optional int64 edit_timestamp = 4;\n   */\n  editTimestamp: bigint;\n\n  /**\n   * @generated from field: optional bool deleted = 5;\n   */\n  deleted: boolean;\n\n  /**\n   * @generated from field: optional bool generated = 6;\n   */\n  generated: boolean;\n};\n\n/**\n * Describes the message livekit.proto.ChatMessage.\n * Use `create(ChatMessageSchema)` to create a new message.\n */\nexport const ChatMessageSchema: GenMessage<ChatMessage> = /*@__PURE__*/\n  messageDesc(file_room, 73);\n\n/**\n * @generated from message livekit.proto.ChatMessageReceived\n */\nexport type ChatMessageReceived = Message<\"livekit.proto.ChatMessageReceived\"> & {\n  /**\n   * @generated from field: required livekit.proto.ChatMessage message = 1;\n   */\n  message?: ChatMessage;\n\n  /**\n   * @generated from field: required string participant_identity = 2;\n   */\n  participantIdentity: string;\n};\n\n/**\n * Describes the message livekit.proto.ChatMessageReceived.\n * Use `create(ChatMessageReceivedSchema)` to create a new message.\n */\nexport const ChatMessageReceivedSchema: GenMessage<ChatMessageReceived> = /*@__PURE__*/\n  messageDesc(file_room, 74);\n\n/**\n * @generated from message livekit.proto.SipDTMF\n */\nexport type SipDTMF = Message<\"livekit.proto.SipDTMF\"> & {\n  /**\n   * @generated from field: required uint32 code = 1;\n   */\n  code: number;\n\n  /**\n   * @generated from field: optional string digit = 2;\n   */\n  digit: string;\n};\n\n/**\n * Describes the message livekit.proto.SipDTMF.\n * Use `create(SipDTMFSchema)` to create a new message.\n */\nexport const SipDTMFSchema: GenMessage<SipDTMF> = /*@__PURE__*/\n  messageDesc(file_room, 75);\n\n/**\n * @generated from message livekit.proto.DataPacketReceived\n */\nexport type DataPacketReceived = Message<\"livekit.proto.DataPacketReceived\"> & {\n  /**\n   * @generated from field: required livekit.proto.DataPacketKind kind = 1;\n   */\n  kind: DataPacketKind;\n\n  /**\n   * Can be empty if the data is sent a server SDK\n   *\n   * @generated from field: required string participant_identity = 2;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from oneof livekit.proto.DataPacketReceived.value\n   */\n  value: {\n    /**\n     * @generated from field: livekit.proto.UserPacket user = 4;\n     */\n    value: UserPacket;\n    case: \"user\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.SipDTMF sip_dtmf = 5;\n     */\n    value: SipDTMF;\n    case: \"sipDtmf\";\n  } | { case: undefined; value?: undefined };\n};\n\n/**\n * Describes the message livekit.proto.DataPacketReceived.\n * Use `create(DataPacketReceivedSchema)` to create a new message.\n */\nexport const DataPacketReceivedSchema: GenMessage<DataPacketReceived> = /*@__PURE__*/\n  messageDesc(file_room, 76);\n\n/**\n * @generated from message livekit.proto.TranscriptionReceived\n */\nexport type TranscriptionReceived = Message<\"livekit.proto.TranscriptionReceived\"> & {\n  /**\n   * @generated from field: optional string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: optional string track_sid = 2;\n   */\n  trackSid: string;\n\n  /**\n   * @generated from field: repeated livekit.proto.TranscriptionSegment segments = 3;\n   */\n  segments: TranscriptionSegment[];\n};\n\n/**\n * Describes the message livekit.proto.TranscriptionReceived.\n * Use `create(TranscriptionReceivedSchema)` to create a new message.\n */\nexport const TranscriptionReceivedSchema: GenMessage<TranscriptionReceived> = /*@__PURE__*/\n  messageDesc(file_room, 77);\n\n/**\n * @generated from message livekit.proto.ConnectionStateChanged\n */\nexport type ConnectionStateChanged = Message<\"livekit.proto.ConnectionStateChanged\"> & {\n  /**\n   * @generated from field: required livekit.proto.ConnectionState state = 1;\n   */\n  state: ConnectionState;\n};\n\n/**\n * Describes the message livekit.proto.ConnectionStateChanged.\n * Use `create(ConnectionStateChangedSchema)` to create a new message.\n */\nexport const ConnectionStateChangedSchema: GenMessage<ConnectionStateChanged> = /*@__PURE__*/\n  messageDesc(file_room, 78);\n\n/**\n * @generated from message livekit.proto.Connected\n */\nexport type Connected = Message<\"livekit.proto.Connected\"> & {\n};\n\n/**\n * Describes the message livekit.proto.Connected.\n * Use `create(ConnectedSchema)` to create a new message.\n */\nexport const ConnectedSchema: GenMessage<Connected> = /*@__PURE__*/\n  messageDesc(file_room, 79);\n\n/**\n * @generated from message livekit.proto.Disconnected\n */\nexport type Disconnected = Message<\"livekit.proto.Disconnected\"> & {\n  /**\n   * @generated from field: required livekit.proto.DisconnectReason reason = 1;\n   */\n  reason: DisconnectReason;\n};\n\n/**\n * Describes the message livekit.proto.Disconnected.\n * Use `create(DisconnectedSchema)` to create a new message.\n */\nexport const DisconnectedSchema: GenMessage<Disconnected> = /*@__PURE__*/\n  messageDesc(file_room, 80);\n\n/**\n * @generated from message livekit.proto.Reconnecting\n */\nexport type Reconnecting = Message<\"livekit.proto.Reconnecting\"> & {\n};\n\n/**\n * Describes the message livekit.proto.Reconnecting.\n * Use `create(ReconnectingSchema)` to create a new message.\n */\nexport const ReconnectingSchema: GenMessage<Reconnecting> = /*@__PURE__*/\n  messageDesc(file_room, 81);\n\n/**\n * @generated from message livekit.proto.Reconnected\n */\nexport type Reconnected = Message<\"livekit.proto.Reconnected\"> & {\n};\n\n/**\n * Describes the message livekit.proto.Reconnected.\n * Use `create(ReconnectedSchema)` to create a new message.\n */\nexport const ReconnectedSchema: GenMessage<Reconnected> = /*@__PURE__*/\n  messageDesc(file_room, 82);\n\n/**\n * @generated from message livekit.proto.RoomEOS\n */\nexport type RoomEOS = Message<\"livekit.proto.RoomEOS\"> & {\n};\n\n/**\n * Describes the message livekit.proto.RoomEOS.\n * Use `create(RoomEOSSchema)` to create a new message.\n */\nexport const RoomEOSSchema: GenMessage<RoomEOS> = /*@__PURE__*/\n  messageDesc(file_room, 83);\n\n/**\n * @generated from enum livekit.proto.IceTransportType\n */\nexport enum IceTransportType {\n  /**\n   * @generated from enum value: TRANSPORT_RELAY = 0;\n   */\n  TRANSPORT_RELAY = 0,\n\n  /**\n   * @generated from enum value: TRANSPORT_NOHOST = 1;\n   */\n  TRANSPORT_NOHOST = 1,\n\n  /**\n   * @generated from enum value: TRANSPORT_ALL = 2;\n   */\n  TRANSPORT_ALL = 2,\n}\n\n/**\n * Describes the enum livekit.proto.IceTransportType.\n */\nexport const IceTransportTypeSchema: GenEnum<IceTransportType> = /*@__PURE__*/\n  enumDesc(file_room, 0);\n\n/**\n * @generated from enum livekit.proto.ContinualGatheringPolicy\n */\nexport enum ContinualGatheringPolicy {\n  /**\n   * @generated from enum value: GATHER_ONCE = 0;\n   */\n  GATHER_ONCE = 0,\n\n  /**\n   * @generated from enum value: GATHER_CONTINUALLY = 1;\n   */\n  GATHER_CONTINUALLY = 1,\n}\n\n/**\n * Describes the enum livekit.proto.ContinualGatheringPolicy.\n */\nexport const ContinualGatheringPolicySchema: GenEnum<ContinualGatheringPolicy> = /*@__PURE__*/\n  enumDesc(file_room, 1);\n\n/**\n * @generated from enum livekit.proto.ConnectionQuality\n */\nexport enum ConnectionQuality {\n  /**\n   * @generated from enum value: QUALITY_POOR = 0;\n   */\n  QUALITY_POOR = 0,\n\n  /**\n   * @generated from enum value: QUALITY_GOOD = 1;\n   */\n  QUALITY_GOOD = 1,\n\n  /**\n   * @generated from enum value: QUALITY_EXCELLENT = 2;\n   */\n  QUALITY_EXCELLENT = 2,\n\n  /**\n   * @generated from enum value: QUALITY_LOST = 3;\n   */\n  QUALITY_LOST = 3,\n}\n\n/**\n * Describes the enum livekit.proto.ConnectionQuality.\n */\nexport const ConnectionQualitySchema: GenEnum<ConnectionQuality> = /*@__PURE__*/\n  enumDesc(file_room, 2);\n\n/**\n * @generated from enum livekit.proto.ConnectionState\n */\nexport enum ConnectionState {\n  /**\n   * @generated from enum value: CONN_DISCONNECTED = 0;\n   */\n  CONN_DISCONNECTED = 0,\n\n  /**\n   * @generated from enum value: CONN_CONNECTED = 1;\n   */\n  CONN_CONNECTED = 1,\n\n  /**\n   * @generated from enum value: CONN_RECONNECTING = 2;\n   */\n  CONN_RECONNECTING = 2,\n}\n\n/**\n * Describes the enum livekit.proto.ConnectionState.\n */\nexport const ConnectionStateSchema: GenEnum<ConnectionState> = /*@__PURE__*/\n  enumDesc(file_room, 3);\n\n/**\n * @generated from enum livekit.proto.DataPacketKind\n */\nexport enum DataPacketKind {\n  /**\n   * @generated from enum value: KIND_LOSSY = 0;\n   */\n  KIND_LOSSY = 0,\n\n  /**\n   * @generated from enum value: KIND_RELIABLE = 1;\n   */\n  KIND_RELIABLE = 1,\n}\n\n/**\n * Describes the enum livekit.proto.DataPacketKind.\n */\nexport const DataPacketKindSchema: GenEnum<DataPacketKind> = /*@__PURE__*/\n  enumDesc(file_room, 4);\n\n/**\n * @generated from enum livekit.proto.DisconnectReason\n */\nexport enum DisconnectReason {\n  /**\n   * @generated from enum value: UNKNOWN_REASON = 0;\n   */\n  UNKNOWN_REASON = 0,\n\n  /**\n   * the client initiated the disconnect\n   *\n   * @generated from enum value: CLIENT_INITIATED = 1;\n   */\n  CLIENT_INITIATED = 1,\n\n  /**\n   * another participant with the same identity has joined the room\n   *\n   * @generated from enum value: DUPLICATE_IDENTITY = 2;\n   */\n  DUPLICATE_IDENTITY = 2,\n\n  /**\n   * the server instance is shutting down\n   *\n   * @generated from enum value: SERVER_SHUTDOWN = 3;\n   */\n  SERVER_SHUTDOWN = 3,\n\n  /**\n   * RoomService.RemoveParticipant was called\n   *\n   * @generated from enum value: PARTICIPANT_REMOVED = 4;\n   */\n  PARTICIPANT_REMOVED = 4,\n\n  /**\n   * RoomService.DeleteRoom was called\n   *\n   * @generated from enum value: ROOM_DELETED = 5;\n   */\n  ROOM_DELETED = 5,\n\n  /**\n   * the client is attempting to resume a session, but server is not aware of it\n   *\n   * @generated from enum value: STATE_MISMATCH = 6;\n   */\n  STATE_MISMATCH = 6,\n\n  /**\n   * client was unable to connect fully\n   *\n   * @generated from enum value: JOIN_FAILURE = 7;\n   */\n  JOIN_FAILURE = 7,\n\n  /**\n   * Cloud-only, the server requested Participant to migrate the connection elsewhere\n   *\n   * @generated from enum value: MIGRATION = 8;\n   */\n  MIGRATION = 8,\n\n  /**\n   * the signal websocket was closed unexpectedly\n   *\n   * @generated from enum value: SIGNAL_CLOSE = 9;\n   */\n  SIGNAL_CLOSE = 9,\n\n  /**\n   * the room was closed, due to all Standard and Ingress participants having left\n   *\n   * @generated from enum value: ROOM_CLOSED = 10;\n   */\n  ROOM_CLOSED = 10,\n}\n\n/**\n * Describes the enum livekit.proto.DisconnectReason.\n */\nexport const DisconnectReasonSchema: GenEnum<DisconnectReason> = /*@__PURE__*/\n  enumDesc(file_room, 5);\n\n"],"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","names":["IceTransportType","ContinualGatheringPolicy","ConnectionQuality","ConnectionState","DataPacketKind","DisconnectReason"]}