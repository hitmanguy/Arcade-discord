{"version":3,"sources":["../../src/proto/e2ee_pb.ts"],"sourcesContent":["// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v2.2.0 with parameter \"target=ts,import_extension=js\"\n// @generated from file e2ee.proto (package livekit.proto, syntax proto2)\n/* eslint-disable */\n\nimport type { GenEnum, GenFile, GenMessage } from \"@bufbuild/protobuf/codegenv1\";\nimport { enumDesc, fileDesc, messageDesc } from \"@bufbuild/protobuf/codegenv1\";\nimport type { Message } from \"@bufbuild/protobuf\";\n\n/**\n * Describes the file e2ee.proto.\n */\nexport const file_e2ee: GenFile = /*@__PURE__*/\n  fileDesc(\"CgplMmVlLnByb3RvEg1saXZla2l0LnByb3RvImMKDEZyYW1lQ3J5cHRvchIcChRwYXJ0aWNpcGFudF9pZGVudGl0eRgBIAIoCRIRCgl0cmFja19zaWQYAiACKAkSEQoJa2V5X2luZGV4GAMgAigFEg8KB2VuYWJsZWQYBCACKAgidgoSS2V5UHJvdmlkZXJPcHRpb25zEhIKCnNoYXJlZF9rZXkYASABKAwSGwoTcmF0Y2hldF93aW5kb3dfc2l6ZRgCIAIoBRIUCgxyYXRjaGV0X3NhbHQYAyACKAwSGQoRZmFpbHVyZV90b2xlcmFuY2UYBCACKAUihgEKC0UyZWVPcHRpb25zEjYKD2VuY3J5cHRpb25fdHlwZRgBIAIoDjIdLmxpdmVraXQucHJvdG8uRW5jcnlwdGlvblR5cGUSPwoUa2V5X3Byb3ZpZGVyX29wdGlvbnMYAiACKAsyIS5saXZla2l0LnByb3RvLktleVByb3ZpZGVyT3B0aW9ucyIvChxFMmVlTWFuYWdlclNldEVuYWJsZWRSZXF1ZXN0Eg8KB2VuYWJsZWQYASACKAgiHwodRTJlZU1hbmFnZXJTZXRFbmFibGVkUmVzcG9uc2UiJAoiRTJlZU1hbmFnZXJHZXRGcmFtZUNyeXB0b3JzUmVxdWVzdCJaCiNFMmVlTWFuYWdlckdldEZyYW1lQ3J5cHRvcnNSZXNwb25zZRIzCg5mcmFtZV9jcnlwdG9ycxgBIAMoCzIbLmxpdmVraXQucHJvdG8uRnJhbWVDcnlwdG9yImEKHUZyYW1lQ3J5cHRvclNldEVuYWJsZWRSZXF1ZXN0EhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEhEKCXRyYWNrX3NpZBgCIAIoCRIPCgdlbmFibGVkGAMgAigIIiAKHkZyYW1lQ3J5cHRvclNldEVuYWJsZWRSZXNwb25zZSJkCh5GcmFtZUNyeXB0b3JTZXRLZXlJbmRleFJlcXVlc3QSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSEQoJdHJhY2tfc2lkGAIgAigJEhEKCWtleV9pbmRleBgDIAIoBSIhCh9GcmFtZUNyeXB0b3JTZXRLZXlJbmRleFJlc3BvbnNlIjwKE1NldFNoYXJlZEtleVJlcXVlc3QSEgoKc2hhcmVkX2tleRgBIAIoDBIRCglrZXlfaW5kZXgYAiACKAUiFgoUU2V0U2hhcmVkS2V5UmVzcG9uc2UiLAoXUmF0Y2hldFNoYXJlZEtleVJlcXVlc3QSEQoJa2V5X2luZGV4GAEgAigFIisKGFJhdGNoZXRTaGFyZWRLZXlSZXNwb25zZRIPCgduZXdfa2V5GAEgASgMIigKE0dldFNoYXJlZEtleVJlcXVlc3QSEQoJa2V5X2luZGV4GAEgAigFIiMKFEdldFNoYXJlZEtleVJlc3BvbnNlEgsKA2tleRgBIAEoDCJNCg1TZXRLZXlSZXF1ZXN0EhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAEgAigJEgsKA2tleRgCIAIoDBIRCglrZXlfaW5kZXgYAyACKAUiEAoOU2V0S2V5UmVzcG9uc2UiRAoRUmF0Y2hldEtleVJlcXVlc3QSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSEQoJa2V5X2luZGV4GAIgAigFIiUKElJhdGNoZXRLZXlSZXNwb25zZRIPCgduZXdfa2V5GAEgASgMIkAKDUdldEtleVJlcXVlc3QSHAoUcGFydGljaXBhbnRfaWRlbnRpdHkYASACKAkSEQoJa2V5X2luZGV4GAIgAigFIh0KDkdldEtleVJlc3BvbnNlEgsKA2tleRgBIAEoDCLMBQoLRTJlZVJlcXVlc3QSEwoLcm9vbV9oYW5kbGUYASACKAQSSgoTbWFuYWdlcl9zZXRfZW5hYmxlZBgCIAEoCzIrLmxpdmVraXQucHJvdG8uRTJlZU1hbmFnZXJTZXRFbmFibGVkUmVxdWVzdEgAElcKGm1hbmFnZXJfZ2V0X2ZyYW1lX2NyeXB0b3JzGAMgASgLMjEubGl2ZWtpdC5wcm90by5FMmVlTWFuYWdlckdldEZyYW1lQ3J5cHRvcnNSZXF1ZXN0SAASSwoTY3J5cHRvcl9zZXRfZW5hYmxlZBgEIAEoCzIsLmxpdmVraXQucHJvdG8uRnJhbWVDcnlwdG9yU2V0RW5hYmxlZFJlcXVlc3RIABJOChVjcnlwdG9yX3NldF9rZXlfaW5kZXgYBSABKAsyLS5saXZla2l0LnByb3RvLkZyYW1lQ3J5cHRvclNldEtleUluZGV4UmVxdWVzdEgAEjwKDnNldF9zaGFyZWRfa2V5GAYgASgLMiIubGl2ZWtpdC5wcm90by5TZXRTaGFyZWRLZXlSZXF1ZXN0SAASRAoScmF0Y2hldF9zaGFyZWRfa2V5GAcgASgLMiYubGl2ZWtpdC5wcm90by5SYXRjaGV0U2hhcmVkS2V5UmVxdWVzdEgAEjwKDmdldF9zaGFyZWRfa2V5GAggASgLMiIubGl2ZWtpdC5wcm90by5HZXRTaGFyZWRLZXlSZXF1ZXN0SAASLwoHc2V0X2tleRgJIAEoCzIcLmxpdmVraXQucHJvdG8uU2V0S2V5UmVxdWVzdEgAEjcKC3JhdGNoZXRfa2V5GAogASgLMiAubGl2ZWtpdC5wcm90by5SYXRjaGV0S2V5UmVxdWVzdEgAEi8KB2dldF9rZXkYCyABKAsyHC5saXZla2l0LnByb3RvLkdldEtleVJlcXVlc3RIAEIJCgdtZXNzYWdlIsIFCgxFMmVlUmVzcG9uc2USSwoTbWFuYWdlcl9zZXRfZW5hYmxlZBgBIAEoCzIsLmxpdmVraXQucHJvdG8uRTJlZU1hbmFnZXJTZXRFbmFibGVkUmVzcG9uc2VIABJYChptYW5hZ2VyX2dldF9mcmFtZV9jcnlwdG9ycxgCIAEoCzIyLmxpdmVraXQucHJvdG8uRTJlZU1hbmFnZXJHZXRGcmFtZUNyeXB0b3JzUmVzcG9uc2VIABJMChNjcnlwdG9yX3NldF9lbmFibGVkGAMgASgLMi0ubGl2ZWtpdC5wcm90by5GcmFtZUNyeXB0b3JTZXRFbmFibGVkUmVzcG9uc2VIABJPChVjcnlwdG9yX3NldF9rZXlfaW5kZXgYBCABKAsyLi5saXZla2l0LnByb3RvLkZyYW1lQ3J5cHRvclNldEtleUluZGV4UmVzcG9uc2VIABI9Cg5zZXRfc2hhcmVkX2tleRgFIAEoCzIjLmxpdmVraXQucHJvdG8uU2V0U2hhcmVkS2V5UmVzcG9uc2VIABJFChJyYXRjaGV0X3NoYXJlZF9rZXkYBiABKAsyJy5saXZla2l0LnByb3RvLlJhdGNoZXRTaGFyZWRLZXlSZXNwb25zZUgAEj0KDmdldF9zaGFyZWRfa2V5GAcgASgLMiMubGl2ZWtpdC5wcm90by5HZXRTaGFyZWRLZXlSZXNwb25zZUgAEjAKB3NldF9rZXkYCCABKAsyHS5saXZla2l0LnByb3RvLlNldEtleVJlc3BvbnNlSAASOAoLcmF0Y2hldF9rZXkYCSABKAsyIS5saXZla2l0LnByb3RvLlJhdGNoZXRLZXlSZXNwb25zZUgAEjAKB2dldF9rZXkYCiABKAsyHS5saXZla2l0LnByb3RvLkdldEtleVJlc3BvbnNlSABCCQoHbWVzc2FnZSovCg5FbmNyeXB0aW9uVHlwZRIICgROT05FEAASBwoDR0NNEAESCgoGQ1VTVE9NEAIqiAEKD0VuY3J5cHRpb25TdGF0ZRIHCgNORVcQABIGCgJPSxABEhUKEUVOQ1JZUFRJT05fRkFJTEVEEAISFQoRREVDUllQVElPTl9GQUlMRUQQAxIPCgtNSVNTSU5HX0tFWRAEEhEKDUtFWV9SQVRDSEVURUQQBRISCg5JTlRFUk5BTF9FUlJPUhAGQhCqAg1MaXZlS2l0LlByb3Rv\");\n\n/**\n * @generated from message livekit.proto.FrameCryptor\n */\nexport type FrameCryptor = Message<\"livekit.proto.FrameCryptor\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid: string;\n\n  /**\n   * @generated from field: required int32 key_index = 3;\n   */\n  keyIndex: number;\n\n  /**\n   * @generated from field: required bool enabled = 4;\n   */\n  enabled: boolean;\n};\n\n/**\n * Describes the message livekit.proto.FrameCryptor.\n * Use `create(FrameCryptorSchema)` to create a new message.\n */\nexport const FrameCryptorSchema: GenMessage<FrameCryptor> = /*@__PURE__*/\n  messageDesc(file_e2ee, 0);\n\n/**\n * @generated from message livekit.proto.KeyProviderOptions\n */\nexport type KeyProviderOptions = Message<\"livekit.proto.KeyProviderOptions\"> & {\n  /**\n   * Only specify if you want to use a shared_key\n   *\n   * @generated from field: optional bytes shared_key = 1;\n   */\n  sharedKey: Uint8Array;\n\n  /**\n   * @generated from field: required int32 ratchet_window_size = 2;\n   */\n  ratchetWindowSize: number;\n\n  /**\n   * @generated from field: required bytes ratchet_salt = 3;\n   */\n  ratchetSalt: Uint8Array;\n\n  /**\n   * -1 = no tolerance\n   *\n   * @generated from field: required int32 failure_tolerance = 4;\n   */\n  failureTolerance: number;\n};\n\n/**\n * Describes the message livekit.proto.KeyProviderOptions.\n * Use `create(KeyProviderOptionsSchema)` to create a new message.\n */\nexport const KeyProviderOptionsSchema: GenMessage<KeyProviderOptions> = /*@__PURE__*/\n  messageDesc(file_e2ee, 1);\n\n/**\n * @generated from message livekit.proto.E2eeOptions\n */\nexport type E2eeOptions = Message<\"livekit.proto.E2eeOptions\"> & {\n  /**\n   * @generated from field: required livekit.proto.EncryptionType encryption_type = 1;\n   */\n  encryptionType: EncryptionType;\n\n  /**\n   * @generated from field: required livekit.proto.KeyProviderOptions key_provider_options = 2;\n   */\n  keyProviderOptions?: KeyProviderOptions;\n};\n\n/**\n * Describes the message livekit.proto.E2eeOptions.\n * Use `create(E2eeOptionsSchema)` to create a new message.\n */\nexport const E2eeOptionsSchema: GenMessage<E2eeOptions> = /*@__PURE__*/\n  messageDesc(file_e2ee, 2);\n\n/**\n * @generated from message livekit.proto.E2eeManagerSetEnabledRequest\n */\nexport type E2eeManagerSetEnabledRequest = Message<\"livekit.proto.E2eeManagerSetEnabledRequest\"> & {\n  /**\n   * @generated from field: required bool enabled = 1;\n   */\n  enabled: boolean;\n};\n\n/**\n * Describes the message livekit.proto.E2eeManagerSetEnabledRequest.\n * Use `create(E2eeManagerSetEnabledRequestSchema)` to create a new message.\n */\nexport const E2eeManagerSetEnabledRequestSchema: GenMessage<E2eeManagerSetEnabledRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 3);\n\n/**\n * @generated from message livekit.proto.E2eeManagerSetEnabledResponse\n */\nexport type E2eeManagerSetEnabledResponse = Message<\"livekit.proto.E2eeManagerSetEnabledResponse\"> & {\n};\n\n/**\n * Describes the message livekit.proto.E2eeManagerSetEnabledResponse.\n * Use `create(E2eeManagerSetEnabledResponseSchema)` to create a new message.\n */\nexport const E2eeManagerSetEnabledResponseSchema: GenMessage<E2eeManagerSetEnabledResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 4);\n\n/**\n * @generated from message livekit.proto.E2eeManagerGetFrameCryptorsRequest\n */\nexport type E2eeManagerGetFrameCryptorsRequest = Message<\"livekit.proto.E2eeManagerGetFrameCryptorsRequest\"> & {\n};\n\n/**\n * Describes the message livekit.proto.E2eeManagerGetFrameCryptorsRequest.\n * Use `create(E2eeManagerGetFrameCryptorsRequestSchema)` to create a new message.\n */\nexport const E2eeManagerGetFrameCryptorsRequestSchema: GenMessage<E2eeManagerGetFrameCryptorsRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 5);\n\n/**\n * @generated from message livekit.proto.E2eeManagerGetFrameCryptorsResponse\n */\nexport type E2eeManagerGetFrameCryptorsResponse = Message<\"livekit.proto.E2eeManagerGetFrameCryptorsResponse\"> & {\n  /**\n   * @generated from field: repeated livekit.proto.FrameCryptor frame_cryptors = 1;\n   */\n  frameCryptors: FrameCryptor[];\n};\n\n/**\n * Describes the message livekit.proto.E2eeManagerGetFrameCryptorsResponse.\n * Use `create(E2eeManagerGetFrameCryptorsResponseSchema)` to create a new message.\n */\nexport const E2eeManagerGetFrameCryptorsResponseSchema: GenMessage<E2eeManagerGetFrameCryptorsResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 6);\n\n/**\n * @generated from message livekit.proto.FrameCryptorSetEnabledRequest\n */\nexport type FrameCryptorSetEnabledRequest = Message<\"livekit.proto.FrameCryptorSetEnabledRequest\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid: string;\n\n  /**\n   * @generated from field: required bool enabled = 3;\n   */\n  enabled: boolean;\n};\n\n/**\n * Describes the message livekit.proto.FrameCryptorSetEnabledRequest.\n * Use `create(FrameCryptorSetEnabledRequestSchema)` to create a new message.\n */\nexport const FrameCryptorSetEnabledRequestSchema: GenMessage<FrameCryptorSetEnabledRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 7);\n\n/**\n * @generated from message livekit.proto.FrameCryptorSetEnabledResponse\n */\nexport type FrameCryptorSetEnabledResponse = Message<\"livekit.proto.FrameCryptorSetEnabledResponse\"> & {\n};\n\n/**\n * Describes the message livekit.proto.FrameCryptorSetEnabledResponse.\n * Use `create(FrameCryptorSetEnabledResponseSchema)` to create a new message.\n */\nexport const FrameCryptorSetEnabledResponseSchema: GenMessage<FrameCryptorSetEnabledResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 8);\n\n/**\n * @generated from message livekit.proto.FrameCryptorSetKeyIndexRequest\n */\nexport type FrameCryptorSetKeyIndexRequest = Message<\"livekit.proto.FrameCryptorSetKeyIndexRequest\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required string track_sid = 2;\n   */\n  trackSid: string;\n\n  /**\n   * @generated from field: required int32 key_index = 3;\n   */\n  keyIndex: number;\n};\n\n/**\n * Describes the message livekit.proto.FrameCryptorSetKeyIndexRequest.\n * Use `create(FrameCryptorSetKeyIndexRequestSchema)` to create a new message.\n */\nexport const FrameCryptorSetKeyIndexRequestSchema: GenMessage<FrameCryptorSetKeyIndexRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 9);\n\n/**\n * @generated from message livekit.proto.FrameCryptorSetKeyIndexResponse\n */\nexport type FrameCryptorSetKeyIndexResponse = Message<\"livekit.proto.FrameCryptorSetKeyIndexResponse\"> & {\n};\n\n/**\n * Describes the message livekit.proto.FrameCryptorSetKeyIndexResponse.\n * Use `create(FrameCryptorSetKeyIndexResponseSchema)` to create a new message.\n */\nexport const FrameCryptorSetKeyIndexResponseSchema: GenMessage<FrameCryptorSetKeyIndexResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 10);\n\n/**\n * @generated from message livekit.proto.SetSharedKeyRequest\n */\nexport type SetSharedKeyRequest = Message<\"livekit.proto.SetSharedKeyRequest\"> & {\n  /**\n   * @generated from field: required bytes shared_key = 1;\n   */\n  sharedKey: Uint8Array;\n\n  /**\n   * @generated from field: required int32 key_index = 2;\n   */\n  keyIndex: number;\n};\n\n/**\n * Describes the message livekit.proto.SetSharedKeyRequest.\n * Use `create(SetSharedKeyRequestSchema)` to create a new message.\n */\nexport const SetSharedKeyRequestSchema: GenMessage<SetSharedKeyRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 11);\n\n/**\n * @generated from message livekit.proto.SetSharedKeyResponse\n */\nexport type SetSharedKeyResponse = Message<\"livekit.proto.SetSharedKeyResponse\"> & {\n};\n\n/**\n * Describes the message livekit.proto.SetSharedKeyResponse.\n * Use `create(SetSharedKeyResponseSchema)` to create a new message.\n */\nexport const SetSharedKeyResponseSchema: GenMessage<SetSharedKeyResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 12);\n\n/**\n * @generated from message livekit.proto.RatchetSharedKeyRequest\n */\nexport type RatchetSharedKeyRequest = Message<\"livekit.proto.RatchetSharedKeyRequest\"> & {\n  /**\n   * @generated from field: required int32 key_index = 1;\n   */\n  keyIndex: number;\n};\n\n/**\n * Describes the message livekit.proto.RatchetSharedKeyRequest.\n * Use `create(RatchetSharedKeyRequestSchema)` to create a new message.\n */\nexport const RatchetSharedKeyRequestSchema: GenMessage<RatchetSharedKeyRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 13);\n\n/**\n * @generated from message livekit.proto.RatchetSharedKeyResponse\n */\nexport type RatchetSharedKeyResponse = Message<\"livekit.proto.RatchetSharedKeyResponse\"> & {\n  /**\n   * @generated from field: optional bytes new_key = 1;\n   */\n  newKey: Uint8Array;\n};\n\n/**\n * Describes the message livekit.proto.RatchetSharedKeyResponse.\n * Use `create(RatchetSharedKeyResponseSchema)` to create a new message.\n */\nexport const RatchetSharedKeyResponseSchema: GenMessage<RatchetSharedKeyResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 14);\n\n/**\n * @generated from message livekit.proto.GetSharedKeyRequest\n */\nexport type GetSharedKeyRequest = Message<\"livekit.proto.GetSharedKeyRequest\"> & {\n  /**\n   * @generated from field: required int32 key_index = 1;\n   */\n  keyIndex: number;\n};\n\n/**\n * Describes the message livekit.proto.GetSharedKeyRequest.\n * Use `create(GetSharedKeyRequestSchema)` to create a new message.\n */\nexport const GetSharedKeyRequestSchema: GenMessage<GetSharedKeyRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 15);\n\n/**\n * @generated from message livekit.proto.GetSharedKeyResponse\n */\nexport type GetSharedKeyResponse = Message<\"livekit.proto.GetSharedKeyResponse\"> & {\n  /**\n   * @generated from field: optional bytes key = 1;\n   */\n  key: Uint8Array;\n};\n\n/**\n * Describes the message livekit.proto.GetSharedKeyResponse.\n * Use `create(GetSharedKeyResponseSchema)` to create a new message.\n */\nexport const GetSharedKeyResponseSchema: GenMessage<GetSharedKeyResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 16);\n\n/**\n * @generated from message livekit.proto.SetKeyRequest\n */\nexport type SetKeyRequest = Message<\"livekit.proto.SetKeyRequest\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required bytes key = 2;\n   */\n  key: Uint8Array;\n\n  /**\n   * @generated from field: required int32 key_index = 3;\n   */\n  keyIndex: number;\n};\n\n/**\n * Describes the message livekit.proto.SetKeyRequest.\n * Use `create(SetKeyRequestSchema)` to create a new message.\n */\nexport const SetKeyRequestSchema: GenMessage<SetKeyRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 17);\n\n/**\n * @generated from message livekit.proto.SetKeyResponse\n */\nexport type SetKeyResponse = Message<\"livekit.proto.SetKeyResponse\"> & {\n};\n\n/**\n * Describes the message livekit.proto.SetKeyResponse.\n * Use `create(SetKeyResponseSchema)` to create a new message.\n */\nexport const SetKeyResponseSchema: GenMessage<SetKeyResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 18);\n\n/**\n * @generated from message livekit.proto.RatchetKeyRequest\n */\nexport type RatchetKeyRequest = Message<\"livekit.proto.RatchetKeyRequest\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required int32 key_index = 2;\n   */\n  keyIndex: number;\n};\n\n/**\n * Describes the message livekit.proto.RatchetKeyRequest.\n * Use `create(RatchetKeyRequestSchema)` to create a new message.\n */\nexport const RatchetKeyRequestSchema: GenMessage<RatchetKeyRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 19);\n\n/**\n * @generated from message livekit.proto.RatchetKeyResponse\n */\nexport type RatchetKeyResponse = Message<\"livekit.proto.RatchetKeyResponse\"> & {\n  /**\n   * @generated from field: optional bytes new_key = 1;\n   */\n  newKey: Uint8Array;\n};\n\n/**\n * Describes the message livekit.proto.RatchetKeyResponse.\n * Use `create(RatchetKeyResponseSchema)` to create a new message.\n */\nexport const RatchetKeyResponseSchema: GenMessage<RatchetKeyResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 20);\n\n/**\n * @generated from message livekit.proto.GetKeyRequest\n */\nexport type GetKeyRequest = Message<\"livekit.proto.GetKeyRequest\"> & {\n  /**\n   * @generated from field: required string participant_identity = 1;\n   */\n  participantIdentity: string;\n\n  /**\n   * @generated from field: required int32 key_index = 2;\n   */\n  keyIndex: number;\n};\n\n/**\n * Describes the message livekit.proto.GetKeyRequest.\n * Use `create(GetKeyRequestSchema)` to create a new message.\n */\nexport const GetKeyRequestSchema: GenMessage<GetKeyRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 21);\n\n/**\n * @generated from message livekit.proto.GetKeyResponse\n */\nexport type GetKeyResponse = Message<\"livekit.proto.GetKeyResponse\"> & {\n  /**\n   * @generated from field: optional bytes key = 1;\n   */\n  key: Uint8Array;\n};\n\n/**\n * Describes the message livekit.proto.GetKeyResponse.\n * Use `create(GetKeyResponseSchema)` to create a new message.\n */\nexport const GetKeyResponseSchema: GenMessage<GetKeyResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 22);\n\n/**\n * @generated from message livekit.proto.E2eeRequest\n */\nexport type E2eeRequest = Message<\"livekit.proto.E2eeRequest\"> & {\n  /**\n   * @generated from field: required uint64 room_handle = 1;\n   */\n  roomHandle: bigint;\n\n  /**\n   * @generated from oneof livekit.proto.E2eeRequest.message\n   */\n  message: {\n    /**\n     * @generated from field: livekit.proto.E2eeManagerSetEnabledRequest manager_set_enabled = 2;\n     */\n    value: E2eeManagerSetEnabledRequest;\n    case: \"managerSetEnabled\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.E2eeManagerGetFrameCryptorsRequest manager_get_frame_cryptors = 3;\n     */\n    value: E2eeManagerGetFrameCryptorsRequest;\n    case: \"managerGetFrameCryptors\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.FrameCryptorSetEnabledRequest cryptor_set_enabled = 4;\n     */\n    value: FrameCryptorSetEnabledRequest;\n    case: \"cryptorSetEnabled\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.FrameCryptorSetKeyIndexRequest cryptor_set_key_index = 5;\n     */\n    value: FrameCryptorSetKeyIndexRequest;\n    case: \"cryptorSetKeyIndex\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.SetSharedKeyRequest set_shared_key = 6;\n     */\n    value: SetSharedKeyRequest;\n    case: \"setSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RatchetSharedKeyRequest ratchet_shared_key = 7;\n     */\n    value: RatchetSharedKeyRequest;\n    case: \"ratchetSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.GetSharedKeyRequest get_shared_key = 8;\n     */\n    value: GetSharedKeyRequest;\n    case: \"getSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.SetKeyRequest set_key = 9;\n     */\n    value: SetKeyRequest;\n    case: \"setKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RatchetKeyRequest ratchet_key = 10;\n     */\n    value: RatchetKeyRequest;\n    case: \"ratchetKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.GetKeyRequest get_key = 11;\n     */\n    value: GetKeyRequest;\n    case: \"getKey\";\n  } | { case: undefined; value?: undefined };\n};\n\n/**\n * Describes the message livekit.proto.E2eeRequest.\n * Use `create(E2eeRequestSchema)` to create a new message.\n */\nexport const E2eeRequestSchema: GenMessage<E2eeRequest> = /*@__PURE__*/\n  messageDesc(file_e2ee, 23);\n\n/**\n * @generated from message livekit.proto.E2eeResponse\n */\nexport type E2eeResponse = Message<\"livekit.proto.E2eeResponse\"> & {\n  /**\n   * @generated from oneof livekit.proto.E2eeResponse.message\n   */\n  message: {\n    /**\n     * @generated from field: livekit.proto.E2eeManagerSetEnabledResponse manager_set_enabled = 1;\n     */\n    value: E2eeManagerSetEnabledResponse;\n    case: \"managerSetEnabled\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.E2eeManagerGetFrameCryptorsResponse manager_get_frame_cryptors = 2;\n     */\n    value: E2eeManagerGetFrameCryptorsResponse;\n    case: \"managerGetFrameCryptors\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.FrameCryptorSetEnabledResponse cryptor_set_enabled = 3;\n     */\n    value: FrameCryptorSetEnabledResponse;\n    case: \"cryptorSetEnabled\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.FrameCryptorSetKeyIndexResponse cryptor_set_key_index = 4;\n     */\n    value: FrameCryptorSetKeyIndexResponse;\n    case: \"cryptorSetKeyIndex\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.SetSharedKeyResponse set_shared_key = 5;\n     */\n    value: SetSharedKeyResponse;\n    case: \"setSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RatchetSharedKeyResponse ratchet_shared_key = 6;\n     */\n    value: RatchetSharedKeyResponse;\n    case: \"ratchetSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.GetSharedKeyResponse get_shared_key = 7;\n     */\n    value: GetSharedKeyResponse;\n    case: \"getSharedKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.SetKeyResponse set_key = 8;\n     */\n    value: SetKeyResponse;\n    case: \"setKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.RatchetKeyResponse ratchet_key = 9;\n     */\n    value: RatchetKeyResponse;\n    case: \"ratchetKey\";\n  } | {\n    /**\n     * @generated from field: livekit.proto.GetKeyResponse get_key = 10;\n     */\n    value: GetKeyResponse;\n    case: \"getKey\";\n  } | { case: undefined; value?: undefined };\n};\n\n/**\n * Describes the message livekit.proto.E2eeResponse.\n * Use `create(E2eeResponseSchema)` to create a new message.\n */\nexport const E2eeResponseSchema: GenMessage<E2eeResponse> = /*@__PURE__*/\n  messageDesc(file_e2ee, 24);\n\n/**\n * @generated from enum livekit.proto.EncryptionType\n */\nexport enum EncryptionType {\n  /**\n   * @generated from enum value: NONE = 0;\n   */\n  NONE = 0,\n\n  /**\n   * @generated from enum value: GCM = 1;\n   */\n  GCM = 1,\n\n  /**\n   * @generated from enum value: CUSTOM = 2;\n   */\n  CUSTOM = 2,\n}\n\n/**\n * Describes the enum livekit.proto.EncryptionType.\n */\nexport const EncryptionTypeSchema: GenEnum<EncryptionType> = /*@__PURE__*/\n  enumDesc(file_e2ee, 0);\n\n/**\n * @generated from enum livekit.proto.EncryptionState\n */\nexport enum EncryptionState {\n  /**\n   * @generated from enum value: NEW = 0;\n   */\n  NEW = 0,\n\n  /**\n   * @generated from enum value: OK = 1;\n   */\n  OK = 1,\n\n  /**\n   * @generated from enum value: ENCRYPTION_FAILED = 2;\n   */\n  ENCRYPTION_FAILED = 2,\n\n  /**\n   * @generated from enum value: DECRYPTION_FAILED = 3;\n   */\n  DECRYPTION_FAILED = 3,\n\n  /**\n   * @generated from enum value: MISSING_KEY = 4;\n   */\n  MISSING_KEY = 4,\n\n  /**\n   * @generated from enum value: KEY_RATCHETED = 5;\n   */\n  KEY_RATCHETED = 5,\n\n  /**\n   * @generated from enum value: INTERNAL_ERROR = 6;\n   */\n  INTERNAL_ERROR = 6,\n}\n\n/**\n * Describes the enum livekit.proto.EncryptionState.\n */\nexport const EncryptionStateSchema: GenEnum<EncryptionState> = /*@__PURE__*/\n  enumDesc(file_e2ee, 1);\n\n"],"mappings":"AAmBA,SAAS,UAAU,UAAU,mBAAmB;AAMzC,MAAM,YACX,yBAAS,k/HAAk/H;AA+Bt/H,MAAM,qBACX,4BAAY,WAAW,CAAC;AAmCnB,MAAM,2BACX,4BAAY,WAAW,CAAC;AAqBnB,MAAM,oBACX,4BAAY,WAAW,CAAC;AAgBnB,MAAM,qCACX,4BAAY,WAAW,CAAC;AAYnB,MAAM,sCACX,4BAAY,WAAW,CAAC;AAYnB,MAAM,2CACX,4BAAY,WAAW,CAAC;AAgBnB,MAAM,4CACX,4BAAY,WAAW,CAAC;AA0BnB,MAAM,sCACX,4BAAY,WAAW,CAAC;AAYnB,MAAM,uCACX,4BAAY,WAAW,CAAC;AA0BnB,MAAM,uCACX,4BAAY,WAAW,CAAC;AAYnB,MAAM,wCACX,4BAAY,WAAW,EAAE;AAqBpB,MAAM,4BACX,4BAAY,WAAW,EAAE;AAYpB,MAAM,6BACX,4BAAY,WAAW,EAAE;AAgBpB,MAAM,gCACX,4BAAY,WAAW,EAAE;AAgBpB,MAAM,iCACX,4BAAY,WAAW,EAAE;AAgBpB,MAAM,4BACX,4BAAY,WAAW,EAAE;AAgBpB,MAAM,6BACX,4BAAY,WAAW,EAAE;AA0BpB,MAAM,sBACX,4BAAY,WAAW,EAAE;AAYpB,MAAM,uBACX,4BAAY,WAAW,EAAE;AAqBpB,MAAM,0BACX,4BAAY,WAAW,EAAE;AAgBpB,MAAM,2BACX,4BAAY,WAAW,EAAE;AAqBpB,MAAM,sBACX,4BAAY,WAAW,EAAE;AAgBpB,MAAM,uBACX,4BAAY,WAAW,EAAE;AAiFpB,MAAM,oBACX,4BAAY,WAAW,EAAE;AA4EpB,MAAM,qBACX,4BAAY,WAAW,EAAE;AAKpB,IAAK,iBAAL,kBAAKA,oBAAL;AAIL,EAAAA,gCAAA,UAAO,KAAP;AAKA,EAAAA,gCAAA,SAAM,KAAN;AAKA,EAAAA,gCAAA,YAAS,KAAT;AAdU,SAAAA;AAAA,GAAA;AAoBL,MAAM,uBACX,yBAAS,WAAW,CAAC;AAKhB,IAAK,kBAAL,kBAAKC,qBAAL;AAIL,EAAAA,kCAAA,SAAM,KAAN;AAKA,EAAAA,kCAAA,QAAK,KAAL;AAKA,EAAAA,kCAAA,uBAAoB,KAApB;AAKA,EAAAA,kCAAA,uBAAoB,KAApB;AAKA,EAAAA,kCAAA,iBAAc,KAAd;AAKA,EAAAA,kCAAA,mBAAgB,KAAhB;AAKA,EAAAA,kCAAA,oBAAiB,KAAjB;AAlCU,SAAAA;AAAA,GAAA;AAwCL,MAAM,wBACX,yBAAS,WAAW,CAAC;","names":["EncryptionType","EncryptionState"]}